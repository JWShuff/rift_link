This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.github/
  workflows/
    ci.yml
  dependabot.yml
app/
  components/
    ruby_ui/
      card/
        card_content.rb
        card_description.rb
        card_footer.rb
        card_header.rb
        card_title.rb
      typography/
        heading.rb
        inline_code.rb
        inline_link.rb
        text.rb
        typography_blockquote.rb
      base.rb
      button.rb
      card.rb
      link.rb
    action_button.rb
    activity_feed.rb
    activity_item.rb
    avatar.rb
    base.rb
    card_menu.rb
    nav_section.rb
    profile_badge.rb
    realm_card.rb
    sidenav_item.rb
    sidenav.rb
    status_indicator.rb
  controllers/
    identity/
      email_verifications_controller.rb
      emails_controller.rb
      password_resets_controller.rb
    application_controller.rb
    home_controller.rb
    passwords_controller.rb
    registrations_controller.rb
    sessions_controller.rb
  frontend/
    entrypoints/
      application.css
      application.js
    javascript/
      controllers/
        application.js
        hello_controller.js
        index.js
        sidenav_controller.js
      application.js
    stylesheets/
      application.tailwind.css
  helpers/
    application_helper.rb
  jobs/
    application_job.rb
  mailers/
    application_mailer.rb
    user_mailer.rb
  models/
    activity.rb
    application_record.rb
    channel.rb
    current.rb
    direct_message_participant.rb
    direct_message_thread.rb
    event_participant.rb
    event.rb
    friend.rb
    group_chat.rb
    membership.rb
    message.rb
    notification.rb
    realm.rb
    session.rb
    user_profile.rb
    user.rb
  views/
    home/
      index.rb
      show.rb
    identity/
      emails/
        edit.rb
      password_resets/
        edit.rb
        new.rb
    passwords/
      edit.rb
    pwa/
      manifest.json.erb
      service-worker.js
    registrations/
      new.rb
    sessions/
      index.rb
      new.rb
    user_mailer/
      email_verification.html.erb
      password_reset.html.erb
    base.rb
bin/
  brakeman
  bundle
  dev
  docker-entrypoint
  jobs
  kamal
  rails
  rake
  rename_project
  render-build.sh
  rubocop
  setup
  thrust
  vite
config/
  environments/
    development.rb
    production.rb
    test.rb
  initializers/
    content_security_policy.rb
    filter_parameter_logging.rb
    inflections.rb
    phlex.rb
    ruby_ui.rb
  locales/
    en.yml
  application.rb
  boot.rb
  cable.yml
  cache.yml
  credentials.yml.enc
  database.yml
  deploy.yml
  environment.rb
  puma.rb
  queue.yml
  recurring.yml
  routes.rb
  storage.yml
  vite.json
db/
  migrate/
    20250319015108_create_users.rb
    20250319015109_create_sessions.rb
    20250403001733_create_user_profiles.rb
    20250403001737_create_group_chats.rb
    20250403001738_create_memberships.rb
    20250403001740_create_messages.rb
    20250403001741_create_direct_message_threads.rb
    20250403001742_create_direct_message_participants.rb
    20250403001744_create_friends.rb
    20250403001745_create_notifications.rb
    20250403002032_create_realms.rb
    20250403002107_create_channels.rb
    20250403002118_create_events.rb
    20250403002119_create_event_participants.rb
    20250403022640_create_activities.rb
  cable_schema.rb
  cache_schema.rb
  queue_schema.rb
  schema.rb
  seeds.rb
docs/
  installing_prerequisites.md
lib/
  tasks/
    annotate_rb.rake
public/
  400.html
  404.html
  406-unsupported-browser.html
  422.html
  500.html
  icon.svg
  robots.txt
test/
  controllers/
    identity/
      email_verifications_controller_test.rb
      emails_controller_test.rb
      password_resets_controller_test.rb
    passwords_controller_test.rb
    registrations_controller_test.rb
    sessions_controller_test.rb
  fixtures/
    activities.yml
    channels.yml
    direct_message_participants.yml
    direct_message_threads.yml
    event_participants.yml
    events.yml
    friends.yml
    group_chats.yml
    memberships.yml
    messages.yml
    notifications.yml
    realms.yml
    user_profiles.yml
    users.yml
  mailers/
    user_mailer_test.rb
  models/
    activity_test.rb
    channel_test.rb
    direct_message_participant_test.rb
    direct_message_thread_test.rb
    event_participant_test.rb
    event_test.rb
    friend_test.rb
    group_chat_test.rb
    membership_test.rb
    message_test.rb
    notification_test.rb
    realm_test.rb
    user_profile_test.rb
  application_system_test_case.rb
  test_helper.rb
.annotaterb.yml
.dockerignore
.env.sample
.gitignore
.rubocop-https---www-goodcop-style-base-yml
.rubocop.yml
.ruby-version
config.ru
Dockerfile
Gemfile
package.json
Procfile
Procfile.dev
Rakefile
README.md
vite.config.mts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="app/components/ruby_ui/card/card_content.rb">
# frozen_string_literal: true

module RubyUI
  class CardContent < Base
    def view_template(&)
      div(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'p-6 pt-0',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/card/card_description.rb">
# frozen_string_literal: true

module RubyUI
  class CardDescription < Base
    def view_template(&)
      p(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'text-sm text-muted-foreground',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/card/card_footer.rb">
# frozen_string_literal: true

module RubyUI
  class CardFooter < Base
    def view_template(&)
      div(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'items-center p-6 pt-0',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/card/card_header.rb">
# frozen_string_literal: true

module RubyUI
  class CardHeader < Base
    def view_template(&)
      div(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'flex flex-col space-y-1.5 p-6',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/card/card_title.rb">
# frozen_string_literal: true

module RubyUI
  class CardTitle < Base
    def view_template(&)
      h3(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'font-semibold leading-none tracking-tight',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/typography/heading.rb">
# frozen_string_literal: true

module RubyUI
  class Heading < Base
    def initialize(level: nil, as: nil, size: nil, **attrs)
      @level = level
      @as = as
      @size = size
      super(**attrs)
    end

    def view_template(&)
      tag = determine_tag
      public_send(tag, **attrs, &)
    end

    private

    def determine_tag
      return @as if @as
      return "h#{@level}" if @level
      'h1'
    end

    def default_attrs
      {
        class: class_names,
      }
    end

    def class_names
      base_classes = 'scroll-m-20 font-bold tracking-tight'
      size_class = size_to_class[(@size || level_to_size[@level&.to_s] || '6').to_s]
      "#{base_classes} #{size_class}"
    end

    def size_to_class
      {
        '1' => 'text-xs',
        '2' => 'text-sm',
        '3' => 'text-base',
        '4' => 'text-lg',
        '5' => 'text-xl',
        '6' => 'text-2xl',
        '7' => 'text-3xl lg:text-4xl',
        '8' => 'text-4xl',
        '9' => 'text-5xl',
      }
    end

    def level_to_size
      {
        '1' => '7',
        '2' => '6',
        '3' => '5',
        '4' => '4',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/typography/inline_code.rb">
# frozen_string_literal: true

module RubyUI
  class InlineCode < Base
    def view_template(&)
      code(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/typography/inline_link.rb">
# frozen_string_literal: true

module RubyUI
  class InlineLink < Base
    def initialize(href:, **attrs)
      super(**attrs)
      @href = href
    end

    def view_template(&)
      a(href: @href, **attrs, &)
    end

    private

    def default_attrs
      {
        class: 'text-primary font-medium hover:underline underline-offset-4 cursor-pointer',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/typography/text.rb">
# frozen_string_literal: true

module RubyUI
  class Text < Base
    def initialize(as: 'p', size: '3', weight: 'regular', **attrs)
      @as = as
      @size = size
      @weight = weight
      super(**attrs)
    end

    def view_template(&)
      public_send(@as, **attrs, &)
    end

    private

    def default_attrs
      {
        class: class_names,
      }
    end

    def class_names
      "#{size_to_class[@size]} #{weight_to_class[@weight]}"
    end

    def size_to_class
      {
        '1' => 'text-xs',
        'xs' => 'text-xs',
        '2' => 'text-sm',
        'sm' => 'text-sm',
        '3' => 'text-base',
        'base' => 'text-base',
        '4' => 'text-lg',
        'lg' => 'text-lg',
        '5' => 'text-xl',
        'xl' => 'text-xl',
        '6' => 'text-2xl',
        '2xl' => 'text-2xl',
        '7' => 'text-3xl',
        '3xl' => 'text-3xl',
        '8' => 'text-4xl',
        '4xl' => 'text-4xl',
        '9' => 'text-5xl',
        '5xl' => 'text-5xl',
      }
    end

    def weight_to_class
      {
        'muted' => 'text-muted-foreground',
        'light' => 'font-light',
        'regular' => 'font-normal',
        'medium' => 'font-medium',
        'semibold' => 'font-semibold',
        'bold' => 'font-bold',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/typography/typography_blockquote.rb">
# frozen_string_literal: true

module RubyUI
  class TypographyBlockquote < Base
    def view_template(&)
      blockquote(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'mt-6 border-l-2 pl-6 italic',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/base.rb">
# frozen_string_literal: true

require 'tailwind_merge'

module RubyUI
  class Base < Phlex::HTML
    TAILWIND_MERGER = ::TailwindMerge::Merger.new.freeze unless defined?(TAILWIND_MERGER)

    attr_reader :attrs

    def initialize(**user_attrs)
      @attrs = mix(default_attrs, user_attrs)
      @attrs[:class] = TAILWIND_MERGER.merge(@attrs[:class]) if @attrs[:class]
    end

    private

    def default_attrs
      {}
    end
  end
end
</file>

<file path="app/components/ruby_ui/button.rb">
# frozen_string_literal: true

module RubyUI
  class Button < Base
    def initialize(type: :button, variant: :primary, size: :md, icon: false, **attrs)
      @type = type
      @variant = variant.to_sym
      @size = size.to_sym
      @icon = icon
      super(**attrs)
    end

    def view_template(&)
      button(**attrs, &)
    end

    private

    def size_classes
      if @icon
        case @size
        when :sm then 'h-6 w-6'
        when :md then 'h-9 w-9'
        when :lg then 'h-10 w-10'
        when :xl then 'h-12 w-12'
        end
      else
        case @size
        when :sm then 'px-3 py-1.5 h-8 text-xs'
        when :md then 'px-4 py-2 h-9 text-sm'
        when :lg then 'px-4 py-2 h-10 text-base'
        when :xl then 'px-6 py-3 h-12 text-base'
        end
      end
    end

    def primary_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90',
        size_classes,
      ]
    end

    def link_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 text-primary underline-offset-4 hover:underline',
        size_classes,
      ]
    end

    def secondary_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-opacity-80',
        size_classes,
      ]
    end

    def destructive_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',
        size_classes,
      ]
    end

    def outline_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',
        size_classes,
      ]
    end

    def ghost_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground',
        size_classes,
      ]
    end

    def default_classes
      case @variant
      when :primary then primary_classes
      when :link then link_classes
      when :secondary then secondary_classes
      when :destructive then destructive_classes
      when :outline then outline_classes
      when :ghost then ghost_classes
      end
    end

    def default_attrs
      {
        type: @type,
        class: default_classes,
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/card.rb">
# frozen_string_literal: true

module RubyUI
  class Card < Base
    def view_template(&)
      div(**attrs, &)
    end

    private

    def default_attrs
      {
        class: 'rounded-xl border bg-background shadow',
      }
    end
  end
end
</file>

<file path="app/components/ruby_ui/link.rb">
# frozen_string_literal: true

module RubyUI
  class Link < Base
    def initialize(href: '#', variant: :link, size: :md, icon: false, **attrs)
      @href = href
      @variant = variant.to_sym
      @size = size.to_sym
      @icon = icon
      super(**attrs)
    end

    def view_template(&)
      a(href: @href, **attrs, &)
    end

    private

    def size_classes
      if @icon
        case @size
        when :sm then 'h-6 w-6'
        when :md then 'h-9 w-9'
        when :lg then 'h-10 w-10'
        when :xl then 'h-12 w-12'
        end
      else
        case @size
        when :sm then 'px-3 py-1.5 h-8 text-xs'
        when :md then 'px-4 py-2 h-9 text-sm'
        when :lg then 'px-4 py-2 h-10 text-base'
        when :xl then 'px-6 py-3 h-12 text-base'
        end
      end
    end

    def primary_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90',
        size_classes,
      ]
    end

    def link_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 text-primary underline-offset-4 hover:underline',
        size_classes,
      ]
    end

    def secondary_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground hover:bg-opacity-80',
        size_classes,
      ]
    end

    def destructive_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',
        size_classes,
      ]
    end

    def outline_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',
        size_classes,
      ]
    end

    def ghost_classes
      [
        'whitespace-nowrap inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground',
        size_classes,
      ]
    end

    def default_classes
      case @variant
      when :primary then primary_classes
      when :link then link_classes
      when :secondary then secondary_classes
      when :destructive then destructive_classes
      when :outline then outline_classes
      when :ghost then ghost_classes
      end
    end

    def default_attrs
      {
        type: 'button',
        class: default_classes,
      }
    end
  end
end
</file>

<file path="app/components/action_button.rb">
# frozen_string_literal: true

module Components
  class ActionButton < Components::Base
    EMPTY_HASH = {}.freeze

    prop :text, String, reader: :private
    prop :href, _Nilable(String), default: nil, reader: :private
    prop :variant, Symbol, default: :primary, reader: :private
    prop :size, Symbol, default: :medium, reader: :private
    prop :method, _Nilable(Symbol), default: nil, reader: :private
    prop :data, Hash, default: EMPTY_HASH, reader: :private

    def view_template(&block)
      if href.present?
        if method.present?
          button_to(href, method:, class: button_classes, data:) do
            yield if block_given?
            span { text }
          end
        else
          link_to(href, class: button_classes, data:) do
            yield if block_given?
            span { text }
          end
        end
      else
        button(type: 'button', class: button_classes, data:) do
          yield if block_given?
          span { text }
        end
      end
    end

    private

    def button_classes
      base_classes = []

      # Size classes
      size_classes = case size
                     when :small
                       'px-3 py-1 text-xs rounded-full'
                     when :medium
                       'px-4 py-2 text-sm rounded-md'
                     when :large
                       'px-5 py-3 text-base rounded-md'
                     else
                       'px-4 py-2 text-sm rounded-md'
      end

      # Variant classes
      variant_classes = case variant
                        when :primary
                          'bg-gradient-to-r from-cyan-500 to-purple-600 hover:from-cyan-400 hover:to-purple-500 text-white shadow-lg shadow-cyan-500/20'
                        when :secondary
                          'bg-cyan-500/20 text-cyan-300 hover:bg-cyan-500/30'
                        when :outline
                          'border border-white/20 text-white hover:bg-white/10'
                        when :ghost
                          'text-white hover:bg-white/10'
                        when :destructive
                          'bg-red-500/20 text-red-300 hover:bg-red-500/30'
                        else
                          'bg-cyan-500/20 text-cyan-300 hover:bg-cyan-500/30'
      end

      # Common classes
      common_classes = 'font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:ring-offset-zinc-900'

      # Combine all classes
      base_classes.concat([size_classes, variant_classes, common_classes]).join(' ')
    end
  end
end
</file>

<file path="app/components/activity_feed.rb">
# frozen_string_literal: true

module Components
  class ActivityFeed < Components::Base
    prop :activities, ActiveRecord::Relation(Activity), reader: :private
    prop :title, String, default: -> { 'Recent Activity' }, reader: :private
    prop :view_all_href, String, default: -> { '#' }, reader: :private

    def view_template
      div(class: 'bg-white/5 backdrop-blur-sm rounded-lg border border-white/10 overflow-hidden') do
        render_header
        render_activities
      end
    end

    private

    def render_header
      div(class: 'px-4 py-3 border-b border-white/10 flex items-center justify-between') do
        h3(class: 'font-medium text-white') { title }

        link_to view_all_href, class: 'text-xs text-cyan-300 hover:text-cyan-200 transition-colors' do
          'View All'
        end
      end
    end

    def render_activities
      if activities.any?
        div(class: 'divide-y divide-white/5') do
          activities.each do |activity|
            Components::ActivityItem(activity:)
          end
        end
      else
        div(class: 'px-4 py-8 text-center') do
          p(class: 'text-sm text-white/50') { 'No recent activity' }
        end
      end
    end
  end
end
</file>

<file path="app/components/activity_item.rb">
# frozen_string_literal: true

module Components
  class ActivityItem < Components::Base
    prop :activity, Object, reader: :private

    def view_template
      div(class: 'px-4 py-3 hover:bg-white/5 transition-colors') do
        div(class: 'flex items-center') do
          render_avatar
          render_content
        end
      end
    end

    private

    def render_avatar
      Components::Avatar(
        user: activity.user,
        size: :small,
        bg_class: 'bg-gradient-to-br from-indigo-500 to-purple-600'
      )
    end

    def render_content
      div(class: 'flex-1 min-w-0 ml-3') do
        render_activity_text
        render_timestamp
      end
    end

    def render_activity_text
      p(class: 'text-sm text-white') do
        span(class: 'font-medium text-cyan-300 hover:underline') { activity.user.username }
        span { " #{activity.action} " }

        target_name = if activity.respond_to?(:target_name)
          activity.target_name
        elsif activity.respond_to?(:target) && activity.target.respond_to?(:name)
          activity.target.name
        else
          'unknown'
        end

        span(class: 'font-medium text-indigo-300 hover:underline') { target_name }
      end
    end

    def render_timestamp
      p(class: 'text-xs text-white/50') do
        if activity.respond_to?(:created_at)
          helpers.time_ago_in_words(activity.created_at) + ' ago'
        else
          'recently'
        end
      end
    end
  end
end
</file>

<file path="app/components/avatar.rb">
# frozen_string_literal: true

module Components
  class Avatar < Components::Base
    prop :user, Object, reader: :private
    prop :size, Symbol, default: :medium, reader: :private
    prop :bg_class, String, default: -> { 'bg-gradient-to-br from-indigo-500 to-purple-600' }, reader: :private

    def view_template
      div(class: "#{size_class} rounded-full #{bg_class} flex items-center justify-center overflow-hidden") do
        if user.respond_to?(:avatar_url) && user.avatar_url.present?
          img(src: user.avatar_url, alt: "#{user.username}'s avatar", class: 'w-full h-full object-cover')
        else
          span(class: "text-white #{font_class}") { initials }
        end
      end
    end

    private

    def size_class
      case size
      when :small
        'w-8 h-8'
      when :medium
        'w-10 h-10'
      when :large
        'w-12 h-12'
      else
        'w-10 h-10'
      end
    end

    def font_class
      case size
      when :small
        'text-xs font-bold'
      when :medium
        'text-sm font-bold'
      when :large
        'text-base font-bold'
      else
        'text-sm font-bold'
      end
    end

    def initials
      if user.respond_to?(:username)
        user.username[0..1].upcase
      elsif user.respond_to?(:name)
        user.name[0..1].upcase
      else
        '??'
      end
    end
  end
end
</file>

<file path="app/components/base.rb">
# frozen_string_literal: true

module Components
  extend Phlex::Kit
  class Base < Phlex::HTML
    include Components
    include RubyUI
    include Phlex::Rails::Helpers::Routes
    include Phlex::Rails::Helpers::ButtonTo
    include Phlex::Rails::Helpers::LinkTo
    include Phlex::Rails::Helpers::ContentFor
    include Phlex::Rails::Helpers::Tag
    include Phlex::Rails::Helpers::CSPMetaTag
    include Phlex::Rails::Helpers::FormWith
    include Phlex::Rails::Helpers::Label
    include Phlex::Rails::Helpers::EmailField
    include Phlex::Rails::Helpers::PasswordField
    include Phlex::Rails::Helpers::HiddenField
    include Phlex::Rails::Helpers::Notice
    include Phlex::Rails::Helpers::Pluralize
    include Phlex::Rails::Helpers::DOMID
    include Phlex::Rails::Helpers::TurboStreamFrom
    include Phlex::Rails::Helpers::TurboFrameTag
    include Phlex::Rails::Helpers::ActionCableMetaTag
    include PhlexIcons
    extend Literal::Properties

    # Include any helpers you want to be available across all components
    include Phlex::Rails::Helpers::Routes

    if Rails.env.development?
      def before_template
        comment { "Before #{self.class.name}" }
        super
      end
    end
  end
end
</file>

<file path="app/components/card_menu.rb">
# frozen_string_literal: true

module Components
  class CardMenu < Components::Base
    EMPTY_ARRAY = [].freeze

    prop :items, Array, default: EMPTY_ARRAY, reader: :private

    def view_template
      button(class: 'p-1.5 rounded-full hover:bg-white/10 transition-colors', data: { controller: 'dropdown' }) do
        Lucide::EllipsisVertical class: 'h-4 w-4 text-white/70'

        # Dropdown menu would be added here in a real implementation
        # Using data controller for dropdown functionality
      end
    end
  end
end
</file>

<file path="app/components/nav_section.rb">
# frozen_string_literal: true

module Components
  class NavSection < Components::Base
    prop :title, String, reader: :private

    def view_template(&block)
      div(class: 'mb-4') do
        h3(class: 'px-4 mb-2 text-xs font-semibold text-cyan-300 uppercase tracking-wider') { title }
        div(class: 'space-y-1') do
          yield if block_given?
        end
      end
    end
  end
end
</file>

<file path="app/components/profile_badge.rb">
# frozen_string_literal: true

module Components
  class ProfileBadge < Components::Base
    prop :user, User, reader: :private
    prop :status, String, default: -> { 'online' }, reader: :private

    def view_template
      div(class: 'p-4 border-b border-white/10') do
        div(class: 'flex items-center space-x-3') do
          render_avatar
          render_user_info
          render_status_menu
        end
      end
    end

    private

    def render_avatar
      Components::Avatar(
        user:,
        size: :medium,
        bg_class: 'bg-gradient-to-br from-cyan-500 to-purple-600'
      )
    end

    def render_user_info
      div(class: 'flex-1 min-w-0') do
        h3(class: 'text-sm font-medium text-white truncate') { user.username }
        div(class: 'flex items-center') do
          Components::StatusIndicator(status:)
          p(class: 'text-xs text-green-400') { status.capitalize }
        end
      end
    end

    def render_status_menu
      button(class: 'p-1 rounded-md hover:bg-white/10') do
        Lucide::ChevronDown class: 'h-4 w-4 text-white/70'
      end
    end
  end
end
</file>

<file path="app/components/realm_card.rb">
# frozen_string_literal: true

module Components
  class RealmCard < Components::Base
    prop :realm, Object, reader: :private
    prop :header_class, String, default: -> { 'h-20 bg-gradient-to-r from-indigo-600 to-purple-600 relative' }, reader: :private

    def view_template
      div(class: 'bg-white/5 backdrop-blur-sm rounded-lg border border-white/10 overflow-hidden hover:border-cyan-500/50 transition-colors shadow-lg group') do
        render_header
        render_content
      end
    end

    private

    def render_header
      div(class: header_class) do
        div(class: 'absolute inset-0 opacity-20 bg-pattern-hex')

        if realm.respond_to?(:banner_url) && realm.banner_url.present?
          img(src: realm.banner_url, alt: "#{realm.name} banner", class: 'absolute inset-0 w-full h-full object-cover')
        end
      end
    end

    def render_content
      div(class: 'p-4') do
        render_card_header
        render_description
        render_footer
      end
    end

    def render_card_header
      div(class: 'flex items-start justify-between') do
        h3(class: 'text-lg font-semibold text-white group-hover:text-cyan-300 transition-colors') { realm.name }
        Components::CardMenu
      end
    end

    def render_description
      p(class: 'mt-1 text-sm text-white/70 line-clamp-2') { realm.description }
    end

    def render_footer
      div(class: 'mt-4 flex items-center justify-between') do
        render_member_count
        render_join_button
      end
    end

    def render_member_count
      div(class: 'flex items-center text-xs text-white/60') do
        Lucide::Users class: 'h-3.5 w-3.5 mr-1'
        span { "#{realm.member_count} members" }
      end
    end

    def render_join_button
      Components::ActionButton(
        text: joined? ? 'Leave' : 'Join',
        variant: :secondary,
        size: :small,
        href: '#'
      )
    end

    def joined?
      if realm.respond_to?(:joined?)
        realm.joined?
      elsif realm.respond_to?(:member?)
        realm.member?(Current.user)
      else
        false
      end
    end
  end
end
</file>

<file path="app/components/sidenav_item.rb">
# frozen_string_literal: true

module Components
  class SidenavItem < Components::Base
    prop :text, String, reader: :private
    prop :href, String, reader: :private
    prop :form_method, _Nilable(Symbol), default: nil, reader: :private

    def view_template(&block)
      if form_method
        button_to href, method: form_method, class: 'w-full group flex items-center px-4 py-2 text-sm font-medium rounded-md text-white hover:bg-white/10 transition-colors' do
          yield if block_given?
          span { text }
        end
      else
        link_to href, class: 'group flex items-center px-4 py-2 text-sm font-medium rounded-md text-white hover:bg-white/10 transition-colors' do
          yield if block_given?
          span { text }
        end
      end
    end
  end
end
</file>

<file path="app/components/sidenav.rb">
# frozen_string_literal: true

module Components
  class Sidenav < Components::Base
    EMPTY_ARRAY = [].freeze

    prop :user, User, reader: :private
    prop :sections, Array, default: -> { [] }, reader: :private
    prop :control_items, Array, default: EMPTY_ARRAY, reader: :private

    def view_template
      div(class: 'w-64 h-full flex flex-col bg-zinc-800/50 border-r border-white/10 backdrop-blur-sm transition-all duration-300', data: { controller: 'sidenav', sidenav_target: 'panel' }) do
        # Top Profile Section
        render_profile_section

        # Navigation Sections
        div(class: 'flex-1 overflow-y-auto px-2 py-4') do
          sections.each do |section|
            Components::NavSection(title: section[:title]) do
              section[:items].each do |item|
                Components::SidenavItem(text: item[:text], href: item[:href], form_method: item[:form_method]) do
                  render item[:icon_component].new(class: 'mr-3 h-5 w-5 text-indigo-300 group-hover:text-cyan-300 transition-colors')
                end
              end
            end
          end
        end

        # Bottom Control Section
        render_control_section

        # Collapse button
        render_collapse_button
      end
    end

    private

    def render_profile_section
      Components::ProfileBadge(user:)
    end

    def render_control_section
      div(class: 'mt-auto px-2 py-4 border-t border-white/10') do
        control_items.each do |item|
          Components::SidenavItem(text: item[:text], href: item[:href], form_method: item[:form_method]) do
            render item[:icon_component].new(class: 'mr-3 h-5 w-5 text-indigo-300 group-hover:text-cyan-300 transition-colors')
          end
        end
      end
    end

    def render_collapse_button
      button(class: 'absolute top-1/2 -right-3 bg-cyan-500 rounded-full p-1 shadow-lg border border-cyan-400', data: { action: 'click->sidenav#toggle' }) do
        Lucide::ChevronLeft class: 'h-4 w-4 text-white'
      end
    end
  end
end
</file>

<file path="app/components/status_indicator.rb">
# frozen_string_literal: true

module Components
  class StatusIndicator < Components::Base
    prop :status, String, default: -> { 'online' }, reader: :private

    def view_template
      div(class: "h-2 w-2 rounded-full #{status_color} mr-2")
    end

    private

    def status_color
      case status.to_s.downcase
      when 'online'
        'bg-green-500'
      when 'idle', 'away'
        'bg-yellow-500'
      when 'busy', 'do_not_disturb'
        'bg-red-500'
      when 'offline'
        'bg-gray-500'
      else
        'bg-gray-500'
      end
    end
  end
end
</file>

<file path="app/controllers/identity/email_verifications_controller.rb">
# frozen_string_literal: true

module Identity
  class EmailVerificationsController < ApplicationController
    skip_before_action :authenticate, only: :show

    before_action :set_user, only: :show

    def show
      @user.update! verified: true
      redirect_to root_path, notice: 'Thank you for verifying your email address'
    end

    def create
      send_email_verification
      redirect_to root_path, notice: 'We sent a verification email to your email address'
    end

  private

    def set_user
      @user = User.find_by_token_for!(:email_verification, params[:sid])
    rescue
      redirect_to edit_identity_email_path, alert: 'That email verification link is invalid'
    end

    def send_email_verification
      UserMailer.with(user: Current.user).email_verification.deliver_later
    end
  end
end
</file>

<file path="app/controllers/identity/emails_controller.rb">
# frozen_string_literal: true

module Identity
  class EmailsController < ApplicationController
    before_action :set_user

    def edit
      render Views::Identity::Emails::Edit.new(alert:, user: @user)
    end

    def update
      if @user.update(user_params)
        redirect_to_root
      else
        render Views::Identity::Emails::Edit.new(alert:, user: @user), status: :unprocessable_entity
      end
    end

  private

    def set_user
      @user = Current.user
    end

    def user_params
      params.permit(:email, :password_challenge).with_defaults(password_challenge: '')
    end

    def redirect_to_root
      if @user.email_previously_changed?
        resend_email_verification
        redirect_to root_path, notice: 'Your email has been changed'
      else
        redirect_to root_path
      end
    end

    def resend_email_verification
      UserMailer.with(user: @user).email_verification.deliver_later
    end
  end
end
</file>

<file path="app/controllers/identity/password_resets_controller.rb">
# frozen_string_literal: true

module Identity
  class PasswordResetsController < ApplicationController
    skip_before_action :authenticate

    before_action :set_user, only: %i[edit update]

    def new
      render Views::Identity::PasswordResets::New.new(alert:)
    end

    def edit
      render Views::Identity::PasswordResets::Edit.new(user: @user, params:)
    end

    def create
      if (@user = User.find_by(email: params[:email], verified: true))
        send_password_reset_email
        redirect_to sign_in_path, notice: 'Check your email for reset instructions'
      else
        redirect_to new_identity_password_reset_path, alert: "You can't reset your password until you verify your email"
      end
    end

    def update
      if @user.update(user_params)
        redirect_to sign_in_path, notice: 'Your password was reset successfully. Please sign in'
      else
        render Views::Identity::PasswordResets::Edit.new(user: @user, params:), status: :unprocessable_entity
      end
    end

  private

    def set_user
      @user = User.find_by_token_for!(:password_reset, params[:sid])
    rescue
      redirect_to new_identity_password_reset_path, alert: 'That password reset link is invalid'
    end

    def user_params
      params.permit(:password, :password_confirmation)
    end

    def send_password_reset_email
      UserMailer.with(user: @user).password_reset.deliver_later
    end
  end
end
</file>

<file path="app/controllers/passwords_controller.rb">
# frozen_string_literal: true

class PasswordsController < ApplicationController
  before_action :set_user

  def edit
    render Views::Passwords::Edit.new(alert:, user: @user)
  end

  def update
    if @user.update(user_params)
      redirect_to root_path, notice: 'Your password has been changed'
    else
      render Views::Passwords::Edit.new(alert:, user: @user), status: :unprocessable_entity
    end
  end

  private

  def set_user
    @user = Current.user
  end

  def user_params
    params.permit(:password, :password_confirmation, :password_challenge).with_defaults(password_challenge: '')
  end
end
</file>

<file path="app/controllers/registrations_controller.rb">
# frozen_string_literal: true

class RegistrationsController < ApplicationController
  skip_before_action :authenticate

  def new
    @user = User.new
    render Views::Registrations::New.new(user: @user)
  end

  def create
    ActiveRecord::Base.transaction do
      @user = User.new(user_params)

      if @user.save
        # Create the associated user profile
        @user_profile = UserProfile.new(user_profile_params)
        @user_profile.user = @user
        @user_profile.gaming_status = 'offline' # Default status

        if @user_profile.save
          # Handle successful registration
          session_record = @user.sessions.create!
          cookies.signed.permanent[:session_token] = { value: session_record.id, httponly: true }
          send_email_verification
          redirect_to root_path, notice: 'Welcome to RiftLink! Your account has been created successfully.'
          return # Exit early to avoid transaction issues
        else
          # Add profile errors to user for display
          @user_profile.errors.each do |error|
            @user.errors.add(:base, "Profile #{error.attribute} #{error.message}")
          end
          raise ActiveRecord::Rollback # Roll back the transaction
        end
      end

      # If we get here, either user or profile creation failed
      render Views::Registrations::New.new(user: @user), status: :unprocessable_entity
    end
  end

  private

  def user_params
    params.permit(:email, :password, :password_confirmation)
  end

  def user_profile_params
    params.permit(:username)
  end

  def send_email_verification
    UserMailer.with(user: @user).email_verification.deliver_later
  end
end
</file>

<file path="app/controllers/sessions_controller.rb">
# frozen_string_literal: true

class SessionsController < ApplicationController
  skip_before_action :authenticate, only: %i[new create]

  before_action :set_session, only: :destroy

  def index
    @sessions = Current.user.sessions.order(created_at: :desc)
    render Views::Sessions::Index.new(notice:, session:, sessions: @sessions)
  end

  def new
    render Views::Sessions::New.new(alert:, notice:, params:)
  end

  def create
    if (user = User.authenticate_by(email: params[:email], password: params[:password]))
      @session = user.sessions.create!
      cookies.signed.permanent[:session_token] = { value: @session.id, httponly: true }

      redirect_to root_path, notice: 'Signed in successfully'
    else
      redirect_to sign_in_path(email_hint: params[:email]), alert: 'That email or password is incorrect'
    end
  end

  def destroy
    @session.destroy; redirect_to(sessions_path, notice: 'That session has been logged out')
  end

  private

  def set_session
    @session = Current.user.sessions.find(params[:id])
  end
end
</file>

<file path="app/frontend/javascript/controllers/sidenav_controller.js">
import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  static targets = ["panel"]

  connect() {
    const collapsed = localStorage.getItem('sidenavCollapsed') === 'true'
    if (collapsed) {
      this.collapse()
    }
  }

  toggle() {
    if (this.panelTarget.classList.contains('w-64')) {
      this.collapse()
    } else {
      this.expand()
    }
  }

  collapse() {
    this.panelTarget.classList.remove('w-64')
    this.panelTarget.classList.add('w-16')
    localStorage.setItem('sidenavCollapsed', 'true')
  }

  expand() {
    this.panelTarget.classList.remove('w-16')
    this.panelTarget.classList.add('w-64')
    localStorage.setItem('sidenavCollapsed', 'false')
  }
}
</file>

<file path="app/helpers/application_helper.rb">
# frozen_string_literal: true

module ApplicationHelper
end
</file>

<file path="app/jobs/application_job.rb">
# frozen_string_literal: true

class ApplicationJob < ActiveJob::Base
  # Automatically retry jobs that encountered a deadlock
  # retry_on ActiveRecord::Deadlocked

  # Most jobs are safe to ignore if the underlying records are no longer available
  # discard_on ActiveJob::DeserializationError
end
</file>

<file path="app/mailers/application_mailer.rb">
# frozen_string_literal: true

class ApplicationMailer < ActionMailer::Base
  default from: 'from@example.com'
  layout 'mailer'
end
</file>

<file path="app/mailers/user_mailer.rb">
# frozen_string_literal: true

class UserMailer < ApplicationMailer
  def password_reset
    @user = params[:user]
    @signed_id = @user.generate_token_for(:password_reset)

    mail to: @user.email, subject: 'Reset your password'
  end

  def email_verification
    @user = params[:user]
    @signed_id = @user.generate_token_for(:email_verification)

    mail to: @user.email, subject: 'Verify your email'
  end
end
</file>

<file path="app/models/activity.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: activities
#
#  id          :bigint           not null, primary key
#  user_id     :bigint           not null
#  action      :string
#  target_name :string
#  target_type :string           not null
#  target_id   :bigint           not null
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#
# Indexes
#
#  index_activities_on_target  (target_type,target_id)
#  index_activities_on_user_id (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Activity < ApplicationRecord
  belongs_to :user
  belongs_to :target, polymorphic: true

  validates :action, presence: true
  validates :target_name, presence: true

  scope :recent, -> { order(created_at: :desc) }
end
</file>

<file path="app/models/application_record.rb">
# frozen_string_literal: true

class ApplicationRecord < ActiveRecord::Base
  primary_abstract_class
end
</file>

<file path="app/models/channel.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: channels
#
#  id          :bigint           not null, primary key
#  realm_id    :bigint           not null
#  name        :string
#  description :text
#  channel_type :string
#  is_private  :boolean
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#
# Indexes
#
#  index_channels_on_realm_id  (realm_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#
class Channel < ApplicationRecord
  belongs_to :realm

  has_many :messages, as: :messageable, dependent: :destroy
  has_many :memberships, as: :membershipable, dependent: :destroy
  has_many :members, through: :memberships, source: :user

  validates :name, presence: true
  validates :channel_type, inclusion: { in: ['text', 'voice', 'video'] }

  # By default, all members of a realm can access public channels
  def accessible_by?(user)
    !is_private? || memberships.exists?(user:) || realm.member?(user)
  end
end
</file>

<file path="app/models/current.rb">
# frozen_string_literal: true

class Current < ActiveSupport::CurrentAttributes
  attribute :session
  attribute :user_agent, :ip_address

  delegate :user, to: :session, allow_nil: true
end
</file>

<file path="app/models/direct_message_participant.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: direct_message_participants
#
#  id                      :bigint           not null, primary key
#  direct_message_thread_id :bigint           not null
#  user_id                 :bigint           not null
#  created_at              :datetime         not null
#  updated_at              :datetime         not null
#
# Indexes
#
#  index_dm_participants_on_thread_id  (direct_message_thread_id)
#  index_dm_participants_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (direct_message_thread_id => direct_message_threads.id)
#  fk_rails_...  (user_id => users.id)
#
class DirectMessageParticipant < ApplicationRecord
  belongs_to :direct_message_thread
  belongs_to :user

  validates :user_id, uniqueness: { scope: :direct_message_thread_id }
end
</file>

<file path="app/models/direct_message_thread.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: direct_message_threads
#
#  id         :bigint           not null, primary key
#  created_at :datetime         not null
#  updated_at :datetime         not null
#
class DirectMessageThread < ApplicationRecord
  has_many :participants, class_name: 'DirectMessageParticipant', dependent: :destroy
  has_many :users, through: :participants
  has_many :messages, as: :messageable, dependent: :destroy

  # Check if a user is a participant
  def participant?(user)
    participants.exists?(user:)
  end

  # Get the other participant in a 1-on-1 conversation
  def other_participant(user)
    participants.where.not(user:).first&.user
  end

  # Get all participants except the given user
  def other_participants(user)
    users.where.not(id: user.id)
  end

  # Get the last message
  def last_message
    messages.order(created_at: :desc).first
  end

  # Get the title for display (uses usernames of participants)
  def display_title(current_user)
    others = other_participants(current_user).includes(:profile)
    if others.any?
      others.map { |u| u.profile&.username || 'Unknown User' }.join(', ')
    else
      'Empty Conversation'
    end
  end
end
</file>

<file path="app/models/event_participant.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: event_participants
#
#  id         :bigint           not null, primary key
#  event_id   :bigint           not null
#  user_id    :bigint           not null
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#
# Indexes
#
#  index_event_participants_on_event_id  (event_id)
#  index_event_participants_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (event_id => events.id)
#  fk_rails_...  (user_id => users.id)
#
class EventParticipant < ApplicationRecord
  belongs_to :event
  belongs_to :user

  validates :status, inclusion: { in: ['going', 'maybe', 'not_going'] }
  validates :user_id, uniqueness: { scope: :event_id }

  before_validation :set_default_status, on: :create

  private

  def set_default_status
    self.status ||= 'going'
  end
end
</file>

<file path="app/models/event.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: events
#
#  id          :bigint           not null, primary key
#  realm_id    :bigint           not null
#  user_id     :bigint           not null
#  title       :string
#  description :text
#  start_time  :datetime
#  end_time    :datetime
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#
# Indexes
#
#  index_events_on_realm_id  (realm_id)
#  index_events_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#  fk_rails_...  (user_id => users.id)
#
class Event < ApplicationRecord
  belongs_to :realm
  belongs_to :creator, class_name: 'User', foreign_key: 'user_id'

  has_many :event_participants, dependent: :destroy
  has_many :participants, through: :event_participants, source: :user
  has_many :activities, as: :target, dependent: :destroy

  validates :title, presence: true
  validates :start_time, presence: true
  validate :end_time_after_start_time, if: -> { start_time.present? && end_time.present? }

  scope :upcoming, -> { where('start_time > ?', Time.current).order(start_time: :asc) }
  scope :past, -> { where('end_time < ?', Time.current).order(start_time: :desc) }
  scope :in_progress, -> { where('start_time < ? AND end_time > ?', Time.current, Time.current) }

  # Get participant count
  def participant_count
    event_participants.count
  end

  # Check if a user is a participant
  def participant?(user)
    event_participants.exists?(user:)
  end

  # Get participant status
  def status_for(user)
    event_participants.find_by(user:)&.status
  end

  private

  def end_time_after_start_time
    if end_time <= start_time
      errors.add(:end_time, 'must be after the start time')
    end
  end
end
</file>

<file path="app/models/friend.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: friends
#
#  id         :bigint           not null, primary key
#  user_id    :bigint           not null
#  friend_id  :bigint           not null
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#
# Indexes
#
#  index_friends_on_friend_id  (friend_id)
#  index_friends_on_user_id    (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (friend_id => users.id)
#  fk_rails_...  (user_id => users.id)
#
class Friend < ApplicationRecord
  belongs_to :user
  belongs_to :friend, class_name: 'User'

  validates :status, inclusion: { in: ['pending', 'accepted', 'rejected', 'blocked'] }
  validates :friend_id, uniqueness: { scope: :user_id }
  validate :not_self_referential

  scope :accepted, -> { where(status: 'accepted') }
  scope :pending, -> { where(status: 'pending') }
  scope :incoming_requests, -> (user_id) { where(friend_id: user_id, status: 'pending') }
  scope :outgoing_requests, -> (user_id) { where(user_id:, status: 'pending') }

  private

  def not_self_referential
    if user_id == friend_id
      errors.add(:friend_id, "can't be the same as user")
    end
  end
end
</file>

<file path="app/models/group_chat.rb">
class GroupChat < ApplicationRecord
  belongs_to :creator
end
</file>

<file path="app/models/membership.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: memberships
#
#  id                :bigint           not null, primary key
#  user_id           :bigint           not null
#  member_role       :string
#  nickname          :string
#  membershipable_type :string           not null
#  membershipable_id :bigint           not null
#  joined_at         :datetime
#  created_at        :datetime         not null
#  updated_at        :datetime         not null
#
# Indexes
#
#  index_memberships_on_membershipable  (membershipable_type,membershipable_id)
#  index_memberships_on_user_id        (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Membership < ApplicationRecord
  belongs_to :user
  belongs_to :membershipable, polymorphic: true

  validates :member_role, inclusion: { in: ['admin', 'moderator', 'member'] }
  validates :user_id, uniqueness: { scope: [:membershipable_id, :membershipable_type] }

  before_validation :set_default_role, on: :create
  before_validation :set_joined_at, on: :create

  private

  def set_default_role
    self.member_role ||= 'member'
  end

  def set_joined_at
    self.joined_at ||= Time.current
  end
end
</file>

<file path="app/models/message.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: messages
#
#  id               :bigint           not null, primary key
#  user_id          :bigint           not null
#  content          :text
#  attachment_url   :string
#  is_pinned        :boolean
#  messageable_type :string           not null
#  messageable_id   :bigint           not null
#  created_at       :datetime         not null
#  updated_at       :datetime         not null
#
# Indexes
#
#  index_messages_on_messageable  (messageable_type,messageable_id)
#  index_messages_on_user_id     (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Message < ApplicationRecord
  belongs_to :user
  belongs_to :messageable, polymorphic: true

  validates :content, presence: true, unless: -> { attachment_url.present? }

  scope :recent, -> { order(created_at: :desc) }

  # Check if the message can be edited by a user
  def editable_by?(user)
    return false unless user
    user_id == user.id ||
      (messageable.respond_to?(:realm) &&
       messageable.realm.memberships.exists?(user:, member_role: ['admin', 'moderator']))
  end

  # Check if the message can be deleted by a user
  def deletable_by?(user)
    return false unless user
    user_id == user.id ||
      (messageable.respond_to?(:realm) &&
       messageable.realm.memberships.exists?(user:, member_role: ['admin', 'moderator']))
  end
end
</file>

<file path="app/models/notification.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: notifications
#
#  id                :bigint           not null, primary key
#  user_id           :bigint           not null
#  source_type       :string
#  source_id         :string
#  notification_type :string
#  read              :boolean
#  created_at        :datetime         not null
#  updated_at        :datetime         not null
#
# Indexes
#
#  index_notifications_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Notification < ApplicationRecord
  belongs_to :user

  NOTIFICATION_TYPES = [
    'friend_request',
    'friend_accepted',
    'realm_invite',
    'message_mention',
    'event_invite',
    'event_reminder',
  ].freeze

  validates :notification_type, inclusion: { in: NOTIFICATION_TYPES }

  scope :unread, -> { where(read: false) }
  scope :recent, -> { order(created_at: :desc).limit(15) }

  before_validation :set_default_read_status, on: :create

  def mark_as_read
    update(read: true)
  end

  private

  def set_default_read_status
    self.read = false if read.nil?
  end
end
</file>

<file path="app/models/realm.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: realms
#
#  id          :bigint           not null, primary key
#  name        :string
#  description :text
#  icon        :string
#  banner      :string
#  user_id     :bigint           not null
#  is_public   :boolean
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#
# Indexes
#
#  index_realms_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Realm < ApplicationRecord
  belongs_to :owner, class_name: 'User', foreign_key: 'user_id'

  has_many :channels, dependent: :destroy
  has_many :memberships, as: :membershipable, dependent: :destroy
  has_many :members, through: :memberships, source: :user
  has_many :events, dependent: :destroy
  has_many :activities, as: :target, dependent: :destroy

  validates :name, presence: true

  # Check if a user is a member
  def member?(user)
    memberships.exists?(user:)
  end

  # Get role of a user
  def role_for(user)
    memberships.find_by(user:)&.member_role
  end

  # Get member count
  def member_count
    memberships.count
  end

  # Convenience method for views
  def joined?(user = Current.user)
    member?(user)
  end

  # Method for banner URL - in real app would use ActiveStorage
  def banner_url
    banner if banner.present?
  end
end
</file>

<file path="app/models/session.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: sessions
#
#  id         :bigint           not null, primary key
#  ip_address :string
#  user_agent :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#  user_id    :bigint           not null
#
# Indexes
#
#  index_sessions_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class Session < ApplicationRecord
  belongs_to :user

  before_create do
    self.user_agent = Current.user_agent
    self.ip_address = Current.ip_address
  end
end
</file>

<file path="app/models/user_profile.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: user_profiles
#
#  id           :bigint           not null, primary key
#  user_id      :bigint           not null
#  username     :string
#  display_name :string
#  avatar       :string
#  bio          :text
#  gaming_status :string
#  created_at   :datetime         not null
#  updated_at   :datetime         not null
#
# Indexes
#
#  index_user_profiles_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
class UserProfile < ApplicationRecord
  belongs_to :user

  validates :username, presence: true, uniqueness: true
  validates :gaming_status, inclusion: { in: ['online', 'away', 'busy', 'offline'] }, allow_nil: true

  def avatar_url
    # In a real app, this would be connected to ActiveStorage or similar
    # For now, return avatar field or nil to use the initials fallback
    avatar
  end
end
</file>

<file path="app/views/home/index.rb">
# frozen_string_literal: true

module Views
  module Home
    class Index < Views::Base
      def view_template
        div(class: 'flex h-screen bg-zinc-900 text-white overflow-hidden') do
          # Side Navigation using Component
          Components::Sidenav(
            user: Current.user,
            sections: sidenav_sections,
            control_items: sidenav_control_items
          )

          # Main content area
          main(class: 'flex-1 overflow-y-auto') do
            div(class: 'container mx-auto p-6') do
              h1(class: 'text-3xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-500') do
                'Welcome to RiftLink'
              end

              render_realms_section

              Components::ActivityFeed(
                activities: fetch_activities,
                title: 'Recent Activity',
                view_all_href: '#activities'
              )
            end
          end
        end
      end

      def page_title
        'RiftLink Home'
      end

      private

      def render_realms_section
        div(class: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8') do
          fetch_realms.each do |realm|
            Components::RealmCard(realm:)
          end
        end
      end

      def sidenav_sections
        [
          {
            title: 'Pinned Realms',
            items: fetch_pinned_realms.map { |realm|
              { text: realm.name, href: realm_path(realm), icon_component: Lucide::Star, form_method: nil }
            },
          },
          {
            title: 'My Realms',
            items: fetch_my_realms.map { |realm|
              { text: realm.name, href: realm_path(realm), icon_component: Lucide::Hash, form_method: nil }
            },
          },
          {
            title: 'Direct Messages',
            items: fetch_direct_messages.map { |thread|
              partner = thread.participants.reject { |p| p.user_id == Current.user.id }.first&.user
              next unless partner && partner.profile
              {
                text: partner.profile.username,
                href: direct_message_thread_path(thread),
                icon_component: Lucide::MessageSquare,
                form_method: nil,
              }
            }.compact,
          },
          {
            title: 'Explore',
            items: [
              { text: 'Discover Realms', href: explore_realms_path, icon_component: Lucide::Compass, form_method: nil },
              { text: 'Find Friends', href: users_path, icon_component: Lucide::Users, form_method: nil },
              { text: 'Popular Games', href: games_path, icon_component: Lucide::Gamepad2, form_method: nil },
            ],
          },
        ]
      end

      def sidenav_control_items
        [
          { text: 'Settings', href: settings_path, icon_component: Lucide::Settings, form_method: nil },
          {
            text: 'Sign Out',
            href: session_path(Current.session),
            form_method: :delete,
            icon_component: Lucide::LogOut,
          },
        ]
      end

      # Data fetching methods - now fetching from the database
      def fetch_realms
        # Get featured realms (most active by membership count)
        Realm.left_joins(:memberships)
          .select('realms.*, COUNT(memberships.id) as member_count')
          .where(is_public: true)
          .group('realms.id')
          .order('member_count DESC')
          .limit(6)
      end

      def fetch_pinned_realms
        # Get realms that the user has pinned
        # For now we're just getting the two with the earliest membership
        Current.user.realms
          .joins(:memberships)
          .where(memberships: { user_id: Current.user.id })
          .order('memberships.joined_at ASC')
          .limit(2)
      end

      def fetch_my_realms
        # Get all realms the user is a member of excluding pinned realms
        pinned_ids = fetch_pinned_realms.pluck(:id)
        Current.user.realms
          .where.not(id: pinned_ids)
          .limit(5)
      end

      def fetch_direct_messages
        # Get user's direct message threads with most recent messages first
        DirectMessageThread.joins(:participants)
          .where(direct_message_participants: { user_id: Current.user.id })
          .joins('LEFT JOIN messages ON messages.messageable_type = \'DirectMessageThread\' AND messages.messageable_id = direct_message_threads.id')
          .select('direct_message_threads.*, MAX(messages.created_at) as last_message_at')
          .group('direct_message_threads.id')
          .order('last_message_at DESC NULLS LAST')
          .limit(3)
      end

      def fetch_activities
        # Get recent activities across the platform
        Activity.includes(:user)
          .order(created_at: :desc)
          .limit(5)
      end
    end
  end
end
</file>

<file path="app/views/home/show.rb">
# frozen_string_literal: true

module Views
  module Home
    class Show < Views::Base
      def view_template
      end

      def page_title
        'Home'
      end
    end
  end
end
</file>

<file path="app/views/identity/emails/edit.rb">
# frozen_string_literal: true

module Views
  module Identity
    module Emails
      class Edit < Views::Base
        include Phlex::Rails::Helpers::Pluralize
        prop :alert, _Nilable(String)
        prop :user, User
        attr_accessor :alert, :user

        def view_template
          div(class: 'min-h-screen bg-white dark:bg-zinc-900 flex flex-col justify-center py-12 sm:px-6 lg:px-8') do
            div(class: 'max-w-md mx-auto') do
              if alert
                p(class: 'mb-6 p-4 text-destructive bg-destructive/10 border border-destructive/20 rounded-md') { alert }
              end

              if user.verified?
                h1(class: 'text-center text-3xl font-bold text-zinc-900 dark:text-zinc-50 mb-8') { 'Change your email' }
              else
                h1(class: 'text-center text-3xl font-bold text-zinc-900 dark:text-zinc-50 mb-8') { 'Verify your email' }
                p(class: 'text-center mb-4 text-zinc-600 dark:text-zinc-400') do
                  "We sent a verification email to the address below. Check that email and follow those instructions to confirm it's your email address."
                end
                div(class: 'mb-8') do
                  button_to('Re-send verification email',
                    identity_email_verification_path,
                    class: 'w-full flex justify-center py-2 px-4
                      border border-transparent rounded-md shadow-sm
                      text-sm font-medium text-white
                      bg-primary hover:bg-primary/90
                      focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary
                      dark:focus:ring-offset-zinc-900
                      transition-colors')
                end
              end

              form_with(url: identity_email_path, method: :patch, class: 'mt-8 space-y-6') do |form|
                if user.errors.any?
                  div(class: 'bg-destructive/10 border-l-4 border-destructive p-4 mb-6 rounded-r-md') do
                    h2(class: 'text-destructive dark:text-destructive-foreground text-lg font-medium mb-2') do
                      pluralize(user.errors.count, 'error')
                      ' prohibited this user from being saved:'
                    end
                    ul(class: 'list-disc pl-5 text-destructive dark:text-destructive-foreground/90') do
                      user.errors.each { |error| li { error.full_message } }
                    end
                  end
                end

                div(class: 'space-y-4') do
                  div do
                    form.label(:email,
                      'New email',
                      class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                    form.email_field(:email,
                      required: true,
                      autofocus: true,
                      class: 'appearance-none block w-full px-3 py-2
                        border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                        placeholder-zinc-400 dark:placeholder-zinc-600
                        bg-white dark:bg-zinc-800
                        text-zinc-900 dark:text-zinc-100
                        focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                        dark:focus:ring-primary/40 dark:focus:border-primary/40')
                  end

                  div do
                    form.label(:password,
                      class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                    form.password_field(:password_challenge,
                      required: true,
                      autocomplete: 'current-password',
                      class: 'appearance-none block w-full px-3 py-2
                        border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                        placeholder-zinc-400 dark:placeholder-zinc-600
                        bg-white dark:bg-zinc-800
                        text-zinc-900 dark:text-zinc-100
                        focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                        dark:focus:ring-primary/40 dark:focus:border-primary/40')
                  end

                  div(class: 'mt-6') do
                    form.submit('Save changes',
                      class: 'w-full flex justify-center py-2 px-4
                        border border-transparent rounded-md shadow-sm
                        text-sm font-medium text-white
                        bg-primary hover:bg-primary/90
                        focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary
                        dark:focus:ring-offset-zinc-900
                        transition-colors')
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/identity/password_resets/edit.rb">
# frozen_string_literal: true

module Views
  module Identity
    module PasswordResets
      class Edit < Views::Base
        include Phlex::Rails::Helpers::Pluralize
        prop :user, User
        prop :params, ActionController::Parameters
        attr_accessor :params, :user

        def view_template
          div(class: 'min-h-screen bg-white dark:bg-zinc-900 flex flex-col justify-center py-12 sm:px-6 lg:px-8') do
            div(class: 'max-w-md mx-auto') do
              h1(class: 'text-center text-3xl font-bold text-zinc-900 dark:text-zinc-50 mb-8') { 'Reset your password' }

              form_with(url: identity_password_reset_path, method: :patch, class: 'mt-8 space-y-6') do |form|
                if user.errors.any?
                  div(class: 'bg-destructive/10 border-l-4 border-destructive p-4 mb-6 rounded-r-md') do
                    h2(class: 'text-destructive dark:text-destructive-foreground text-lg font-medium mb-2') do
                      pluralize(user.errors.count, 'error')
                      plain ' prohibited this user from being saved:'
                    end
                    ul(class: 'list-disc pl-5 text-destructive dark:text-destructive-foreground/90') do
                      user.errors.each { |error| li { error.full_message } }
                    end
                  end
                end

                form.hidden_field(:sid, value: params[:sid])

                div(class: 'space-y-4') do
                  div do
                    form.label(:password,
                      'New password',
                      class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                    form.password_field(:password,
                      required: true,
                      autofocus: true,
                      autocomplete: 'new-password',
                      class: 'appearance-none block w-full px-3 py-2
                        border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                        placeholder-zinc-400 dark:placeholder-zinc-600
                        bg-white dark:bg-zinc-800
                        text-zinc-900 dark:text-zinc-100
                        focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                        dark:focus:ring-primary/40 dark:focus:border-primary/40')
                    div(class: 'mt-1 text-sm text-zinc-500 dark:text-zinc-400') { '12 characters minimum.' }
                  end

                  div do
                    form.label(:password_confirmation,
                      'Confirm new password',
                      class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                    form.password_field(:password_confirmation,
                      required: true,
                      autocomplete: 'new-password',
                      class: 'appearance-none block w-full px-3 py-2
                        border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                        placeholder-zinc-400 dark:placeholder-zinc-600
                        bg-white dark:bg-zinc-800
                        text-zinc-900 dark:text-zinc-100
                        focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                        dark:focus:ring-primary/40 dark:focus:border-primary/40')
                  end

                  div(class: 'mt-6') do
                    form.submit('Save changes',
                      class: 'w-full flex justify-center py-2 px-4
                        border border-transparent rounded-md shadow-sm
                        text-sm font-medium text-white
                        bg-primary hover:bg-primary/90
                        focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary
                        dark:focus:ring-offset-zinc-900
                        transition-colors')
                  end
                end
              end

              div(class: 'mt-6 text-center text-sm') do
                link_to 'Back to sign in',
                  sign_in_path,
                  class: 'font-medium text-primary hover:text-primary/80 transition-colors'
              end
            end
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/identity/password_resets/new.rb">
# frozen_string_literal: true

module Views
  module Identity
    module PasswordResets
      class New < Views::Base
        prop :alert, _Nilable(String)
        attr_reader :alert

        def view_template
          div(class: 'min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8 relative overflow-hidden') do
            # Animated background elements
            render_animated_background

            # Main content container with glassmorphism effect
            div(class: 'relative z-10 max-w-md mx-auto bg-white/10 backdrop-blur-xl rounded-xl shadow-2xl overflow-hidden border border-white/20') do
              div(class: 'px-8 pt-8 pb-10') do
                logo
                render_alert if alert
                heading
                password_reset_form
                footer_links
              end
            end
          end
        end

        def render_animated_background
          div(class: 'absolute inset-0 overflow-hidden') do
            # Portal/rift effect circles
            div(class: 'absolute -top-20 -right-20 w-64 h-64 bg-purple-500/30 rounded-full blur-3xl animate-pulse')
            div(class: 'absolute -bottom-32 -left-20 w-80 h-80 bg-blue-500/20 rounded-full blur-3xl animate-pulse delay-700')
            div(class: 'absolute top-1/4 left-1/3 w-40 h-40 bg-cyan-500/20 rounded-full blur-2xl animate-pulse delay-1000')

            # Grid lines effect (optional)
            div(class: 'absolute inset-0 bg-grid-white/[0.03] bg-[size:30px_30px]')
          end
        end

        def logo
          div(class: 'flex justify-center mb-6') do
            div(class: 'text-white text-3xl font-bold tracking-wider flex items-center') do
              span(class: 'text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-500') { 'RIFT' }
              span(class: 'text-white') { 'LINK' }
            end
          end
        end

        def render_alert
          div(class: 'mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-md backdrop-blur-sm') do
            div(class: 'flex items-center') do
              render Lucide::CircleAlert class: 'h-5 w-5 mr-2 text-red-400'
              p(class: 'text-sm text-red-100') { alert }
            end
          end
        end

        def heading
          h1(class: 'text-center text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-cyan-200 to-white mb-2') do
            'Reset Password'
          end
          p(class: 'text-center text-cyan-200/70 text-sm mb-8') do
            'Enter your email to receive a password reset link'
          end
        end

        def password_reset_form
          form_with(url: identity_password_reset_path, class: 'space-y-6') do |form|
            div(class: 'space-y-5') do
              # Email field
              div do
                div(class: 'flex items-center justify-between mb-1') do
                  form.label :email, 'Email', class: 'block text-sm font-medium text-cyan-100'
                end
                div(class: 'relative group') do
                  div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                    render Lucide::Mail class: 'h-5 w-5 text-indigo-300'
                  end
                  form.email_field :email,
                    required: true,
                    autofocus: true,
                    autocomplete: 'email',
                    placeholder: 'Enter your account email',
                    class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                            focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                            transition duration-200 hover:bg-white/10'
                end
              end

              # Reset button with hover effect
              div(class: 'pt-2') do
                form.submit 'Send Reset Link',
                  class: 'w-full relative inline-flex justify-center items-center px-4 py-3 rounded-lg overflow-hidden
                           text-white font-medium text-sm
                           bg-gradient-to-r from-cyan-500 to-purple-600 hover:from-cyan-400 hover:to-purple-500
                           shadow-lg shadow-cyan-500/20
                           focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-900 focus:ring-cyan-400
                           transform transition-all duration-200 hover:scale-[1.02]'
              end
            end
          end
        end

        def footer_links
          div(class: 'mt-8 flex items-center justify-center space-x-4 text-sm') do
            link_to sign_in_path, class: 'font-medium text-cyan-300 hover:text-white transition-colors flex items-center' do
              render Lucide::LogIn class: 'h-4 w-4 mr-1 text-cyan-300'
              span { 'Sign in' }
            end

            div(class: 'h-4 w-px bg-white/20')

            link_to sign_up_path, class: 'font-medium text-cyan-300 hover:text-white transition-colors flex items-center' do
              render Lucide::UserPlus class: 'h-4 w-4 mr-1 text-cyan-300'
              span { 'Sign up' }
            end
          end

          div(class: 'mt-4 text-center') do
            div(class: 'text-indigo-300/50 text-xs') do
              'We\'ll send instructions to reset your password'
            end
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/passwords/edit.rb">
# frozen_string_literal: true

module Views
  module Passwords
    class Edit < Views::Base
      prop :alert, _Nilable(String)
      prop :user, User
      attr_accessor :alert, :user

      def view_template
        div(class: 'min-h-screen bg-white dark:bg-zinc-900 flex flex-col justify-center py-12 sm:px-6 lg:px-8') do
          div(class: 'max-w-md mx-auto') do
            if alert
              p(class: 'mb-6 p-4 text-destructive bg-destructive/10 border border-destructive/20 rounded-md') { alert }
            end

            h1(class: 'text-center text-3xl font-bold text-zinc-900 dark:text-zinc-50 mb-8') { 'Change your password' }

            form_with(url: password_path, method: :patch, class: 'mt-8 space-y-6') do |form|
              if @user.errors.any?
                div(class: 'bg-destructive/10 border-l-4 border-destructive p-4 mb-6 rounded-r-md') do
                  h2(class: 'text-destructive dark:text-destructive-foreground text-lg font-medium mb-2') do
                    pluralize(@user.errors.count, 'error')
                    ' prohibited this user from being saved:'
                  end
                  ul(class: 'list-disc pl-5 text-destructive dark:text-destructive-foreground/90') do
                    @user.errors.each { |error| li { error.full_message } }
                  end
                end
              end

              div(class: 'space-y-4') do
                div do
                  form.label(:password,
                    class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                  form.password_field(:password_challenge,
                    required: true,
                    autofocus: true,
                    autocomplete: 'current-password',
                    class: 'appearance-none block w-full px-3 py-2
                      border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                      placeholder-zinc-400 dark:placeholder-zinc-600
                      bg-white dark:bg-zinc-800
                      text-zinc-900 dark:text-zinc-100
                      focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                      dark:focus:ring-primary/40 dark:focus:border-primary/40')
                end

                div do
                  form.label(:password,
                    'New password',
                    class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                  form.password_field(:password,
                    required: true,
                    autocomplete: 'new-password',
                    class: 'appearance-none block w-full px-3 py-2
                      border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                      placeholder-zinc-400 dark:placeholder-zinc-600
                      bg-white dark:bg-zinc-800
                      text-zinc-900 dark:text-zinc-100
                      focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                      dark:focus:ring-primary/40 dark:focus:border-primary/40')
                  div(class: 'mt-1 text-sm text-zinc-500 dark:text-zinc-400') { '12 characters minimum.' }
                end

                div do
                  form.label(:password_confirmation,
                    'Confirm new password',
                    class: 'block text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-1')
                  form.password_field(:password_confirmation,
                    required: true,
                    autocomplete: 'new-password',
                    class: 'appearance-none block w-full px-3 py-2
                      border border-secondary/20 dark:border-secondary/10 rounded-md shadow-sm
                      placeholder-zinc-400 dark:placeholder-zinc-600
                      bg-white dark:bg-zinc-800
                      text-zinc-900 dark:text-zinc-100
                      focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary/50
                      dark:focus:ring-primary/40 dark:focus:border-primary/40')
                end

                div(class: 'mt-6') do
                  form.submit('Save changes',
                    class: 'w-full flex justify-center py-2 px-4
                      border border-transparent rounded-md shadow-sm
                      text-sm font-medium text-white
                      bg-primary hover:bg-primary/90
                      focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary
                      dark:focus:ring-offset-zinc-900
                      transition-colors')
                end
              end
            end
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/registrations/new.rb">
# frozen_string_literal: true

module Views
  module Registrations
    class New < Views::Base
      include Phlex::Rails::Helpers::Pluralize
      prop :user, User, reader: :private

      def view_template
        div(class: 'min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8 relative overflow-hidden') do
          # Animated background elements
          render_animated_background

          # Main content container with glassmorphism effect
          div(class: 'relative z-10 max-w-md mx-auto bg-white/10 backdrop-blur-xl rounded-xl shadow-2xl overflow-hidden border border-white/20') do
            div(class: 'px-8 pt-8 pb-10') do
              logo
              render_errors
              heading
              sign_up_form
              footer_links
            end
          end
        end
      end

      def render_animated_background
        div(class: 'absolute inset-0 overflow-hidden') do
          # Portal/rift effect circles
          div(class: 'absolute -top-20 -right-20 w-64 h-64 bg-purple-500/30 rounded-full blur-3xl animate-pulse')
          div(class: 'absolute -bottom-32 -left-20 w-80 h-80 bg-blue-500/20 rounded-full blur-3xl animate-pulse delay-700')
          div(class: 'absolute top-1/4 left-1/3 w-40 h-40 bg-cyan-500/20 rounded-full blur-2xl animate-pulse delay-1000')

          # Grid lines effect (optional)
          div(class: 'absolute inset-0 bg-grid-white/[0.03] bg-[size:30px_30px]')
        end
      end

      def logo
        div(class: 'flex justify-center mb-6') do
          div(class: 'text-white text-3xl font-bold tracking-wider flex items-center') do
            span(class: 'text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-500') { 'RIFT' }
            span(class: 'text-white') { 'LINK' }
          end
        end
      end

      def render_errors
        if user.errors.any?
          div(class: 'mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-md backdrop-blur-sm') do
            h2(class: 'text-red-300 text-sm font-medium flex items-center mb-2') do
              render Lucide::AlertTriangle class: 'h-4 w-4 mr-2 text-red-400'
              span do
                pluralize(user.errors.count, 'error')
                ' prohibited sign up:'
              end
            end
            ul(class: 'list-disc pl-5 text-red-200 text-sm space-y-1') do
              user.errors.each { |error| li { error.full_message } }
            end
          end
        end
      end

      def heading
        h1(class: 'text-center text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-cyan-200 to-white mb-2') do
          'Join RiftLink'
        end
        p(class: 'text-center text-cyan-200/70 text-sm mb-8') do
          'Create your account to connect with gamers'
        end
      end

      def sign_up_form
        form_with(url: sign_up_path, class: 'space-y-5') do |form|
          div(class: 'space-y-5') do
            # Email field
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :email, 'Email', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  render Lucide::Mail class: 'h-5 w-5 text-indigo-300'
                end
                form.email_field :email,
                  value: user.email,
                  required: true,
                  autofocus: true,
                  autocomplete: 'email',
                  placeholder: 'your@email.com',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
            end

            # Password field
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :password, 'Password', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  render Lucide::Lock class: 'h-5 w-5 text-indigo-300'
                end
                form.password_field :password,
                  required: true,
                  autocomplete: 'new-password',
                  placeholder: '••••••••••••',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
              div(class: 'mt-1 text-xs text-cyan-300/70') do
                render Lucide::Info class: 'h-3 w-3 inline mr-1 text-cyan-300/70'
                '12 characters minimum recommended.'
              end
            end

            # Password confirmation field
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :password_confirmation, 'Confirm Password', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  render Lucide::ShieldCheck class: 'h-5 w-5 text-indigo-300'
                end
                form.password_field :password_confirmation,
                  required: true,
                  autocomplete: 'new-password',
                  placeholder: '••••••••••••',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
            end

            # Username field (added as a gaming platform needs usernames)
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :username, 'Username', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  render Lucide::User class: 'h-5 w-5 text-indigo-300'
                end
                form.text_field :username,
                  required: true,
                  placeholder: 'YourGamerTag',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
            end

            # Terms and Privacy Agreement
            div(class: 'flex items-start mt-4') do
              div(class: 'flex items-center h-5') do
                form.check_box :terms_agreement,
                  required: true,
                  class: 'h-4 w-4 text-cyan-500 border border-white/30 rounded focus:ring-cyan-400/50 focus:ring-offset-zinc-900 bg-white/5'
              end
              div(class: 'ml-3 text-sm') do
                form.label :terms_agreement, class: 'text-cyan-200/70' do
                  span { 'I agree to the ' }
                  link_to 'Terms of Service', '#', class: 'text-cyan-300 hover:text-cyan-200 underline'
                  span { ' and ' }
                  link_to 'Privacy Policy', '#', class: 'text-cyan-300 hover:text-cyan-200 underline'
                end
              end
            end

            # Sign-up button with hover effect
            div(class: 'pt-4') do
              form.submit 'Create Account',
                class: 'w-full relative inline-flex justify-center items-center px-4 py-3 rounded-lg overflow-hidden
                         text-white font-medium text-sm
                         bg-gradient-to-r from-cyan-500 to-purple-600 hover:from-cyan-400 hover:to-purple-500
                         shadow-lg shadow-cyan-500/20
                         focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-900 focus:ring-cyan-400
                         transform transition-all duration-200 hover:scale-[1.02]'
            end
          end
        end
      end

      def footer_links
        div(class: 'mt-8 flex flex-col items-center justify-center space-y-4 text-sm') do
          p(class: 'text-indigo-300/70') do
            span { 'Already have an account? ' }
            link_to 'Sign in',
              sign_in_path,
              class: 'font-medium text-cyan-300 hover:text-white transition-colors'
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/sessions/index.rb">
# frozen_string_literal: true

module Views
  module Sessions
    class Index < Views::Base
      prop :notice, _Nilable(String)
      prop :session, ActionDispatch::Request::Session
      prop :sessions, ActiveRecord::Relation(Session)
      attr_accessor :notice, :session, :sessions

      def view_template
        div(class: 'min-h-screen bg-white dark:bg-zinc-900 py-12 px-4 sm:px-6 lg:px-8') do
          div(class: 'max-w-md mx-auto') do
            if notice
              p(class: 'mb-6 p-4 text-primary-foreground bg-primary/20 border border-primary/20 rounded-md') { notice }
            end

            h1(class: 'text-2xl font-bold text-zinc-900 dark:text-zinc-50 mb-6') { 'Devices & Sessions' }

            div(id: 'sessions', class: 'space-y-6') do
              sessions.each do |session|
                div(id: (dom_id session),
                  class: 'bg-white dark:bg-zinc-800 shadow-md rounded-lg p-6 border border-secondary/20') do
                  p(class: 'mb-2') do
                    span(class: 'font-medium text-zinc-700 dark:text-zinc-300') { 'User Agent: ' }
                    span(class: 'text-zinc-600 dark:text-zinc-400') { session.user_agent }
                  end

                  p(class: 'mb-2') do
                    span(class: 'font-medium text-zinc-700 dark:text-zinc-300') { 'IP Address: ' }
                    span(class: 'text-zinc-600 dark:text-zinc-400') { session.ip_address }
                  end

                  p(class: 'mb-4') do
                    span(class: 'font-medium text-zinc-700 dark:text-zinc-300') { 'Created at: ' }
                    span(class: 'text-zinc-600 dark:text-zinc-400') do
                      session.created_at.in_time_zone.strftime('%B %d, %Y %I:%M %p %Z')
                    end
                  end

                  button_to('Log out',
                    session,
                    method: :delete,
                    class: 'w-full flex justify-center py-2 px-4
                      border border-transparent rounded-md shadow-sm
                      text-sm font-medium text-white
                      bg-destructive hover:bg-destructive/90
                      focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-destructive
                      dark:focus:ring-offset-zinc-900
                      transition-colors')
                end
              end
            end
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/sessions/new.rb">
# frozen_string_literal: true

module Views
  module Sessions
    class New < Views::Base
      prop :alert, _Nilable(String)
      prop :notice, _Nilable(String)
      prop :params, ActionController::Parameters
      attr_reader :alert, :notice, :params

      def view_template
        div(class: 'min-h-screen bg-gradient-to-br from-zinc-900 via-indigo-950 to-purple-950 flex flex-col justify-center py-12 sm:px-6 lg:px-8 relative overflow-hidden') do
          # Animated background elements
          render_animated_background

          # Main content container with glassmorphism effect
          div(class: 'relative z-10 max-w-md mx-auto bg-white/10 backdrop-blur-xl rounded-xl shadow-2xl overflow-hidden border border-white/20') do
            div(class: 'px-8 pt-8 pb-10') do
              logo
              toast
              heading
              form
              footing
            end
          end
        end
      end

      def render_animated_background
        div(class: 'absolute inset-0 overflow-hidden') do
          # Portal/rift effect circles
          div(class: 'absolute -top-20 -right-20 w-64 h-64 bg-purple-500/30 rounded-full blur-3xl animate-pulse')
          div(class: 'absolute -bottom-32 -left-20 w-80 h-80 bg-blue-500/20 rounded-full blur-3xl animate-pulse delay-700')
          div(class: 'absolute top-1/4 left-1/3 w-40 h-40 bg-cyan-500/20 rounded-full blur-2xl animate-pulse delay-1000')

          # Grid lines effect (optional)
          div(class: 'absolute inset-0 bg-grid-white/[0.03] bg-[size:30px_30px]')
        end
      end

      def logo
        div(class: 'flex justify-center mb-6') do
          div(class: 'text-white text-3xl font-bold tracking-wider flex items-center') do
            span(class: 'text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-500') { 'RIFT' }
            span(class: 'text-white') { 'LINK' }
          end
        end
      end

      def toast
        if notice
          div(class: 'mb-6 p-4 bg-green-500/10 border border-green-500/30 rounded-md backdrop-blur-sm') do
            div(class: 'flex items-center') do
              Lucide::CircleCheck class: 'h-5 w-5 mr-2 text-green-400'
              p(class: 'text-sm text-green-100') { notice }
            end
          end
        end

        if alert
          div(class: 'mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-md backdrop-blur-sm') do
            div(class: 'flex items-center') do
              Lucide::CircleAlert class: 'h-5 w-5 mr-2 text-red-400'
              p(class: 'text-sm text-red-100') { alert }
            end
          end
        end
      end

      def heading
        h1(class: 'text-center text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-cyan-200 to-white mb-2') do
          'Welcome Back'
        end
        p(class: 'text-center text-cyan-200/70 text-sm mb-8') do
          'Enter your credentials to continue'
        end
      end

      def form
        form_with(url: sign_in_path, class: 'space-y-6') do |form|
          div(class: 'space-y-5') do
            # Email field
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :email, 'Email', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  Lucide::Mail class: 'h-5 w-5 text-indigo-300'
                end
                form.email_field :email,
                  value: params[:email_hint],
                  required: true,
                  autofocus: true,
                  autocomplete: 'email',
                  placeholder: 'you@example.com',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
            end

            # Password field
            div do
              div(class: 'flex items-center justify-between mb-1') do
                form.label :password, 'Password', class: 'block text-sm font-medium text-cyan-100'
              end
              div(class: 'relative group') do
                div(class: 'absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none') do
                  Lucide::Lock class: 'h-5 w-5 text-indigo-300'
                end
                form.password_field :password,
                  required: true,
                  autocomplete: 'current-password',
                  placeholder: '••••••••',
                  class: 'block w-full pl-10 pr-3 py-3 border border-white/10 rounded-lg bg-white/5 placeholder-indigo-300/50 text-white text-sm
                          focus:outline-none focus:ring-2 focus:ring-cyan-400/50 focus:border-transparent
                          transition duration-200 hover:bg-white/10'
              end
            end

            # Sign-in button with hover effect
            div(class: 'pt-2') do
              form.submit 'Sign in',
                class: 'w-full relative inline-flex justify-center items-center px-4 py-3 rounded-lg overflow-hidden
                         text-white font-medium text-sm
                         bg-gradient-to-r from-cyan-500 to-purple-600 hover:from-cyan-400 hover:to-purple-500
                         shadow-lg shadow-cyan-500/20
                         focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-900 focus:ring-cyan-400
                         transform transition-all duration-200 hover:scale-[1.02]'
            end
          end
        end
      end

      def footing
        div(class: 'mt-8 flex flex-col items-center justify-center space-y-4 text-sm') do
          link_to 'Forgot your password?',
            new_identity_password_reset_path,
            class: 'font-medium text-cyan-300 hover:text-white transition-colors'

          # Optional: Add sign-up link if needed
          p(class: 'text-indigo-300/70') do
            span { "Don't have an account? " }
            link_to 'Sign up',
              sign_up_path, # Replace with your sign-up path
              class: 'font-medium text-cyan-300 hover:text-white transition-colors'
          end
        end
      end
    end
  end
end
</file>

<file path="app/views/user_mailer/email_verification.html.erb">
<p>Hey there,</p>

<p>This is to confirm that <%= @user.email %> is the email you want to use on your account. If you ever lose your password, that's where we'll email a reset link.</p>

<p><strong>You must hit the link below to confirm that you received this email.</strong></p>

<p><%= link_to "Yes, use this email for my account", identity_email_verification_url(sid: @signed_id) %></p>

<hr>

<p>Have questions or need help? Just reply to this email and our support team will help you sort it out.</p>
</file>

<file path="app/views/user_mailer/password_reset.html.erb">
<p>Hey there,</p>

<p>Can't remember your password for <strong><%= @user.email %></strong>? That's OK, it happens. Just hit the link below to set a new one.</p>

<p><%= link_to "Reset my password", edit_identity_password_reset_url(sid: @signed_id) %></p>

<p>If you did not request a password reset you can safely ignore this email, it expires in 20 minutes. Only someone with access to this email account can reset your password.</p>

<hr>

<p>Have questions or need help? Just reply to this email and our support team will help you sort it out.</p>
</file>

<file path="app/views/base.rb">
# frozen_string_literal: true

module Views
  class Base < Components::Base
    # The `Views::Base` is an abstract class for all your views.
    # By default, it inherits from `Components::Base`, but you
    # can change that to `Phlex::HTML` if you want to keep views and
    # components independent.
    register_output_helper :vite_javascript_tag
    register_output_helper :vite_stylesheet_tag
    register_output_helper :vite_client_tag
    register_output_helper :csrf_meta_tags
    register_output_helper :csp_meta_tags
    register_output_helper :action_cable_meta_tag

    def around_template
      doctype
      html(**html_opt) do
        head do
          title { page_title }
          meta(name: 'turbo-refresh-method', content: 'morph')
          meta(name: 'turbo-refresh-scroll', content: 'preserve')
          action_cable_meta_tag
          csrf_meta_tags
          csp_meta_tag
          content_for(:head)
          link(rel: 'icon', href: '/icon.png', type: 'image/png')
          link(rel: 'icon', href: '/icon.svg', type: 'image/svg+xml')
          link(rel: 'apple-touch-icon', href: '/icon.png')
          vite_stylesheet_tag('application', data: { 'turbo-track': 'reload' })
          vite_client_tag
          vite_javascript_tag('application')
        end
        body(class: 'bg-gradient-to-br from-zinc-900 via-indigo-950 to-purple-950 min-h-screen text-white') do
          whitespace
          render_header
          main(class: 'container mx-auto pt-20') do
            # Main content from views
            yield
          end
        end
      end
    end

    def html_opt
      { class: 'h-full', data: { theme: :dark } }
    end

    private

    def render_header
      header(class: 'fixed w-full top-0 z-50') do
        # Frosted glass effect background
        div(class: 'absolute inset-0 bg-black/20 backdrop-blur-lg border-b border-white/10')

        # Header content
        div(class: 'relative container mx-auto px-4 sm:px-6 lg:px-8') do
          div(class: 'flex h-16 items-center justify-between') do
            # Logo
            div(class: 'flex-shrink-0') do
              link_to '/', class: 'flex items-center' do
                # Logo glow effect
                div(class: 'relative') do
                  div(class: 'absolute inset-0 bg-cyan-500/30 rounded-full blur-lg animate-pulse')
                  div(class: 'relative text-2xl font-bold tracking-wider flex items-center') do
                    span(class: 'text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-purple-500') { 'RIFT' }
                    span(class: 'text-white') { 'LINK' }
                  end
                end
              end
            end

            # Navigation - Desktop
            nav(class: 'hidden md:flex items-center space-x-6') do
              nav_link('Realms', '#')
              nav_link('Explore', '#')
              nav_link('Events', '#')
              nav_link('Friends', '#')
            end

            # Auth buttons/user menu
            div(class: 'flex items-center') do
              # Notifications
              button(class: 'relative p-2 mr-3 rounded-full hover:bg-white/10 transition-colors') do
                render Lucide::Bell class: 'h-5 w-5 text-indigo-300'
                # Notification badge
                div(class: 'absolute top-1 right-1 h-2 w-2 rounded-full bg-red-500')
              end

              # Messages
              button(class: 'relative p-2 mr-3 rounded-full hover:bg-white/10 transition-colors') do
                render Lucide::MessageSquare class: 'h-5 w-5 text-indigo-300'
              end

              # User dropdown or sign-in
              if defined?(Current.user) && Current.user
                # User avatar/menu
                div(class: 'relative') do
                  button(class: 'flex items-center space-x-3 px-3 py-2 rounded-lg bg-white/5 hover:bg-white/10 border border-white/10 transition-colors') do
                    div(class: 'w-8 h-8 rounded-full bg-gradient-to-br from-cyan-500 to-purple-600 flex items-center justify-center overflow-hidden') do
                      span { Current.user.username.first.upcase }
                    end
                    span(class: 'text-sm font-medium hidden sm:inline-block') { Current.user.username }
                    render Lucide::ChevronDown class: 'h-4 w-4 text-indigo-300 ml-1'
                  end
                  # Dropdown menu would go here
                end
              else
                # Sign in/up buttons
                div(class: 'flex items-center space-x-3') do
                  link_to 'Sign in', sign_in_path,
                    class: 'text-sm font-medium px-4 py-2 rounded-lg text-white hover:bg-white/10 border border-white/10 transition-colors'

                  link_to 'Sign up', sign_up_path,
                    class: 'text-sm font-medium px-4 py-2 rounded-lg text-white bg-gradient-to-r from-cyan-500 to-purple-600 hover:from-cyan-400 hover:to-purple-500 transition-colors shadow-lg shadow-cyan-500/20 hover:shadow-cyan-500/30'
                end
              end

              # Mobile menu button (only shown on mobile)
              button(class: 'ml-4 md:hidden p-2 rounded-md hover:bg-white/10 transition-colors') do
                render Lucide::Menu class: 'h-6 w-6 text-white'
              end
            end
          end
        end
      end
    end

    def nav_link(text, href)
      link_to href, class: 'relative text-sm font-medium text-indigo-100 hover:text-white transition-colors group' do
        span { text }
        # Animated underline on hover
        div(class: 'absolute bottom-0 left-0 h-[2px] w-0 bg-gradient-to-r from-cyan-400 to-purple-500 group-hover:w-full transition-all duration-300')
      end
    end

    def page_title
      'RiftLink'
    end
  end
end
</file>

<file path="bin/bundle">
#!/usr/bin/env ruby
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'bundle' is installed as part of a gem, and
# this file is here to facilitate running it.
#

require "rubygems"

m = Module.new do
  module_function

  def invoked_as_script?
    File.expand_path($0) == File.expand_path(__FILE__)
  end

  def env_var_version
    ENV["BUNDLER_VERSION"]
  end

  def cli_arg_version
    return unless invoked_as_script? # don't want to hijack other binstubs
    return unless "update".start_with?(ARGV.first || " ") # must be running `bundle update`
    bundler_version = nil
    update_index = nil
    ARGV.each_with_index do |a, i|
      if update_index && update_index.succ == i && a.match?(Gem::Version::ANCHORED_VERSION_PATTERN)
        bundler_version = a
      end
      next unless a =~ /\A--bundler(?:[= ](#{Gem::Version::VERSION_PATTERN}))?\z/
      bundler_version = $1
      update_index = i
    end
    bundler_version
  end

  def gemfile
    gemfile = ENV["BUNDLE_GEMFILE"]
    return gemfile if gemfile && !gemfile.empty?

    File.expand_path("../Gemfile", __dir__)
  end

  def lockfile
    lockfile =
      case File.basename(gemfile)
      when "gems.rb" then gemfile.sub(/\.rb$/, ".locked")
      else "#{gemfile}.lock"
      end
    File.expand_path(lockfile)
  end

  def lockfile_version
    return unless File.file?(lockfile)
    lockfile_contents = File.read(lockfile)
    return unless lockfile_contents =~ /\n\nBUNDLED WITH\n\s{2,}(#{Gem::Version::VERSION_PATTERN})\n/
    Regexp.last_match(1)
  end

  def bundler_requirement
    @bundler_requirement ||=
      env_var_version ||
      cli_arg_version ||
      bundler_requirement_for(lockfile_version)
  end

  def bundler_requirement_for(version)
    return "#{Gem::Requirement.default}.a" unless version

    bundler_gem_version = Gem::Version.new(version)

    bundler_gem_version.approximate_recommendation
  end

  def load_bundler!
    ENV["BUNDLE_GEMFILE"] ||= gemfile

    activate_bundler
  end

  def activate_bundler
    gem_error = activation_error_handling do
      gem "bundler", bundler_requirement
    end
    return if gem_error.nil?
    require_error = activation_error_handling do
      require "bundler/version"
    end
    return if require_error.nil? && Gem::Requirement.new(bundler_requirement).satisfied_by?(Gem::Version.new(Bundler::VERSION))
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
    exit 42
  end

  def activation_error_handling
    yield
    nil
  rescue StandardError, LoadError => e
    e
  end
end

m.load_bundler!

if m.invoked_as_script?
  load Gem.bin_path("bundler", "bundle")
end
</file>

<file path="bin/rails">
#!/usr/bin/env ruby
APP_PATH = File.expand_path("../config/application", __dir__)
require_relative "../config/boot"
require "rails/commands"
</file>

<file path="bin/rake">
#!/usr/bin/env ruby
require_relative "../config/boot"
require "rake"
Rake.application.run
</file>

<file path="bin/vite">
#!/usr/bin/env ruby
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'vite' is installed as part of a gem, and
# this file is here to facilitate running it.
#

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__)

bundle_binstub = File.expand_path("bundle", __dir__)

if File.file?(bundle_binstub)
  if File.read(bundle_binstub, 300).include?("This file was generated by Bundler")
    load(bundle_binstub)
  else
    abort("Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.
Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.")
  end
end

require "rubygems"
require "bundler/setup"

load Gem.bin_path("vite_ruby", "vite")
</file>

<file path="config/initializers/inflections.rb">
# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Add new inflection rules using the following format. Inflections
# are locale specific, and you may define rules for as many different
# locales as you wish. All of these examples are active by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.plural /^(ox)$/i, "\\1en"
#   inflect.singular /^(ox)en/i, "\\1"
#   inflect.irregular "person", "people"
#   inflect.uncountable %w( fish sheep )
# end

# These inflection rules are supported but not enabled by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.acronym "RESTful"
# end
</file>

<file path="config/initializers/phlex.rb">
# frozen_string_literal: true

module Views
end

module Components
  extend Phlex::Kit
end

Rails.autoloaders.main.push_dir(
  Rails.root.join('app/views'), namespace: Views
)

Rails.autoloaders.main.push_dir(
  Rails.root.join('app/components'), namespace: Components
)
</file>

<file path="config/initializers/ruby_ui.rb">
# frozen_string_literal: true

module RubyUI
  extend Phlex::Kit
end

# Allow using RubyUI instead RubyUi
Rails.autoloaders.main.inflector.inflect(
  'ruby_ui' => 'RubyUI'
)

# Allow using RubyUI::ComponentName instead Components::RubyUI::ComponentName
Rails.autoloaders.main.push_dir(
  "#{Rails.root}/app/components/ruby_ui", namespace: RubyUI
)

# Allow using RubyUI::ComponentName instead RubyUI::ComponentName::ComponentName
Rails.autoloaders.main.collapse(Rails.root.join('app/components/ruby_ui/*'))
</file>

<file path="config/locales/en.yml">
# Files in the config/locales directory are used for internationalization and
# are automatically loaded by Rails. If you want to use locales other than
# English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more about the API, please read the Rails Internationalization guide
# at https://guides.rubyonrails.org/i18n.html.
#
# Be aware that YAML interprets the following case-insensitive strings as
# booleans: `true`, `false`, `on`, `off`, `yes`, `no`. Therefore, these strings
# must be quoted to be interpreted as strings. For example:
#
#     en:
#       "yes": yup
#       enabled: "ON"

en:
  hello: "Hello world"
</file>

<file path="config/boot.rb">
# frozen_string_literal: true

ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)

require 'bundler/setup' # Set up gems listed in the Gemfile.
require 'bootsnap/setup' # Speed up boot time by caching expensive operations.
</file>

<file path="config/environment.rb">
# frozen_string_literal: true

# Load the Rails application.
require_relative 'application'

# Initialize the Rails application.
Rails.application.initialize!
</file>

<file path="config/storage.yml">
test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
#   region: us-east-1
#   bucket: your_own_bucket-<%= Rails.env %>

# Remember not to checkin your GCS keyfile to a repository
# google:
#   service: GCS
#   project: your_project
#   credentials: <%= Rails.root.join("path/to/gcs.keyfile") %>
#   bucket: your_own_bucket-<%= Rails.env %>

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name-<%= Rails.env %>

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
</file>

<file path="db/migrate/20250319015108_create_users.rb">
# frozen_string_literal: true

class CreateUsers < ActiveRecord::Migration[8.0]
  def change
    create_table :users do |t|
      t.string :email,           null: false, index: { unique: true }
      t.string :password_digest, null: false

      t.boolean :verified, null: false, default: false

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250319015109_create_sessions.rb">
# frozen_string_literal: true

class CreateSessions < ActiveRecord::Migration[8.0]
  def change
    create_table :sessions do |t|
      t.references :user, null: false, foreign_key: true
      t.string :user_agent
      t.string :ip_address

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001733_create_user_profiles.rb">
class CreateUserProfiles < ActiveRecord::Migration[8.0]
  def change
    create_table :user_profiles do |t|
      t.references :user, null: false, foreign_key: true
      t.string :username
      t.string :display_name
      t.string :avatar
      t.text :bio
      t.string :gaming_status

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001737_create_group_chats.rb">
# frozen_string_literal: true

class CreateGroupChats < ActiveRecord::Migration[8.0]
  def chande
    create_table :group_chats do |t|
      t.string :name
      t.references :user, null: false, foreign_key: true
      t.string :icon

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001738_create_memberships.rb">
class CreateMemberships < ActiveRecord::Migration[8.0]
  def change
    create_table :memberships do |t|
      t.references :user, null: false, foreign_key: true
      t.string :member_role
      t.string :nickname
      t.references :membershipable, polymorphic: true, null: false
      t.datetime :joined_at

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001740_create_messages.rb">
class CreateMessages < ActiveRecord::Migration[8.0]
  def change
    create_table :messages do |t|
      t.references :user, null: false, foreign_key: true
      t.text :content
      t.string :attachment_url
      t.boolean :is_pinned
      t.references :messageable, polymorphic: true, null: false

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001741_create_direct_message_threads.rb">
class CreateDirectMessageThreads < ActiveRecord::Migration[8.0]
  def change
    create_table :direct_message_threads do |t|
      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001742_create_direct_message_participants.rb">
class CreateDirectMessageParticipants < ActiveRecord::Migration[8.0]
  def change
    create_table :direct_message_participants do |t|
      t.references :direct_message_thread, null: false, foreign_key: true
      t.references :user, null: false, foreign_key: true

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001744_create_friends.rb">
# frozen_string_literal: true

class CreateFriends < ActiveRecord::Migration[8.0]
  def change
    create_table :friends do |t|
      t.references :user, null: false, foreign_key: true
      t.references :friend, null: false, foreign_key: true
      t.string :status

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403001745_create_notifications.rb">
class CreateNotifications < ActiveRecord::Migration[8.0]
  def change
    create_table :notifications do |t|
      t.references :user, null: false, foreign_key: true
      t.string :source_type
      t.string :source_id
      t.string :notification_type
      t.boolean :read

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403002032_create_realms.rb">
# frozen_string_literal: true

class CreateRealms < ActiveRecord::Migration[8.0]
  def change
    create_table :realms do |t|
      t.string :name
      t.text :description
      t.string :icon
      t.string :banner
      t.references :user, null: false, foreign_key: true
      t.boolean :is_public

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403002107_create_channels.rb">
class CreateChannels < ActiveRecord::Migration[8.0]
  def change
    create_table :channels do |t|
      t.references :realm, null: false, foreign_key: true
      t.string :name
      t.text :description
      t.string :channel_type
      t.boolean :is_private

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403002118_create_events.rb">
# frozen_string_literal: true

class CreateEvents < ActiveRecord::Migration[8.0]
  def change
    create_table :events do |t|
      t.references :realm, null: false, foreign_key: true
      t.references :user, null: false, foreign_key: true
      t.string :title
      t.text :description
      t.datetime :start_time
      t.datetime :end_time

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403002119_create_event_participants.rb">
class CreateEventParticipants < ActiveRecord::Migration[8.0]
  def change
    create_table :event_participants do |t|
      t.references :event, null: false, foreign_key: true
      t.references :user, null: false, foreign_key: true
      t.string :status

      t.timestamps
    end
  end
end
</file>

<file path="db/migrate/20250403022640_create_activities.rb">
class CreateActivities < ActiveRecord::Migration[8.0]
  def change
    create_table :activities do |t|
      t.references :user, null: false, foreign_key: true
      t.string :action
      t.string :target_name
      t.references :target, polymorphic: true, null: false

      t.timestamps
    end
  end
end
</file>

<file path="db/seeds.rb">
# frozen_string_literal: true

# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Example:
#
#   ["Action", "Comedy", "Drama", "Horror"].each do |genre_name|
#     MovieGenre.find_or_create_by!(name: genre_name)
#   end

# Clear existing data
puts 'Clearing existing data...'
puts 'Cleaning the Shire...'
User.destroy_all
Realm.destroy_all
Channel.destroy_all
Membership.destroy_all
Message.destroy_all
DirectMessageThread.destroy_all
DirectMessageParticipant.destroy_all
Activity.destroy_all

# Create users
puts 'Creating users...'
puts 'Assembling the Fellowship...'

users = [
  { username: 'Aragorn', email: 'strider@gondor.com', password: 'IsildursHeir1!!' },
  { username: 'Frodo', email: 'ringbearer@shire.com', password: 'SecretlyMine!!' },
  { username: 'Gandalf', email: 'greytowht@istari.com', password: 'YouShallNotPass!!' },
  { username: 'Legolas', email: 'elf@mirkwood.com', password: 'StillCounting42!!' },
  { username: 'Gimli', email: 'axe@erebor.com', password: 'AndMyAxe123!!' },
  { username: 'LuffyKing', email: 'pirate.king@sunny.com', password: 'MeatIsLife5!!' },
  { username: 'ZoroLost', email: 'santoryu@wano.com', password: 'WrongDirection!!' },
  { username: 'Blackbeard', email: 'marshall.teach@darkness.com', password: 'TwoDevilFruits!!' },
  { username: 'Thrall', email: 'warchief@orgrimmar.com', password: 'ForTheHorde!!' },
  { username: 'Sylvanas', email: 'banshee@undercity.com', password: 'DarkLady4ever!!' },
  { username: 'Arthas', email: 'lich.king@northrend.com', password: 'FrostmourneHungers!!' },
  { username: 'Jaina', email: 'proudmoore@theramore.com', password: 'ArcaneBlast!!' },
]

created_users = users.map do |user_attributes|
  user = User.create!(
    email: user_attributes[:email],
    password: user_attributes[:password],
    password_confirmation: user_attributes[:password]
  )

  # Create UserProfile for each user
  UserProfile.create!(
    user:,
    username: user_attributes[:username],
    display_name: user_attributes[:username],
    gaming_status: ['online', 'away', 'busy', 'offline'].sample
  )

  user
end

# Assign the first user as Current.user for testing
current_user = created_users.first
puts "Current user for testing: #{current_user.email}"
puts 'The Ring-bearer sets forth on the Quest...'

# Create realms
puts 'Creating realms...'
puts 'Forging the Rings of Power...'

realms = [
  {
    name: 'Fellowship of Gamers',
    description: 'One does not simply walk into a raid without preparation.',
    is_public: true,
  },
  {
    name: 'Mines of Moria',
    description: 'Speak friend and enter. A dark place full of treasures and dangers.',
    is_public: true,
  },
  {
    name: 'Grand Line Adventures',
    description: 'Set sail for the greatest gaming adventures in search of the One Piece!',
    is_public: true,
  },
  {
    name: 'Wano Kuni Society',
    description: 'A closed server for the land of samurai. Share techniques and stories.',
    is_public: false,
  },
  {
    name: 'Azeroth United',
    description: 'For the Alliance! For the Horde! Or just for the loot...',
    is_public: true,
  },
  {
    name: "Lich King's Lounge",
    description: 'Frostmourne hungers... for better gear drops and PvP strategies.',
    is_public: true,
  },
  {
    name: 'Rivendell Retreat',
    description: 'A sanctuary for elven wisdom about game lore and storytelling.',
    is_public: true,
  },
  {
    name: 'Thousand Sunny Crew',
    description: 'Nakama welcome! Discuss strategies to conquer the gaming seas.',
    is_public: false,
  },
  {
    name: 'Mordor Tactics',
    description: 'One does not simply walk into PvP without proper builds.',
    is_public: true,
  },
  {
    name: 'Stormwind Strategies',
    description: 'Alliance gamers sharing raid tactics and dungeon guides.',
    is_public: true,
  },
  {
    name: 'Enies Lobby Escapades',
    description: 'Breaking into the most difficult games and conquering them together.',
    is_public: true,
  },
  {
    name: 'Darnassus Design Guild',
    description: 'Night elves and friends crafting beautiful in-game creations.',
    is_public: true,
  },
]

created_realms = realms.map do |realm_attributes|
  # Assign a random user as the owner, but weight towards current_user
  owner = (rand(10) < 3) ? current_user : created_users.sample

  realm = Realm.create!(
    name: realm_attributes[:name],
    description: realm_attributes[:description],
    is_public: realm_attributes[:is_public],
    owner:
  )

  # Create default channels for each realm
  Channel.create!(realm:, name: 'general', description: 'General discussion', channel_type: 'text', is_private: false)
  Channel.create!(realm:, name: 'strategy', description: 'Strategy discussion', channel_type: 'text', is_private: false)
  Channel.create!(realm:, name: 'memes', description: 'Gaming memes', channel_type: 'text', is_private: false)
  Channel.create!(realm:, name: 'voice-chat', description: 'Voice chat', channel_type: 'voice', is_private: false)

  # Create memberships for random users (always include owner)
  members = [owner]

  # Add 3-8 random members to each realm
  members += created_users.reject { |u| u == owner }.sample(rand(3..8))
  members.uniq!

  members.each do |member|
    role = (member == owner) ? 'admin' : ['member', 'moderator'].sample
    Membership.create!(
      user: member,
      membershipable: realm,
      member_role: role,
      joined_at: rand(1..60).days.ago
    )
  end

  realm
end

# Set up particular realms for the current user (pinned realms)
puts 'Setting up pinned realms for current user...'
puts 'Crafting the One Ring to rule them all...'

# Ensure current user has membership in these realms
fellowship_realm = created_realms.find { |r| r.name == 'Fellowship of Gamers' }
mines_realm = created_realms.find { |r| r.name == 'Mines of Moria' }

unless fellowship_realm.nil?
  Membership.where(user: current_user, membershipable: fellowship_realm).first_or_create!(
    member_role: 'admin',
    joined_at: 60.days.ago
  )
end

unless mines_realm.nil?
  Membership.where(user: current_user, membershipable: mines_realm).first_or_create!(
    member_role: 'moderator',
    joined_at: 45.days.ago
  )
end

# Create messages in channels
puts 'Creating messages in channels...'
puts 'Writing in the Book of Mazarbul...'

message_contents = [
  'You have my sword!',
  'And my bow!',
  'AND MY AXE!',
  'One does not simply walk into this game without dying.',
  'Fly, you fools! The boss is coming!',
  "I'm going to be the king of the pirates!",
  'Gomu Gomu no Strategy!',
  'The Will of D carries on through these gaming sessions.',
  "Lok'tar Ogar! Victory or death in this battleground!",
  'For the Alliance!',
  'That dungeon was merely a setback!',
  'The Light will forge you a new weapon.',
  'Even the smallest gamer can change the course of a raid.',
  'Three raids for the Elven-kings under the sky...',
  'Seven wipes for the Dwarf-lords in their halls of stone...',
  'Nine guild members doomed to disconnect...',
  'One Raid Leader to rule them all!',
  'My precious... legendary drop...',
  'A wizard is never late to a raid, nor is he early. He arrives precisely when he means to!',
  'I will be the Pirate King of this server!',
  'Just waiting for the next expansion to drop like the Red Wedding.',
]

# Add messages to channels
created_realms.each do |realm|
  realm.channels.each do |channel|
    next if channel.channel_type != 'text'

    # Add 5-20 messages per channel
    rand(5..20).times do
      # Get random member of this realm
      membership = Membership.where(membershipable: realm).sample
      next unless membership

      Message.create!(
        user: membership.user,
        content: message_contents.sample,
        messageable: channel,
        created_at: rand(1..30).days.ago
      )
    end
  end
end

# Create direct message threads
puts 'Creating direct message threads...'
puts 'Sending ravens across Westeros...'

# Create DM threads for current_user with 3-5 other users
dm_partners = created_users.reject { |u| u == current_user }.sample(rand(3..5))

dm_partners.each do |partner|
  # Create thread
  thread = DirectMessageThread.create!

  # Add participants
  DirectMessageParticipant.create!(direct_message_thread: thread, user: current_user)
  DirectMessageParticipant.create!(direct_message_thread: thread, user: partner)

  # Add messages
  rand(3..10).times do
    sender = [current_user, partner].sample
    Message.create!(
      user: sender,
      content: message_contents.sample,
      messageable: thread,
      created_at: rand(1..15).days.ago
    )
  end
end

# Create activities
puts 'Creating activities...'
puts 'Recording tales in the Red Book of Westmarch...'

activity_actions = ['joined', 'posted in', 'created an event in', 'invited friends to', 'shared content from', 'achieved a milestone in']

30.times do
  user = created_users.sample
  realm = created_realms.sample
  action = activity_actions.sample

  Activity.create!(
    user:,
    action:,
    target: realm,
    target_name: realm.name,
    created_at: rand(1..7).days.ago
  )
end

puts 'Seed completed!'
puts 'The Ring has been destroyed in Mount Doom. Middle Earth is saved.'
puts "Seeds created #{User.count} users, #{Realm.count} realms, #{Channel.count} channels, #{Message.count} messages, and #{Activity.count} activities."
</file>

<file path="lib/tasks/annotate_rb.rake">
# This rake task was added by annotate_rb gem.

# Can set `ANNOTATERB_SKIP_ON_DB_TASKS` to be anything to skip this
if Rails.env.development? && ENV["ANNOTATERB_SKIP_ON_DB_TASKS"].nil?
  require "annotate_rb"

  AnnotateRb::Core.load_rake_tasks
end
</file>

<file path="public/robots.txt">
# See https://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file
</file>

<file path="test/controllers/identity/email_verifications_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

module Identity
  class EmailVerificationsControllerTest < ActionDispatch::IntegrationTest
    setup do
      @user = sign_in_as(users(:lazaro_nixon))
      @user.update! verified: false
    end

    test 'should send a verification email' do
      assert_enqueued_email_with UserMailer, :email_verification, params: { user: @user } do
        post identity_email_verification_url
      end

      assert_redirected_to root_url
    end

    test 'should verify email' do
      sid = @user.generate_token_for(:email_verification)

      get identity_email_verification_url(sid:, email: @user.email)
      assert_redirected_to root_url
    end

    test 'should not verify email with expired token' do
      sid = @user.generate_token_for(:email_verification)

      travel 3.days

      get identity_email_verification_url(sid:, email: @user.email)

      assert_redirected_to edit_identity_email_url
      assert_equal 'That email verification link is invalid', flash[:alert]
    end
  end
end
</file>

<file path="test/controllers/identity/emails_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

module Identity
  class EmailsControllerTest < ActionDispatch::IntegrationTest
    setup do
      @user = sign_in_as(users(:lazaro_nixon))
    end

    test 'should get edit' do
      get edit_identity_email_url
      assert_response :success
    end

    test 'should update email' do
      patch identity_email_url, params: { email: 'new_email@hey.com', password_challenge: 'Secret1*3*5*' }
      assert_redirected_to root_url
    end

    test 'should not update email with wrong password challenge' do
      patch identity_email_url, params: { email: 'new_email@hey.com', password_challenge: 'SecretWrong1*3' }

      assert_response :unprocessable_entity
      assert_select 'li', /Password challenge is invalid/
    end
  end
end
</file>

<file path="test/controllers/identity/password_resets_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

module Identity
  class PasswordResetsControllerTest < ActionDispatch::IntegrationTest
    setup do
      @user = users(:lazaro_nixon)
    end

    test 'should get new' do
      get new_identity_password_reset_url
      assert_response :success
    end

    test 'should get edit' do
      sid = @user.generate_token_for(:password_reset)

      get edit_identity_password_reset_url(sid:)
      assert_response :success
    end

    test 'should send a password reset email' do
      assert_enqueued_email_with UserMailer, :password_reset, params: { user: @user } do
        post identity_password_reset_url, params: { email: @user.email }
      end

      assert_redirected_to sign_in_url
    end

    test 'should not send a password reset email to a nonexistent email' do
      assert_no_enqueued_emails do
        post identity_password_reset_url, params: { email: 'invalid_email@hey.com' }
      end

      assert_redirected_to new_identity_password_reset_url
      assert_equal "You can't reset your password until you verify your email", flash[:alert]
    end

    test 'should not send a password reset email to a unverified email' do
      @user.update! verified: false

      assert_no_enqueued_emails do
        post identity_password_reset_url, params: { email: @user.email }
      end

      assert_redirected_to new_identity_password_reset_url
      assert_equal "You can't reset your password until you verify your email", flash[:alert]
    end

    test 'should update password' do
      sid = @user.generate_token_for(:password_reset)

      patch identity_password_reset_url, params: { sid:, password: 'Secret6*4*2*', password_confirmation: 'Secret6*4*2*' }
      assert_redirected_to sign_in_url
    end

    test 'should not update password with expired token' do
      sid = @user.generate_token_for(:password_reset)

      travel 30.minutes

      patch identity_password_reset_url, params: { sid:, password: 'Secret6*4*2*', password_confirmation: 'Secret6*4*2*' }

      assert_redirected_to new_identity_password_reset_url
      assert_equal 'That password reset link is invalid', flash[:alert]
    end
  end
end
</file>

<file path="test/controllers/passwords_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

class PasswordsControllerTest < ActionDispatch::IntegrationTest
  setup do
    @user = sign_in_as(users(:lazaro_nixon))
  end

  test 'should get edit' do
    get edit_password_url
    assert_response :success
  end

  test 'should update password' do
    patch password_url, params: { password_challenge: 'Secret1*3*5*', password: 'Secret6*4*2*', password_confirmation: 'Secret6*4*2*' }
    assert_redirected_to root_url
  end

  test 'should not update password with wrong password challenge' do
    patch password_url, params: { password_challenge: 'SecretWrong1*3', password: 'Secret6*4*2*', password_confirmation: 'Secret6*4*2*' }

    assert_response :unprocessable_entity
    assert_select 'li', /Password challenge is invalid/
  end
end
</file>

<file path="test/controllers/registrations_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

class RegistrationsControllerTest < ActionDispatch::IntegrationTest
  test 'should get new' do
    get sign_up_url
    assert_response :success
  end

  test 'should sign up' do
    assert_difference('User.count') do
      post sign_up_url, params: { email: 'lazaronixon@hey.com', password: 'Secret1*3*5*', password_confirmation: 'Secret1*3*5*' }
    end

    assert_redirected_to root_url
  end
end
</file>

<file path="test/controllers/sessions_controller_test.rb">
# frozen_string_literal: true

require 'test_helper'

class SessionsControllerTest < ActionDispatch::IntegrationTest
  setup do
    @user = users(:lazaro_nixon)
  end

  test 'should get index' do
    sign_in_as @user

    get sessions_url
    assert_response :success
  end

  test 'should get new' do
    get sign_in_url
    assert_response :success
  end

  test 'should sign in' do
    post sign_in_url, params: { email: @user.email, password: 'Secret1*3*5*' }
    assert_redirected_to root_url

    get root_url
    assert_response :success
  end

  test 'should not sign in with wrong credentials' do
    post sign_in_url, params: { email: @user.email, password: 'SecretWrong1*3' }
    assert_redirected_to sign_in_url(email_hint: @user.email)
    assert_equal 'That email or password is incorrect', flash[:alert]

    get root_url
    assert_redirected_to sign_in_url
  end

  test 'should sign out' do
    sign_in_as @user

    delete session_url(@user.sessions.last)
    assert_redirected_to sessions_url

    follow_redirect!
    assert_redirected_to sign_in_url
  end
end
</file>

<file path="test/fixtures/activities.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: activities
#
#  id          :bigint           not null, primary key
#  action      :string
#  target_name :string
#  target_type :string           not null
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  target_id   :bigint           not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_activities_on_target   (target_type,target_id)
#  index_activities_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  action: MyString
  target_name: MyString
  target: one
  target_type: Target

two:
  user: two
  action: MyString
  target_name: MyString
  target: two
  target_type: Target
</file>

<file path="test/fixtures/channels.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: channels
#
#  id           :bigint           not null, primary key
#  channel_type :string
#  description  :text
#  is_private   :boolean
#  name         :string
#  created_at   :datetime         not null
#  updated_at   :datetime         not null
#  realm_id     :bigint           not null
#
# Indexes
#
#  index_channels_on_realm_id  (realm_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#
one:
  realm: one
  name: MyString
  description: MyText
  channel_type: MyString
  is_private: false

two:
  realm: two
  name: MyString
  description: MyText
  channel_type: MyString
  is_private: false
</file>

<file path="test/fixtures/direct_message_participants.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: direct_message_participants
#
#  id                       :bigint           not null, primary key
#  created_at               :datetime         not null
#  updated_at               :datetime         not null
#  direct_message_thread_id :bigint           not null
#  user_id                  :bigint           not null
#
# Indexes
#
#  index_direct_message_participants_on_direct_message_thread_id  (direct_message_thread_id)
#  index_direct_message_participants_on_user_id                   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (direct_message_thread_id => direct_message_threads.id)
#  fk_rails_...  (user_id => users.id)
#
one:
  direct_message_thread: one
  user: one

two:
  direct_message_thread: two
  user: two
</file>

<file path="test/fixtures/direct_message_threads.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# This model initially had no columns defined. If you add columns to the
# model remove the "{}" from the fixture names and add the columns immediately
# below each fixture, per the syntax in the comments below
#
# == Schema Information
#
# Table name: direct_message_threads
#
#  id         :bigint           not null, primary key
#  created_at :datetime         not null
#  updated_at :datetime         not null
#
one: {}
# column: value
#
two: {}
# column: value
</file>

<file path="test/fixtures/event_participants.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: event_participants
#
#  id         :bigint           not null, primary key
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#  event_id   :bigint           not null
#  user_id    :bigint           not null
#
# Indexes
#
#  index_event_participants_on_event_id  (event_id)
#  index_event_participants_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (event_id => events.id)
#  fk_rails_...  (user_id => users.id)
#
one:
  event: one
  user: one
  status: MyString

two:
  event: two
  user: two
  status: MyString
</file>

<file path="test/fixtures/events.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: events
#
#  id          :bigint           not null, primary key
#  description :text
#  end_time    :datetime
#  start_time  :datetime
#  title       :string
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  realm_id    :bigint           not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_events_on_realm_id  (realm_id)
#  index_events_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#  fk_rails_...  (user_id => users.id)
#
one:
  realm: one
  creator: one
  title: MyString
  description: MyText
  start_time: 2025-04-02 19:21:18
  end_time: 2025-04-02 19:21:18

two:
  realm: two
  creator: two
  title: MyString
  description: MyText
  start_time: 2025-04-02 19:21:18
  end_time: 2025-04-02 19:21:18
</file>

<file path="test/fixtures/friends.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: friends
#
#  id         :bigint           not null, primary key
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#  friend_id  :bigint           not null
#  user_id    :bigint           not null
#
# Indexes
#
#  index_friends_on_friend_id  (friend_id)
#  index_friends_on_user_id    (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (friend_id => friends.id)
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  friend: one
  status: MyString

two:
  user: two
  friend: two
  status: MyString
</file>

<file path="test/fixtures/group_chats.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  name: MyString
  creator: one
  icon: MyString

two:
  name: MyString
  creator: two
  icon: MyString
</file>

<file path="test/fixtures/memberships.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: memberships
#
#  id                  :bigint           not null, primary key
#  joined_at           :datetime
#  member_role         :string
#  membershipable_type :string           not null
#  nickname            :string
#  created_at          :datetime         not null
#  updated_at          :datetime         not null
#  membershipable_id   :bigint           not null
#  user_id             :bigint           not null
#
# Indexes
#
#  index_memberships_on_membershipable  (membershipable_type,membershipable_id)
#  index_memberships_on_user_id         (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  member_role: MyString
  nickname: MyString
  membershipable: one
  membershipable_type: Membershipable
  joined_at: 2025-04-02 19:21:09

two:
  user: two
  member_role: MyString
  nickname: MyString
  membershipable: two
  membershipable_type: Membershipable
  joined_at: 2025-04-02 19:21:09
</file>

<file path="test/fixtures/messages.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: messages
#
#  id               :bigint           not null, primary key
#  attachment_url   :string
#  content          :text
#  is_pinned        :boolean
#  messageable_type :string           not null
#  created_at       :datetime         not null
#  updated_at       :datetime         not null
#  messageable_id   :bigint           not null
#  user_id          :bigint           not null
#
# Indexes
#
#  index_messages_on_messageable  (messageable_type,messageable_id)
#  index_messages_on_user_id      (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  content: MyText
  attachment_url: MyString
  is_pinned: false
  messageable: one
  messageable_type: Messageable

two:
  user: two
  content: MyText
  attachment_url: MyString
  is_pinned: false
  messageable: two
  messageable_type: Messageable
</file>

<file path="test/fixtures/notifications.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: notifications
#
#  id                :bigint           not null, primary key
#  notification_type :string
#  read              :boolean
#  source_type       :string
#  created_at        :datetime         not null
#  updated_at        :datetime         not null
#  source_id         :string
#  user_id           :bigint           not null
#
# Indexes
#
#  index_notifications_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  source_type: MyString
  source_id: MyString
  notification_type: MyString
  read: false

two:
  user: two
  source_type: MyString
  source_id: MyString
  notification_type: MyString
  read: false
</file>

<file path="test/fixtures/realms.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: realms
#
#  id          :bigint           not null, primary key
#  banner      :string
#  description :text
#  icon        :string
#  is_public   :boolean
#  name        :string
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_realms_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  name: MyString
  description: MyText
  icon: MyString
  banner: MyString
  owner: one
  is_public: false

two:
  name: MyString
  description: MyText
  icon: MyString
  banner: MyString
  owner: two
  is_public: false
</file>

<file path="test/fixtures/user_profiles.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: user_profiles
#
#  id            :bigint           not null, primary key
#  avatar        :string
#  bio           :text
#  display_name  :string
#  gaming_status :string
#  username      :string
#  created_at    :datetime         not null
#  updated_at    :datetime         not null
#  user_id       :bigint           not null
#
# Indexes
#
#  index_user_profiles_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  username: MyString
  display_name: MyString
  avatar: MyString
  bio: MyText
  gaming_status: MyString

two:
  user: two
  username: MyString
  display_name: MyString
  avatar: MyString
  bio: MyText
  gaming_status: MyString
</file>

<file path="test/fixtures/users.yml">
# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# == Schema Information
#
# Table name: users
#
#  id              :bigint           not null, primary key
#  email           :string           not null
#  password_digest :string           not null
#  verified        :boolean          default(FALSE), not null
#  created_at      :datetime         not null
#  updated_at      :datetime         not null
#
# Indexes
#
#  index_users_on_email  (email) UNIQUE
#
lazaro_nixon:
  email: lazaronixon@hotmail.com
  password_digest: <%= BCrypt::Password.create("Secret1*3*5*") %>
  verified: true
</file>

<file path="test/mailers/user_mailer_test.rb">
# frozen_string_literal: true

require 'test_helper'

class UserMailerTest < ActionMailer::TestCase
  setup do
    @user = users(:lazaro_nixon)
  end

  test 'password_reset' do
    mail = UserMailer.with(user: @user).password_reset
    assert_equal 'Reset your password', mail.subject
    assert_equal [@user.email], mail.to
  end

  test 'email_verification' do
    mail = UserMailer.with(user: @user).email_verification
    assert_equal 'Verify your email', mail.subject
    assert_equal [@user.email], mail.to
  end
end
</file>

<file path="test/models/activity_test.rb">
# == Schema Information
#
# Table name: activities
#
#  id          :bigint           not null, primary key
#  action      :string
#  target_name :string
#  target_type :string           not null
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  target_id   :bigint           not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_activities_on_target   (target_type,target_id)
#  index_activities_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class ActivityTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/channel_test.rb">
# == Schema Information
#
# Table name: channels
#
#  id           :bigint           not null, primary key
#  channel_type :string
#  description  :text
#  is_private   :boolean
#  name         :string
#  created_at   :datetime         not null
#  updated_at   :datetime         not null
#  realm_id     :bigint           not null
#
# Indexes
#
#  index_channels_on_realm_id  (realm_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#
require "test_helper"

class ChannelTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/direct_message_participant_test.rb">
# == Schema Information
#
# Table name: direct_message_participants
#
#  id                       :bigint           not null, primary key
#  created_at               :datetime         not null
#  updated_at               :datetime         not null
#  direct_message_thread_id :bigint           not null
#  user_id                  :bigint           not null
#
# Indexes
#
#  index_direct_message_participants_on_direct_message_thread_id  (direct_message_thread_id)
#  index_direct_message_participants_on_user_id                   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (direct_message_thread_id => direct_message_threads.id)
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class DirectMessageParticipantTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/direct_message_thread_test.rb">
# == Schema Information
#
# Table name: direct_message_threads
#
#  id         :bigint           not null, primary key
#  created_at :datetime         not null
#  updated_at :datetime         not null
#
require "test_helper"

class DirectMessageThreadTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/event_participant_test.rb">
# == Schema Information
#
# Table name: event_participants
#
#  id         :bigint           not null, primary key
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#  event_id   :bigint           not null
#  user_id    :bigint           not null
#
# Indexes
#
#  index_event_participants_on_event_id  (event_id)
#  index_event_participants_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (event_id => events.id)
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class EventParticipantTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/event_test.rb">
# == Schema Information
#
# Table name: events
#
#  id          :bigint           not null, primary key
#  description :text
#  end_time    :datetime
#  start_time  :datetime
#  title       :string
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  realm_id    :bigint           not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_events_on_realm_id  (realm_id)
#  index_events_on_user_id   (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (realm_id => realms.id)
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class EventTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/friend_test.rb">
# == Schema Information
#
# Table name: friends
#
#  id         :bigint           not null, primary key
#  status     :string
#  created_at :datetime         not null
#  updated_at :datetime         not null
#  friend_id  :bigint           not null
#  user_id    :bigint           not null
#
# Indexes
#
#  index_friends_on_friend_id  (friend_id)
#  index_friends_on_user_id    (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (friend_id => friends.id)
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class FriendTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/group_chat_test.rb">
require "test_helper"

class GroupChatTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/membership_test.rb">
# == Schema Information
#
# Table name: memberships
#
#  id                  :bigint           not null, primary key
#  joined_at           :datetime
#  member_role         :string
#  membershipable_type :string           not null
#  nickname            :string
#  created_at          :datetime         not null
#  updated_at          :datetime         not null
#  membershipable_id   :bigint           not null
#  user_id             :bigint           not null
#
# Indexes
#
#  index_memberships_on_membershipable  (membershipable_type,membershipable_id)
#  index_memberships_on_user_id         (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class MembershipTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/message_test.rb">
# == Schema Information
#
# Table name: messages
#
#  id               :bigint           not null, primary key
#  attachment_url   :string
#  content          :text
#  is_pinned        :boolean
#  messageable_type :string           not null
#  created_at       :datetime         not null
#  updated_at       :datetime         not null
#  messageable_id   :bigint           not null
#  user_id          :bigint           not null
#
# Indexes
#
#  index_messages_on_messageable  (messageable_type,messageable_id)
#  index_messages_on_user_id      (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class MessageTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/notification_test.rb">
# == Schema Information
#
# Table name: notifications
#
#  id                :bigint           not null, primary key
#  notification_type :string
#  read              :boolean
#  source_type       :string
#  created_at        :datetime         not null
#  updated_at        :datetime         not null
#  source_id         :string
#  user_id           :bigint           not null
#
# Indexes
#
#  index_notifications_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class NotificationTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/realm_test.rb">
# == Schema Information
#
# Table name: realms
#
#  id          :bigint           not null, primary key
#  banner      :string
#  description :text
#  icon        :string
#  is_public   :boolean
#  name        :string
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#  user_id     :bigint           not null
#
# Indexes
#
#  index_realms_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class RealmTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path="test/models/user_profile_test.rb">
# == Schema Information
#
# Table name: user_profiles
#
#  id            :bigint           not null, primary key
#  avatar        :string
#  bio           :text
#  display_name  :string
#  gaming_status :string
#  username      :string
#  created_at    :datetime         not null
#  updated_at    :datetime         not null
#  user_id       :bigint           not null
#
# Indexes
#
#  index_user_profiles_on_user_id  (user_id)
#
# Foreign Keys
#
#  fk_rails_...  (user_id => users.id)
#
require "test_helper"

class UserProfileTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
</file>

<file path=".annotaterb.yml">
---
:position: before
:position_in_additional_file_patterns: before
:position_in_class: before
:position_in_factory: before
:position_in_fixture: before
:position_in_routes: before
:position_in_serializer: before
:position_in_test: before
:classified_sort: true
:exclude_controllers: true
:exclude_factories: false
:exclude_fixtures: false
:exclude_helpers: true
:exclude_scaffolds: true
:exclude_serializers: false
:exclude_sti_subclasses: false
:exclude_tests: false
:force: false
:format_markdown: false
:format_rdoc: false
:format_yard: false
:frozen: false
:ignore_model_sub_dir: false
:ignore_unknown_models: false
:include_version: false
:show_check_constraints: false
:show_complete_foreign_keys: false
:show_foreign_keys: true
:show_indexes: true
:simple_indexes: false
:sort: false
:timestamp: false
:trace: false
:with_comment: true
:with_column_comments: true
:with_table_comments: true
:active_admin: false
:command:
:debug: false
:hide_default_column_types: ''
:hide_limit_column_types: ''
:ignore_columns:
:ignore_routes:
:models: true
:routes: false
:skip_on_db_migrate: false
:target_action: :do_annotations
:wrapper:
:wrapper_close:
:wrapper_open:
:classes_default_to_s: []
:additional_file_patterns: []
:model_dir:
- app/models
:require: []
:root_dir:
- ''
</file>

<file path=".rubocop-https---www-goodcop-style-base-yml">
---
AllCops:
  DisabledByDefault: true

Layout/ArgumentAlignment:
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/ArrayAlignment:
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/AssignmentIndentation:
  Enabled: true

Layout/BeginEndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line

Layout/BlockAlignment:
  Enabled: true
  EnforcedStyleAlignWith: either

Layout/BlockEndNewline:
  Enabled: true

Layout/ClosingHeredocIndentation:
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Enabled: true

Layout/CommentIndentation:
  Enabled: true
  AllowForAlignment: true

Layout/ConditionPosition:
  Enabled: true

Layout/DefEndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line

Layout/DotPosition:
  Enabled: true
  EnforcedStyle: leading

Layout/ElseAlignment:
  Enabled: true

Layout/EmptyComment:
  Enabled: true
  AllowBorderComment: true
  AllowMarginComment: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

Layout/EmptyLineAfterMultilineCondition:
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Enabled: true
  EmptyLineBetweenMethodDefs: true
  EmptyLineBetweenClassDefs: true
  EmptyLineBetweenModuleDefs: true
  AllowAdjacentOneLineDefs: true
  NumberOfEmptyLines: 1

Layout/EmptyLines:
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Enabled: true
  EnforcedStyle: around

Layout/EmptyLinesAroundArguments:
  Enabled: true

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true
  AllowAliasSyntax: true
  AllowedMethods:
    - alias_method
    - public
    - protected
    - private

Layout/EmptyLinesAroundBeginBody:
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Enabled: true

Layout/EmptyLinesAroundClassBody:
  Enabled: true
  EnforcedStyle: no_empty_lines

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: true

Layout/EmptyLinesAroundMethodBody:
  Enabled: true

Layout/EmptyLinesAroundModuleBody:
  Enabled: true
  EnforcedStyle: no_empty_lines

Layout/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: start_of_line

Layout/EndOfLine:
  Enabled: true
  EnforcedStyle: native

Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: true
  AllowBeforeTrailingComments: false
  ForceEqualSignAlignment: false

Layout/FirstArrayElementLineBreak:
  Enabled: true
  AllowMultilineFinalElement: false

Layout/FirstHashElementLineBreak:
  Enabled: true
  AllowMultilineFinalElement: false

Layout/FirstParameterIndentation:
  Enabled: true
  EnforcedStyle: consistent

Layout/HashAlignment:
  Enabled: true
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect

Layout/HeredocArgumentClosingParenthesis:
  Enabled: true

Layout/HeredocIndentation:
  Enabled: true

Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: normal

Layout/IndentationStyle:
  Enabled: true
  EnforcedStyle: spaces

Layout/IndentationWidth:
  Enabled: true
  Width: 2

Layout/InitialIndentation:
  Enabled: true

Layout/LeadingCommentSpace:
  Enabled: true
  AllowRBSInlineAnnotation: true

Layout/LeadingEmptyLines:
  Enabled: true

Layout/LineContinuationSpacing:
  Enabled: true
  EnforcedStyle: space

Layout/LineEndStringConcatenationIndentation:
  Enabled: true
  EnforcedStyle: indented

Layout/MultilineArrayBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineArrayLineBreaks:
  Enabled: true
  AllowMultilineFinalElement: false

Layout/MultilineAssignmentLayout:
  Enabled: true
  EnforcedStyle: same_line

Layout/MultilineBlockLayout:
  Enabled: true

Layout/MultilineHashBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineHashKeyLineBreaks:
  Enabled: true
  AllowMultilineFinalElement: false

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented

Layout/MultilineMethodDefinitionBraceLayout:
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineOperationIndentation:
  Enabled: true
  EnforcedStyle: indented

Layout/ParameterAlignment:
  Enabled: true
  EnforcedStyle: with_fixed_indentation

Layout/RescueEnsureAlignment:
  Enabled: true

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAfterMethodName:
  Enabled: true

Layout/SpaceAfterNot:
  Enabled: true

Layout/SpaceAfterSemicolon:
  Enabled: true

Layout/SpaceAroundBlockParameters:
  Enabled: true
  EnforcedStyleInsidePipes: no_space

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
  EnforcedStyle: space

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true
  AllowForAlignment: false
  EnforcedStyleForExponentOperator: space
  EnforcedStyleForRationalLiterals: space

Layout/SpaceBeforeBlockBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: space

Layout/SpaceBeforeBrackets:
  Enabled: true

Layout/SpaceBeforeComma:
  Enabled: true

Layout/SpaceBeforeComment:
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Enabled: true

Layout/SpaceBeforeSemicolon:
  Enabled: true

Layout/SpaceInLambdaLiteral:
  Enabled: true
  EnforcedStyle: require_space

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true
  EnforcedStyle: no_space

Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space

Layout/SpaceInsideParens:
  Enabled: true
  EnforcedStyle: no_space

Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: true

Layout/SpaceInsideRangeLiteral:
  Enabled: true

Layout/SpaceInsideReferenceBrackets:
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBrackets: no_space

Layout/SpaceInsideStringInterpolation:
  Enabled: true
  EnforcedStyle: no_space

Layout/TrailingEmptyLines:
  Enabled: true
  EnforcedStyle: final_newline

Layout/TrailingWhitespace:
  Enabled: true
  AllowInHeredoc: true

Lint/AmbiguousAssignment:
  Enabled: true

Lint/AmbiguousOperator:
  Enabled: true

Lint/AmbiguousOperatorPrecedence:
  Enabled: true

Lint/AmbiguousRange:
  Enabled: true
  RequireParenthesesForMethodChains: true

Lint/AmbiguousRegexpLiteral:
  Enabled: true

Lint/AssignmentInCondition:
  Enabled: true
  AllowSafeAssignment: true

Lint/BigDecimalNew:
  Enabled: true

Lint/CircularArgumentReference:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: true

Lint/ConstantOverwrittenInRescue:
  Enabled: true

Lint/Debugger:
  Enabled: true

Lint/DeprecatedClassMethods:
  Enabled: true

Lint/DeprecatedConstants:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/DisjunctiveAssignmentInConstructor:
  Enabled: true

Lint/DuplicateCaseCondition:
  Enabled: true

Lint/DuplicateHashKey:
  Enabled: true

Lint/DuplicateMagicComment:
  Enabled: true

Lint/DuplicateMatchPattern:
  Enabled: true

Lint/DuplicateMethods:
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/DuplicateRescueException:
  Enabled: true

Lint/EachWithObjectArgument:
  Enabled: true

Lint/ElseLayout:
  Enabled: true

Lint/EmptyBlock:
  Enabled: true
  AllowComments: true
  AllowEmptyLambdas: true

Lint/EmptyConditionalBody:
  Enabled: true
  AllowComments: true

Lint/EmptyEnsure:
  Enabled: true

Lint/EmptyExpression:
  Enabled: true

Lint/EmptyFile:
  Enabled: true
  AllowComments: true

Lint/EmptyInPattern:
  Enabled: true
  AllowComments: true

Lint/EmptyInterpolation:
  Enabled: true

Lint/EnsureReturn:
  Enabled: true

Lint/ErbNewArguments:
  Enabled: true

Lint/FlipFlop:
  Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/FloatOutOfRange:
  Enabled: true

Lint/FormatParameterMismatch:
  Enabled: true

Lint/HashCompareByIdentity:
  Enabled: true

Lint/HeredocMethodCallPosition:
  Enabled: true

Lint/IdentityComparison:
  Enabled: true

Lint/ImplicitStringConcatenation:
  Enabled: true

Lint/IncompatibleIoSelectWithFiberScheduler:
  Enabled: true

Lint/IneffectiveAccessModifier:
  Enabled: true

Lint/InheritException:
  Enabled: true

Lint/InterpolationCheck:
  Enabled: true

Lint/ItWithoutArgumentsInBlock:
  Enabled: true

Lint/LambdaWithoutLiteralBlock:
  Enabled: true

Lint/LiteralAssignmentInCondition:
  Enabled: true

Lint/LiteralInInterpolation:
  Enabled: true

Lint/MissingCopEnableDirective:
  Enabled: true

Lint/MultipleComparison:
  Enabled: true

Lint/NestedPercentLiteral:
  Enabled: true

Lint/NextWithoutAccumulator:
  Enabled: true

Lint/NoReturnInBeginEndBlocks:
  Enabled: true

Lint/NonAtomicFileOperation:
  Enabled: true

Lint/NonDeterministicRequireOrder:
  Enabled: true

Lint/NonLocalExitFromIterator:
  Enabled: true

Lint/NumberedParameterAssignment:
  Enabled: true

Lint/OrAssignmentToConstant:
  Enabled: true

Lint/OrderedMagicComments:
  Enabled: true

Lint/OutOfRangeRegexpRef:
  Enabled: true

Lint/ParenthesesAsGroupedExpression:
  Enabled: true

Lint/RaiseException:
  Enabled: true

Lint/RandOne:
  Enabled: true

Lint/RedundantCopDisableDirective:
  Enabled: true

Lint/RedundantCopEnableDirective:
  Enabled: true

Lint/RedundantDirGlobSort:
  Enabled: true

Lint/RedundantRegexpQuantifiers:
  Enabled: true

Lint/RedundantRequireStatement:
  Enabled: true

Lint/RedundantSafeNavigation:
  Enabled: true

Lint/RedundantSplatExpansion:
  Enabled: true
  AllowPercentLiteralArrayArgument: true

Lint/RedundantStringCoercion:
  Enabled: true

Lint/RedundantWithIndex:
  Enabled: true

Lint/RedundantWithObject:
  Enabled: true

Lint/RefinementImportMethods:
  Enabled: true

Lint/RegexpAsCondition:
  Enabled: true

Lint/RequireParentheses:
  Enabled: true

Lint/RequireRangeParentheses:
  Enabled: true

Lint/RequireRelativeSelfPath:
  Enabled: true

Lint/RescueType:
  Enabled: true

Lint/ReturnInVoidContext:
  Enabled: true

Lint/SafeNavigationChain:
  Enabled: true

Lint/SafeNavigationConsistency:
  Enabled: true

Lint/SafeNavigationWithEmpty:
  Enabled: true

Lint/ScriptPermission:
  Enabled: true

Lint/SelfAssignment:
  Enabled: true

Lint/SendWithMixinArgument:
  Enabled: true

Lint/ShadowedException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Lint/SuppressedException:
  Enabled: true
  AllowNil: true
  AllowComments: true

Lint/SymbolConversion:
  Enabled: true
  EnforcedStyle: strict

Lint/Syntax:
  Enabled: true

Lint/ToEnumArguments:
  Enabled: true

Lint/ToJSON:
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Enabled: true

Lint/TripleQuotes:
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Enabled: true

Lint/UnexpectedBlockArity:
  Enabled: true

Lint/UnifiedInteger:
  Enabled: true

Lint/UnmodifiedReduceAccumulator:
  Enabled: true

Lint/UnreachableCode:
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Lint/UriRegexp:
  Enabled: true

Lint/UselessAccessModifier:
  Enabled: true

Lint/UselessElseWithoutRescue:
  Enabled: true

Lint/UselessMethodDefinition:
  Enabled: true

Lint/UselessRescue:
  Enabled: true

Lint/UselessRuby2Keywords:
  Enabled: true

Lint/UselessSetterCall:
  Enabled: true

Lint/UselessTimes:
  Enabled: true

Migration/DepartmentName:
  Enabled: true

Security/CompoundHash:
  Enabled: true

Security/IoMethods:
  Enabled: true

Security/JSONLoad:
  Enabled: true

Security/Open:
  Enabled: true

Security/YAMLLoad:
  Enabled: true

Style/ArgumentsForwarding:
  Enabled: true

Style/ComparableClamp:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

Style/Dir:
  Enabled: true

Style/DirEmpty:
  Enabled: true

Style/EachForSimpleLoop:
  Enabled: true

Style/EachWithObject:
  Enabled: true

Style/EmptyBlockParameter:
  Enabled: true

Style/EmptyElse:
  Enabled: true
  EnforcedStyle: empty

Style/EmptyHeredoc:
  Enabled: true

Style/EmptyLambdaParameter:
  Enabled: true

Style/EnvHome:
  Enabled: true

Style/ExactRegexpMatch:
  Enabled: true

Style/ExpandPathArguments:
  Enabled: true

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always
  SafeAutoCorrect: true

Style/HashExcept:
  Enabled: true

Style/HashLikeCase:
  Enabled: true

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: no_mixed_keys
  EnforcedShorthandSyntax: always

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/IfWithSemicolon:
  Enabled: true

Style/InPatternThen:
  Enabled: true

Style/MagicCommentFormat:
  Enabled: true

Style/MapCompactWithConditionalBlock:
  Enabled: true

Style/MapToHash:
  Enabled: true

Style/MapToSet:
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Enabled: true

Style/MethodDefParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses

Style/ModuleFunction:
  Enabled: true
  EnforcedStyle: extend_self

Style/MultilineIfModifier:
  Enabled: true

Style/NegatedUnless:
  Enabled: true

Style/NegatedWhile:
  Enabled: true

Style/NumberedParameters:
  Enabled: true
  EnforcedStyle: disallow

Style/NumericLiteralPrefix:
  Enabled: true
  EnforcedOctalStyle: zero_with_o

Style/ObjectThen:
  Enabled: true
  EnforcedStyle: then

Style/OperatorMethodCall:
  Enabled: true

Style/OrAssignment:
  Enabled: true

Style/PreferredHashMethods:
  Enabled: true
  EnforcedStyle: short

Style/Proc:
  Enabled: true

Style/QuotedSymbols:
  Enabled: true
  EnforcedStyle: same_as_string_literals

Style/RaiseArgs:
  Enabled: true
  EnforcedStyle: compact

Style/RandomWithOffset:
  Enabled: true

Style/RedundantArrayConstructor:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantBegin:
  Enabled: true

Style/RedundantCondition:
  Enabled: true

Style/RedundantConditional:
  Enabled: true

Style/RedundantCurrentDirectoryInPath:
  Enabled: true

Style/RedundantDoubleSplatHashBraces:
  Enabled: true

Style/RedundantEach:
  Enabled: true

Style/RedundantException:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/RedundantFilterChain:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

Style/RedundantHeredocDelimiterQuotes:
  Enabled: true

Style/RedundantInitialize:
  Enabled: true
  AllowComments: true

Style/RedundantInterpolation:
  Enabled: true

Style/RedundantLineContinuation:
  Enabled: true

Style/RedundantRegexpArgument:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpConstructor:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: true

Style/RedundantSelf:
  Enabled: true

Style/RedundantSelfAssignmentBranch:
  Enabled: true

Style/RedundantSort:
  Enabled: true

Style/RedundantSortBy:
  Enabled: true

Style/RedundantStringEscape:
  Enabled: true

Style/RegexpLiteral:
  Enabled: true
  EnforcedStyle: slashes
  AllowInnerSlashes: false

Style/RescueModifier:
  Enabled: true

Style/RescueStandardError:
  Enabled: true
  EnforcedStyle: implicit

Style/SafeNavigation:
  Enabled: true

Style/Sample:
  Enabled: true

Style/SelfAssignment:
  Enabled: true

Style/Semicolon:
  Enabled: true
  AllowAsExpressionSeparator: true

Style/Send:
  Enabled: true

Style/SendWithLiteralMethodName:
  Enabled: true
  AllowSend: true

Style/SignalException:
  Enabled: true
  EnforcedStyle: only_raise

Style/SingleArgumentDig:
  Enabled: true

Style/SingleLineDoEndBlock:
  Enabled: true

Style/SoleNestedConditional:
  Enabled: true
  AllowModifier: false

Style/StabbyLambdaParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses

Style/StderrPuts:
  Enabled: true

Style/StringChars:
  Enabled: true

Style/StringConcatenation:
  Enabled: true
  Mode: aggressive

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes

Style/StringLiteralsInInterpolation:
  Enabled: true
  EnforcedStyle: single_quotes

Style/Strip:
  Enabled: true

Style/SuperArguments:
  Enabled: true

Style/SuperWithArgsParentheses:
  Enabled: true

Style/SwapValues:
  Enabled: true

Style/SymbolLiteral:
  Enabled: true

Style/SymbolProc:
  Enabled: true
  AllowMethodsWithArguments: false
  AllowComments: true

Style/TernaryParentheses:
  Enabled: true
  EnforcedStyle: require_parentheses_when_complex
  AllowSafeAssignment: true

Style/TrailingBodyOnClass:
  Enabled: true

Style/TrailingBodyOnMethodDefinition:
  Enabled: true

Style/TrailingBodyOnModule:
  Enabled: true

Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInBlockArgs:
  Enabled: true

Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: comma

Style/TrailingMethodEndStatement:
  Enabled: true

Style/TrailingUnderscoreVariable:
  Enabled: true
  AllowNamedUnderscoreVariables: true

Style/UnlessElse:
  Enabled: true

Style/UnlessLogicalOperators:
  Enabled: true
  EnforcedStyle: forbid_mixed_logical_operators

Style/UnpackFirst:
  Enabled: true

Style/VariableInterpolation:
  Enabled: true

Style/WhenThen:
  Enabled: true

Style/WhileUntilDo:
  Enabled: true

Style/YAMLFileRead:
  Enabled: true
</file>

<file path="config.ru">
# frozen_string_literal: true

# This file is used by Rack-based servers to start the application.

require_relative 'config/environment'

run Rails.application
Rails.application.load_server
</file>

<file path="app/frontend/entrypoints/application.js">
// To see this message, add the following to the `<head>` section in your
// views/layouts/application.html.erb
//
//    <%= vite_client_tag %>
//    <%= vite_javascript_tag 'application' %>
console.log("Vite ⚡️ Rails");

// If using a TypeScript entrypoint file:
//     <%= vite_typescript_tag 'application' %>
//
// If you want to use .jsx or .tsx, add the extension:
//     <%= vite_javascript_tag 'application.jsx' %>

console.log(
  "Visit the guide for more information: ",
  "https://vite-ruby.netlify.app/guide/rails"
);

// Example: Load Rails libraries in Vite.
//
// import * as Turbo from '@hotwired/turbo'
// Turbo.start()
//
// import ActiveStorage from '@rails/activestorage'
// ActiveStorage.start()
//
// // Import all channels.
// const channels = import.meta.globEager('./**/*_channel.js')

// Example: Import a stylesheet in app/frontend/index.css
// import '~/index.css'

import "../javascript/application";
</file>

<file path="app/frontend/javascript/controllers/application.js">
import { Application } from "@hotwired/stimulus"

const application = Application.start()

// Configure Stimulus development experience
application.debug = false
window.Stimulus   = application

export { application }
</file>

<file path="app/frontend/javascript/controllers/hello_controller.js">
import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  connect() {
    this.element.textContent = "Hello World!"
  }
}
</file>

<file path="app/frontend/javascript/controllers/index.js">
// This file is auto-generated by ./bin/rails stimulus:manifest:update
// Run that command whenever you add a new controller or create them with
// ./bin/rails generate stimulus controllerName

import { application } from "./application"

import HelloController from "./hello_controller"
application.register("hello", HelloController)
</file>

<file path="app/frontend/javascript/application.js">
import "@hotwired/turbo-rails"
import "./controllers"
</file>

<file path="app/frontend/stylesheets/application.tailwind.css">
@import "tailwindcss";

@source "../../../app/views/**/*.html.erb";
@source "../../../app/views/**/*.rb";
@source "../../../app/helpers/**/*.rb";
@source "../../../app/components/**/*.rb";

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 0.5rem;

    /* ruby_ui especific */
    --warning: 38 92% 50%;
    --warning-foreground: 0 0% 100%;
    --success: 87 100% 37%;
    --success-foreground: 0 0% 100%;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;

    /* ruby_ui especific */
    --warning: 38 92% 50%;
    --warning-foreground: 0 0% 100%;
    --success: 84 81% 44%;
    --success-foreground: 0 0% 100%;
  }
}

@layer base {
  /* * { */
  /*   @apply border-border; */
  /* } */

  body {
    /*@apply bg-background text-foreground;*/
    font-feature-settings: "rlig" 1, "calt" 1;

    /* docs specific */
    /* https://css-tricks.com/snippets/css/system-font-stack/ */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  }
}
</file>

<file path="app/views/pwa/manifest.json.erb">
{
  "name": "Shore",
  "icons": [
    {
      "src": "/icon.png",
      "type": "image/png",
      "sizes": "512x512"
    },
    {
      "src": "/icon.png",
      "type": "image/png",
      "sizes": "512x512",
      "purpose": "maskable"
    }
  ],
  "start_url": "/",
  "display": "standalone",
  "scope": "/",
  "description": "Shore.",
  "theme_color": "red",
  "background_color": "red"
}
</file>

<file path="app/views/pwa/service-worker.js">
// Add a service worker for processing Web Push notifications:
//
// self.addEventListener("push", async (event) => {
//   const { title, options } = await event.data.json()
//   event.waitUntil(self.registration.showNotification(title, options))
// })
//
// self.addEventListener("notificationclick", function(event) {
//   event.notification.close()
//   event.waitUntil(
//     clients.matchAll({ type: "window" }).then((clientList) => {
//       for (let i = 0; i < clientList.length; i++) {
//         let client = clientList[i]
//         let clientPath = (new URL(client.url)).pathname
//
//         if (clientPath == event.notification.data.path && "focus" in client) {
//           return client.focus()
//         }
//       }
//
//       if (clients.openWindow) {
//         return clients.openWindow(event.notification.data.path)
//       }
//     })
//   )
// })
</file>

<file path="bin/brakeman">
#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"

ARGV.unshift("--ensure-latest")

load Gem.bin_path("brakeman", "brakeman")
</file>

<file path="bin/jobs">
#!/usr/bin/env ruby

require_relative "../config/environment"
require "solid_queue/cli"

SolidQueue::Cli.start(ARGV)
</file>

<file path="bin/kamal">
#!/usr/bin/env ruby
# frozen_string_literal: true

#
# This file was generated by Bundler.
#
# The application 'kamal' is installed as part of a gem, and
# this file is here to facilitate running it.
#

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../Gemfile", __dir__)

bundle_binstub = File.expand_path("bundle", __dir__)

if File.file?(bundle_binstub)
  if File.read(bundle_binstub, 300).include?("This file was generated by Bundler")
    load(bundle_binstub)
  else
    abort("Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.
Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.")
  end
end

require "rubygems"
require "bundler/setup"

load Gem.bin_path("kamal", "kamal")
</file>

<file path="bin/rubocop">
#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"

# explicit rubocop config increases performance slightly while avoiding config confusion.
ARGV.unshift("--config", File.expand_path("../.rubocop.yml", __dir__))

load Gem.bin_path("rubocop", "rubocop")
</file>

<file path="bin/thrust">
#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"

load Gem.bin_path("thruster", "thrust")
</file>

<file path="config/initializers/filter_parameter_logging.rb">
# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Configure parameters to be partially matched (e.g. passw matches password) and filtered from the log file.
# Use this to limit dissemination of sensitive information.
# See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.
Rails.application.config.filter_parameters += [
  :passw, :email, :secret, :token, :_key, :crypt, :salt, :certificate, :otp, :ssn, :cvv, :cvc
]
</file>

<file path="config/cable.yml">
# Async adapter only works within the same process, so for manually triggering cable updates from a console,
# and seeing results in the browser, you must do so from the web console (running inside the dev process),
# not a terminal started via bin/rails console! Add "console" to any action or any ERB template view
# to make the web console appear.
development:
  adapter: async

test:
  adapter: test

production:
  adapter: solid_cable
  connects_to:
    database:
      writing: cable
  polling_interval: 0.1.seconds
  message_retention: 1.day
</file>

<file path="config/cache.yml">
default: &default
  store_options:
    # Cap age of oldest cache entry to fulfill retention policies
    # max_age: <%= 60.days.to_i %>
    max_size: <%= 256.megabytes %>
    namespace: <%= Rails.env %>

development:
  <<: *default

test:
  <<: *default

production:
  database: cache
  <<: *default
</file>

<file path="config/deploy.yml">
# Name of your application. Used to uniquely configure containers.
service: shore

# Name of the container image.
image: your-user/shore

# Deploy to these servers.
servers:
  web:
    - 192.168.0.1
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: app.example.com

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: your-user

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    # Run the Solid Queue Supervisor inside the web server's Puma process to do jobs.
    # When you start using multiple servers, you should split out job processing to a dedicated machine.
    SOLID_QUEUE_IN_PUMA: true

    # Set number of processes dedicated to Solid Queue (default: 1)
    # JOB_CONCURRENCY: 3

    # Set number of cores available to the application on each server (default: 1).
    # WEB_CONCURRENCY: 2

    # Match this to any external database server to configure Active Record correctly
    # Use shore-db for a db accessory server on same machine via local kamal docker network.
    # DB_HOST: 192.168.0.2

    # Log everything from Rails
    # RAILS_LOG_LEVEL: debug

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "shore_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.4.1
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Use accessory services (secrets come from .kamal/secrets).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     # Change to 3306 to expose port to the world instead of just local network.
#     port: "127.0.0.1:3306:3306"
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
</file>

<file path="config/puma.rb">
# frozen_string_literal: true

# This configuration file will be evaluated by Puma. The top-level methods that
# are invoked here are part of Puma's configuration DSL. For more information
# about methods provided by the DSL, see https://puma.io/puma/Puma/DSL.html.
#
# Puma starts a configurable number of processes (workers) and each process
# serves each request in a thread from an internal thread pool.
#
# You can control the number of workers using ENV["WEB_CONCURRENCY"]. You
# should only set this value when you want to run 2 or more workers. The
# default is already 1.
#
# The ideal number of threads per worker depends both on how much time the
# application spends waiting for IO operations and on how much you wish to
# prioritize throughput over latency.
#
# As a rule of thumb, increasing the number of threads will increase how much
# traffic a given process can handle (throughput), but due to CRuby's
# Global VM Lock (GVL) it has diminishing returns and will degrade the
# response time (latency) of the application.
#
# The default is set to 3 threads as it's deemed a decent compromise between
# throughput and latency for the average Rails application.
#
# Any libraries that use a connection pool or another resource pool should
# be configured to provide at least as many connections as the number of
# threads. This includes Active Record's `pool` parameter in `database.yml`.
threads_count = ENV.fetch('RAILS_MAX_THREADS', 3)
threads threads_count, threads_count

# Specifies the `port` that Puma will listen on to receive requests; default is 3000.
port ENV.fetch('PORT', 3000)

# Allow puma to be restarted by `bin/rails restart` command.
plugin :tmp_restart

# Run the Solid Queue supervisor inside of Puma for single-server deployments
plugin :solid_queue if ENV['SOLID_QUEUE_IN_PUMA']

# Specify the PID file. Defaults to tmp/pids/server.pid in development.
# In other environments, only set the PID file if requested.
pidfile ENV['PIDFILE'] if ENV['PIDFILE']
</file>

<file path="config/queue.yml">
default: &default
  dispatchers:
    - polling_interval: 1
      batch_size: 500
  workers:
    - queues: "*"
      threads: 3
      processes: <%= ENV.fetch("JOB_CONCURRENCY", 1) %>
      polling_interval: 0.1

development:
  <<: *default

test:
  <<: *default

production:
  <<: *default
</file>

<file path="config/recurring.yml">
# production:
#   periodic_cleanup:
#     class: CleanSoftDeletedRecordsJob
#     queue: background
#     args: [ 1000, { batch_size: 500 } ]
#     schedule: every hour
#   periodic_command:
#     command: "SoftDeletedRecord.due.delete_all"
#     priority: 2
#     schedule: at 5am every day
</file>

<file path="config/vite.json">
{
  "all": {
    "sourceCodeDir": "app/frontend",
    "watchAdditionalPaths": []
  },
  "development": {
    "autoBuild": true,
    "publicOutputDir": "vite-dev",
    "port": 3036
  },
  "test": {
    "autoBuild": true,
    "publicOutputDir": "vite-test",
    "port": 3037
  }
}
</file>

<file path="db/cable_schema.rb">
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[8.0].define(version: 1) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "pg_catalog.plpgsql"

  create_table "solid_cable_messages", force: :cascade do |t|
    t.binary "channel", null: false
    t.binary "payload", null: false
    t.datetime "created_at", null: false
    t.bigint "channel_hash", null: false
    t.index ["channel"], name: "index_solid_cable_messages_on_channel"
    t.index ["channel_hash"], name: "index_solid_cable_messages_on_channel_hash"
    t.index ["created_at"], name: "index_solid_cable_messages_on_created_at"
  end
end
</file>

<file path="db/cache_schema.rb">
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[8.0].define(version: 1) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "pg_catalog.plpgsql"

  create_table "solid_cache_entries", force: :cascade do |t|
    t.binary "key", null: false
    t.binary "value", null: false
    t.datetime "created_at", null: false
    t.bigint "key_hash", null: false
    t.integer "byte_size", null: false
    t.index ["byte_size"], name: "index_solid_cache_entries_on_byte_size"
    t.index ["key_hash", "byte_size"], name: "index_solid_cache_entries_on_key_hash_and_byte_size"
    t.index ["key_hash"], name: "index_solid_cache_entries_on_key_hash", unique: true
  end
end
</file>

<file path="db/queue_schema.rb">
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[8.0].define(version: 1) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "pg_catalog.plpgsql"

  create_table "solid_queue_blocked_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.string "queue_name", null: false
    t.integer "priority", default: 0, null: false
    t.string "concurrency_key", null: false
    t.datetime "expires_at", null: false
    t.datetime "created_at", null: false
    t.index ["concurrency_key", "priority", "job_id"], name: "index_solid_queue_blocked_executions_for_release"
    t.index ["expires_at", "concurrency_key"], name: "index_solid_queue_blocked_executions_for_maintenance"
    t.index ["job_id"], name: "index_solid_queue_blocked_executions_on_job_id", unique: true
  end

  create_table "solid_queue_claimed_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.bigint "process_id"
    t.datetime "created_at", null: false
    t.index ["job_id"], name: "index_solid_queue_claimed_executions_on_job_id", unique: true
    t.index ["process_id", "job_id"], name: "index_solid_queue_claimed_executions_on_process_id_and_job_id"
  end

  create_table "solid_queue_failed_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.text "error"
    t.datetime "created_at", null: false
    t.index ["job_id"], name: "index_solid_queue_failed_executions_on_job_id", unique: true
  end

  create_table "solid_queue_jobs", force: :cascade do |t|
    t.string "queue_name", null: false
    t.string "class_name", null: false
    t.text "arguments"
    t.integer "priority", default: 0, null: false
    t.string "active_job_id"
    t.datetime "scheduled_at"
    t.datetime "finished_at"
    t.string "concurrency_key"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["active_job_id"], name: "index_solid_queue_jobs_on_active_job_id"
    t.index ["class_name"], name: "index_solid_queue_jobs_on_class_name"
    t.index ["finished_at"], name: "index_solid_queue_jobs_on_finished_at"
    t.index ["queue_name", "finished_at"], name: "index_solid_queue_jobs_for_filtering"
    t.index ["scheduled_at", "finished_at"], name: "index_solid_queue_jobs_for_alerting"
  end

  create_table "solid_queue_pauses", force: :cascade do |t|
    t.string "queue_name", null: false
    t.datetime "created_at", null: false
    t.index ["queue_name"], name: "index_solid_queue_pauses_on_queue_name", unique: true
  end

  create_table "solid_queue_processes", force: :cascade do |t|
    t.string "kind", null: false
    t.datetime "last_heartbeat_at", null: false
    t.bigint "supervisor_id"
    t.integer "pid", null: false
    t.string "hostname"
    t.text "metadata"
    t.datetime "created_at", null: false
    t.string "name", null: false
    t.index ["last_heartbeat_at"], name: "index_solid_queue_processes_on_last_heartbeat_at"
    t.index ["name", "supervisor_id"], name: "index_solid_queue_processes_on_name_and_supervisor_id", unique: true
    t.index ["supervisor_id"], name: "index_solid_queue_processes_on_supervisor_id"
  end

  create_table "solid_queue_ready_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.string "queue_name", null: false
    t.integer "priority", default: 0, null: false
    t.datetime "created_at", null: false
    t.index ["job_id"], name: "index_solid_queue_ready_executions_on_job_id", unique: true
    t.index ["priority", "job_id"], name: "index_solid_queue_poll_all"
    t.index ["queue_name", "priority", "job_id"], name: "index_solid_queue_poll_by_queue"
  end

  create_table "solid_queue_recurring_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.string "task_key", null: false
    t.datetime "run_at", null: false
    t.datetime "created_at", null: false
    t.index ["job_id"], name: "index_solid_queue_recurring_executions_on_job_id", unique: true
    t.index ["task_key", "run_at"], name: "index_solid_queue_recurring_executions_on_task_key_and_run_at", unique: true
  end

  create_table "solid_queue_recurring_tasks", force: :cascade do |t|
    t.string "key", null: false
    t.string "schedule", null: false
    t.string "command", limit: 2048
    t.string "class_name"
    t.text "arguments"
    t.string "queue_name"
    t.integer "priority", default: 0
    t.boolean "static", default: true, null: false
    t.text "description"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["key"], name: "index_solid_queue_recurring_tasks_on_key", unique: true
    t.index ["static"], name: "index_solid_queue_recurring_tasks_on_static"
  end

  create_table "solid_queue_scheduled_executions", force: :cascade do |t|
    t.bigint "job_id", null: false
    t.string "queue_name", null: false
    t.integer "priority", default: 0, null: false
    t.datetime "scheduled_at", null: false
    t.datetime "created_at", null: false
    t.index ["job_id"], name: "index_solid_queue_scheduled_executions_on_job_id", unique: true
    t.index ["scheduled_at", "priority", "job_id"], name: "index_solid_queue_dispatch_all"
  end

  create_table "solid_queue_semaphores", force: :cascade do |t|
    t.string "key", null: false
    t.integer "value", default: 1, null: false
    t.datetime "expires_at", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["expires_at"], name: "index_solid_queue_semaphores_on_expires_at"
    t.index ["key", "value"], name: "index_solid_queue_semaphores_on_key_and_value"
    t.index ["key"], name: "index_solid_queue_semaphores_on_key", unique: true
  end

  add_foreign_key "solid_queue_blocked_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
  add_foreign_key "solid_queue_claimed_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
  add_foreign_key "solid_queue_failed_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
  add_foreign_key "solid_queue_ready_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
  add_foreign_key "solid_queue_recurring_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
  add_foreign_key "solid_queue_scheduled_executions", "solid_queue_jobs", column: "job_id", on_delete: :cascade
end
</file>

<file path="public/400.html">
<!doctype html>

<html lang="en">

  <head>

    <title>The server cannot process the request due to a client error (400 Bad Request)</title>

    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, width=device-width">
    <meta name="robots" content="noindex, nofollow">

    <style>

      *, *::before, *::after {
        box-sizing: border-box;
      }

      * {
        margin: 0;
      }

      html {
        font-size: 16px;
      }

      body {
        background: #FFF;
        color: #261B23;
        display: grid;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Aptos, Roboto, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: clamp(1rem, 2.5vw, 2rem);
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: 400;
        letter-spacing: -0.0025em;
        line-height: 1.4;
        min-height: 100vh;
        place-items: center;
        text-rendering: optimizeLegibility;
        -webkit-text-size-adjust: 100%;
      }

      a {
        color: inherit;
        font-weight: 700;
        text-decoration: underline;
        text-underline-offset: 0.0925em;
      }

      b, strong {
        font-weight: 700;
      }

      i, em {
        font-style: italic;
      }

      main {
        display: grid;
        gap: 1em;
        padding: 2em;
        place-items: center;
        text-align: center;
      }

      main header {
        width: min(100%, 12em);
      }

      main header svg {
        height: auto;
        max-width: 100%;
        width: 100%;
      }

      main article {
        width: min(100%, 30em);
      }

      main article p {
        font-size: 75%;
      }

      main article br {

        display: none;

        @media(min-width: 48em) {
          display: inline;
        }

      }

    </style>

  </head>

  <body>

    <!-- This file lives in public/400.html -->

    <main>
      <header>
        <svg height="172" viewBox="0 0 480 172" width="480" xmlns="http://www.w3.org/2000/svg"><path d="m124.48 3.00509-45.6889 100.02991h26.2239v-28.1168h38.119v28.1168h21.628v35.145h-21.628v30.82h-37.308v-30.82h-72.1833v-31.901l50.2851-103.27391zm115.583 168.69891c-40.822 0-64.884-35.146-64.884-85.7015 0-50.5554 24.062-85.700907 64.884-85.700907 40.823 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.061 85.7015-64.884 85.7015zm0-133.2831c-17.572 0-22.709 21.8984-22.709 47.5816 0 25.6835 5.137 47.5815 22.709 47.5815 17.303 0 22.71-21.898 22.71-47.5815 0-25.6832-5.407-47.5816-22.71-47.5816zm140.456 133.2831c-40.823 0-64.884-35.146-64.884-85.7015 0-50.5554 24.061-85.700907 64.884-85.700907 40.822 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.062 85.7015-64.884 85.7015zm0-133.2831c-17.573 0-22.71 21.8984-22.71 47.5816 0 25.6835 5.137 47.5815 22.71 47.5815 17.302 0 22.709-21.898 22.709-47.5815 0-25.6832-5.407-47.5816-22.709-47.5816z" fill="#f0eff0"/><path d="m123.606 85.4445c3.212 1.0523 5.538 4.2089 5.538 8.0301 0 6.1472-4.209 9.5254-11.298 9.5254h-15.617v-34.0033h14.565c7.089 0 11.353 3.1566 11.353 9.2484 0 3.6551-2.049 6.3134-4.541 7.1994zm-12.904-2.9905h5.095c2.603 0 3.988-.9968 3.988-3.1013 0-2.1044-1.385-3.0459-3.988-3.0459h-5.095zm0 6.6456v6.5902h5.981c2.492 0 3.877-1.3291 3.877-3.2674 0-2.049-1.385-3.3228-3.877-3.3228zm43.786 13.9004h-8.362v-1.274c-.831.831-3.323 1.717-5.981 1.717-4.929 0-9.083-2.769-9.083-8.0301 0-4.818 4.154-7.9193 9.581-7.9193 2.049 0 4.486.6646 5.483 1.3845v-1.606c0-1.606-.942-2.9905-3.046-2.9905-1.606 0-2.548.7199-2.935 1.8275h-8.197c.72-4.8181 4.985-8.6393 11.409-8.6393 7.088 0 11.131 3.7659 11.131 10.2453zm-8.362-6.9779v-1.4399c-.554-1.0522-2.049-1.7167-3.655-1.7167-1.717 0-3.434.7199-3.434 2.3813 0 1.7168 1.717 2.4367 3.434 2.4367 1.606 0 3.101-.6645 3.655-1.6614zm27.996 6.9779v-1.994c-1.163 1.329-3.599 2.548-6.147 2.548-7.199 0-11.131-5.8151-11.131-13.0145s3.932-13.0143 11.131-13.0143c2.548 0 4.984 1.2184 6.147 2.5475v-13.0697h8.695v35.997zm0-9.1931v-6.5902c-.664-1.3291-2.159-2.326-3.821-2.326-2.99 0-4.763 2.4368-4.763 5.6488s1.773 5.5934 4.763 5.5934c1.717 0 3.157-.9415 3.821-2.326zm35.471-2.049h-3.101v11.2421h-8.806v-34.0033h15.285c7.31 0 12.35 4.1535 12.35 11.5744 0 5.1503-2.603 8.6947-6.757 10.2453l7.975 12.1836h-9.858zm-3.101-15.2849v8.1962h5.538c3.156 0 4.596-1.606 4.596-4.0981s-1.44-4.0981-4.596-4.0981zm36.957 17.8323h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.643 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.515-13.0143 7.643 0 11.962 5.095 11.962 12.5159v2.1598h-16.115c.277 2.9905 1.827 4.5965 4.32 4.5965 1.772 0 3.156-.7753 3.655-2.4921zm-3.822-10.0237c-2.049 0-3.433 1.2737-3.987 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.545-3.5997zm30.98 27.5234v-10.799c-1.163 1.329-3.6 2.548-6.147 2.548-7.2 0-11.132-5.9259-11.132-13.0145 0-7.144 3.932-13.0143 11.132-13.0143 2.547 0 4.984 1.2184 6.147 2.5475v-1.9937h8.695v33.726zm0-17.9981v-6.5902c-.665-1.3291-2.105-2.326-3.821-2.326-2.991 0-4.763 2.4368-4.763 5.6488s1.772 5.5934 4.763 5.5934c1.661 0 3.156-.9415 3.821-2.326zm36.789-15.7279v24.921h-8.695v-2.16c-1.329 1.551-3.821 2.714-6.646 2.714-5.482 0-8.75-3.5999-8.75-9.1379v-16.3371h8.64v14.288c0 2.1045.996 3.5997 3.212 3.5997 1.606 0 3.101-1.0522 3.544-2.769v-15.1187zm19.084 16.2263h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.643 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.515-13.0143 7.643 0 11.963 5.095 11.963 12.5159v2.1598h-16.116c.277 2.9905 1.828 4.5965 4.32 4.5965 1.772 0 3.156-.7753 3.655-2.4921zm-3.822-10.0237c-2.049 0-3.433 1.2737-3.987 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.545-3.5997zm13.428 11.0206h8.474c.387 1.3845 1.606 2.1598 3.156 2.1598 1.44 0 2.548-.5538 2.548-1.7168 0-.9414-.72-1.2737-1.939-1.5506l-4.873-.9969c-4.154-.886-6.867-2.8797-6.867-7.2547 0-5.3165 4.762-8.4178 10.633-8.4178 6.812 0 10.522 3.1567 11.297 8.0855h-8.03c-.277-1.0522-1.052-1.9937-3.046-1.9937-1.273 0-2.326.5538-2.326 1.6614 0 .7753.554 1.163 1.717 1.3845l4.929 1.163c4.541 1.0522 6.978 3.4335 6.978 7.4763 0 5.3168-4.818 8.2518-10.91 8.2518-6.369 0-10.965-2.88-11.741-8.2518zm27.538-.8861v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.205v6.7564h-5.205v8.307c0 1.9383.941 2.769 2.658 2.769.941 0 1.993-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.871 0-9.193-2.769-9.193-9.0819z" fill="#d30001"/></svg>
      </header>
      <article>
        <p><strong>The server cannot process the request due to a client error.</strong> Please check the request and try again. If you’re the application owner check the logs for more information.</p>
      </article>
    </main>

  </body>

</html>
</file>

<file path="public/404.html">
<!doctype html>

<html lang="en">

  <head>

    <title>The page you were looking for doesn’t exist (404 Not found)</title>

    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, width=device-width">
    <meta name="robots" content="noindex, nofollow">

    <style>

      *, *::before, *::after {
        box-sizing: border-box;
      }

      * {
        margin: 0;
      }

      html {
        font-size: 16px;
      }

      body {
        background: #FFF;
        color: #261B23;
        display: grid;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Aptos, Roboto, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: clamp(1rem, 2.5vw, 2rem);
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: 400;
        letter-spacing: -0.0025em;
        line-height: 1.4;
        min-height: 100vh;
        place-items: center;
        text-rendering: optimizeLegibility;
        -webkit-text-size-adjust: 100%;
      }

      a {
        color: inherit;
        font-weight: 700;
        text-decoration: underline;
        text-underline-offset: 0.0925em;
      }

      b, strong {
        font-weight: 700;
      }

      i, em {
        font-style: italic;
      }

      main {
        display: grid;
        gap: 1em;
        padding: 2em;
        place-items: center;
        text-align: center;
      }

      main header {
        width: min(100%, 12em);
      }

      main header svg {
        height: auto;
        max-width: 100%;
        width: 100%;
      }

      main article {
        width: min(100%, 30em);
      }

      main article p {
        font-size: 75%;
      }

      main article br {

        display: none;

        @media(min-width: 48em) {
          display: inline;
        }

      }

    </style>

  </head>

  <body>

    <!-- This file lives in public/404.html -->

    <main>
      <header>
        <svg height="172" viewBox="0 0 480 172" width="480" xmlns="http://www.w3.org/2000/svg"><path d="m124.48 3.00509-45.6889 100.02991h26.2239v-28.1168h38.119v28.1168h21.628v35.145h-21.628v30.82h-37.308v-30.82h-72.1833v-31.901l50.2851-103.27391zm115.583 168.69891c-40.822 0-64.884-35.146-64.884-85.7015 0-50.5554 24.062-85.700907 64.884-85.700907 40.823 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.061 85.7015-64.884 85.7015zm0-133.2831c-17.572 0-22.709 21.8984-22.709 47.5816 0 25.6835 5.137 47.5815 22.709 47.5815 17.303 0 22.71-21.898 22.71-47.5815 0-25.6832-5.407-47.5816-22.71-47.5816zm165.328-35.41581-45.689 100.02991h26.224v-28.1168h38.119v28.1168h21.628v35.145h-21.628v30.82h-37.308v-30.82h-72.184v-31.901l50.285-103.27391z" fill="#f0eff0"/><path d="m157.758 68.9967v34.0033h-7.199l-14.233-19.8814v19.8814h-8.584v-34.0033h8.307l13.125 18.7184v-18.7184zm28.454 21.5428c0 7.6978-5.15 13.0145-12.737 13.0145-7.532 0-12.738-5.3167-12.738-13.0145s5.206-13.0143 12.738-13.0143c7.587 0 12.737 5.3165 12.737 13.0143zm-8.528 0c0-3.4336-1.496-5.8703-4.209-5.8703-2.659 0-4.154 2.4367-4.154 5.8703s1.495 5.8149 4.154 5.8149c2.713 0 4.209-2.3813 4.209-5.8149zm13.184 3.8766v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.205v6.7564h-5.205v8.307c0 1.9383.941 2.769 2.658 2.769.941 0 1.994-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.87 0-9.193-2.769-9.193-9.0819zm37.027 8.5839h-8.806v-34.0033h23.924v7.6978h-15.118v6.7564h13.9v7.5316h-13.9zm41.876-12.4605c0 7.6978-5.15 13.0145-12.737 13.0145-7.532 0-12.738-5.3167-12.738-13.0145s5.206-13.0143 12.738-13.0143c7.587 0 12.737 5.3165 12.737 13.0143zm-8.529 0c0-3.4336-1.495-5.8703-4.208-5.8703-2.659 0-4.154 2.4367-4.154 5.8703s1.495 5.8149 4.154 5.8149c2.713 0 4.208-2.3813 4.208-5.8149zm35.337-12.4605v24.921h-8.695v-2.16c-1.329 1.551-3.821 2.714-6.646 2.714-5.482 0-8.75-3.5999-8.75-9.1379v-16.3371h8.64v14.288c0 2.1045.997 3.5997 3.212 3.5997 1.606 0 3.101-1.0522 3.544-2.769v-15.1187zm4.076 24.921v-24.921h8.694v2.1598c1.385-1.5506 3.822-2.7136 6.701-2.7136 5.538 0 8.806 3.5997 8.806 9.1377v16.3371h-8.639v-14.2327c0-2.049-1.053-3.5443-3.268-3.5443-1.717 0-3.156.9969-3.6 2.7136v15.0634zm44.113 0v-1.994c-1.163 1.329-3.6 2.548-6.147 2.548-7.2 0-11.132-5.8151-11.132-13.0145s3.932-13.0143 11.132-13.0143c2.547 0 4.984 1.2184 6.147 2.5475v-13.0697h8.695v35.997zm0-9.1931v-6.5902c-.665-1.3291-2.16-2.326-3.821-2.326-2.991 0-4.763 2.4368-4.763 5.6488s1.772 5.5934 4.763 5.5934c1.717 0 3.156-.9415 3.821-2.326z" fill="#d30001"/></svg>
      </header>
      <article>
        <p><strong>The page you were looking for doesn’t exist.</strong> You may have mistyped the address or the page may have moved. If you’re the application owner check the logs for more information.</p>
      </article>
    </main>

  </body>

</html>
</file>

<file path="public/406-unsupported-browser.html">
<!doctype html>

<html lang="en">

  <head>

    <title>Your browser is not supported (406 Not Acceptable)</title>

    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, width=device-width">
    <meta name="robots" content="noindex, nofollow">

    <style>

      *, *::before, *::after {
        box-sizing: border-box;
      }

      * {
        margin: 0;
      }

      html {
        font-size: 16px;
      }

      body {
        background: #FFF;
        color: #261B23;
        display: grid;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Aptos, Roboto, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: clamp(1rem, 2.5vw, 2rem);
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: 400;
        letter-spacing: -0.0025em;
        line-height: 1.4;
        min-height: 100vh;
        place-items: center;
        text-rendering: optimizeLegibility;
        -webkit-text-size-adjust: 100%;
      }

      a {
        color: inherit;
        font-weight: 700;
        text-decoration: underline;
        text-underline-offset: 0.0925em;
      }

      b, strong {
        font-weight: 700;
      }

      i, em {
        font-style: italic;
      }

      main {
        display: grid;
        gap: 1em;
        padding: 2em;
        place-items: center;
        text-align: center;
      }

      main header {
        width: min(100%, 12em);
      }

      main header svg {
        height: auto;
        max-width: 100%;
        width: 100%;
      }

      main article {
        width: min(100%, 30em);
      }

      main article p {
        font-size: 75%;
      }

      main article br {

        display: none;

        @media(min-width: 48em) {
          display: inline;
        }

      }

    </style>

  </head>

  <body>

    <!-- This file lives in public/406-unsupported-browser.html -->

    <main>
      <header>
        <svg height="172" viewBox="0 0 480 172" width="480" xmlns="http://www.w3.org/2000/svg"><path d="m124.48 3.00509-45.6889 100.02991h26.2239v-28.1168h38.119v28.1168h21.628v35.145h-21.628v30.82h-37.308v-30.82h-72.1833v-31.901l50.2851-103.27391zm115.583 168.69891c-40.822 0-64.884-35.146-64.884-85.7015 0-50.5554 24.062-85.700907 64.884-85.700907 40.823 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.061 85.7015-64.884 85.7015zm0-133.2831c-17.572 0-22.709 21.8984-22.709 47.5816 0 25.6835 5.137 47.5815 22.709 47.5815 17.303 0 22.71-21.898 22.71-47.5815 0-25.6832-5.407-47.5816-22.71-47.5816zm202.906 9.7326h-41.093c-2.433-7.2994-7.84-12.4361-17.302-12.4361-16.221 0-25.413 17.5728-25.954 34.8752v1.3517c5.137-7.0291 16.221-12.4361 30.82-12.4361 33.524 0 54.881 24.0612 54.881 53.7998 0 33.253-23.791 58.396-61.64 58.396-21.628 0-39.741-10.003-50.825-27.576-9.733-14.599-13.788-32.442-13.788-54.3406 0-51.9072 24.331-89.485807 66.236-89.485807 32.712 0 53.258 18.654107 58.665 47.851907zm-82.727 66.2355c0 13.247 9.463 22.439 22.71 22.439 12.977 0 22.439-9.192 22.439-22.439 0-13.517-9.462-22.7091-22.439-22.7091-13.247 0-22.71 9.1921-22.71 22.7091z" fill="#f0eff0"/><path d="m100.761 68.9967v34.0033h-7.1991l-14.2326-19.8814v19.8814h-8.5839v-34.0033h8.307l13.125 18.7184v-18.7184zm28.454 21.5428c0 7.6978-5.15 13.0145-12.737 13.0145-7.532 0-12.738-5.3167-12.738-13.0145s5.206-13.0143 12.738-13.0143c7.587 0 12.737 5.3165 12.737 13.0143zm-8.529 0c0-3.4336-1.495-5.8703-4.208-5.8703-2.659 0-4.154 2.4367-4.154 5.8703s1.495 5.8149 4.154 5.8149c2.713 0 4.208-2.3813 4.208-5.8149zm13.185 3.8766v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.205v6.7564h-5.205v8.307c0 1.9383.941 2.769 2.658 2.769.941 0 1.994-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.87 0-9.193-2.769-9.193-9.0819zm39.02-25.4194h9.083l12.958 34.0033h-9.027l-2.436-6.5902h-12.35l-2.381 6.5902h-8.806zm4.431 10.5222-3.489 9.5807h6.978zm17.44 11.0206c0-7.6978 5.095-13.0143 12.572-13.0143 6.701 0 10.854 3.9874 11.574 9.8023h-8.418c-.221-1.4953-1.384-2.6029-3.156-2.6029-2.437 0-3.988 2.2706-3.988 5.8149s1.551 5.7595 3.988 5.7595c1.772 0 2.935-1.0522 3.156-2.5475h8.418c-.72 5.7596-4.873 9.8025-11.574 9.8025-7.477 0-12.572-5.3167-12.572-13.0145zm25.676 0c0-7.6978 5.095-13.0143 12.572-13.0143 6.701 0 10.854 3.9874 11.574 9.8023h-8.418c-.221-1.4953-1.384-2.6029-3.156-2.6029-2.437 0-3.988 2.2706-3.988 5.8149s1.551 5.7595 3.988 5.7595c1.772 0 2.935-1.0522 3.156-2.5475h8.418c-.72 5.7596-4.873 9.8025-11.574 9.8025-7.477 0-12.572-5.3167-12.572-13.0145zm42.013 3.7658h8.031c-.887 5.7597-5.206 9.2487-11.686 9.2487-7.642 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.317-13.0143 12.516-13.0143 7.643 0 11.962 5.095 11.962 12.5159v2.1598h-16.115c.277 2.9905 1.827 4.5965 4.319 4.5965 1.773 0 3.157-.7753 3.655-2.4921zm-3.821-10.0237c-2.049 0-3.433 1.2737-3.987 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.545-3.5997zm23.4 16.7244v10.799h-8.694v-33.726h8.694v1.9937c1.163-1.3291 3.6-2.5475 6.148-2.5475 7.199 0 11.131 5.8703 11.131 13.0143 0 7.0886-3.932 13.0145-11.131 13.0145-2.548 0-4.985-1.219-6.148-2.548zm0-13.7893v6.5902c.665 1.3845 2.16 2.326 3.822 2.326 2.99 0 4.762-2.3814 4.762-5.5934s-1.772-5.6488-4.762-5.6488c-1.717 0-3.157.9969-3.822 2.326zm21.892 7.1994v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.206v6.7564h-5.206v8.307c0 1.9383.941 2.769 2.658 2.769.942 0 1.994-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.87 0-9.193-2.769-9.193-9.0819zm39.458 8.5839h-8.363v-1.274c-.83.831-3.322 1.717-5.981 1.717-4.928 0-9.082-2.769-9.082-8.0301 0-4.818 4.154-7.9193 9.581-7.9193 2.049 0 4.486.6646 5.482 1.3845v-1.606c0-1.606-.941-2.9905-3.045-2.9905-1.606 0-2.548.7199-2.936 1.8275h-8.196c.72-4.8181 4.984-8.6393 11.408-8.6393 7.089 0 11.132 3.7659 11.132 10.2453zm-8.363-6.9779v-1.4399c-.553-1.0522-2.049-1.7167-3.655-1.7167-1.716 0-3.433.7199-3.433 2.3813 0 1.7168 1.717 2.4367 3.433 2.4367 1.606 0 3.102-.6645 3.655-1.6614zm20.742 4.9839v1.994h-8.694v-35.997h8.694v13.0697c1.163-1.3291 3.6-2.5475 6.148-2.5475 7.199 0 11.131 5.8149 11.131 13.0143s-3.932 13.0145-11.131 13.0145c-2.548 0-4.985-1.219-6.148-2.548zm0-13.7893v6.5902c.665 1.3845 2.105 2.326 3.822 2.326 2.99 0 4.762-2.3814 4.762-5.5934s-1.772-5.6488-4.762-5.6488c-1.662 0-3.157.9969-3.822 2.326zm28.759-20.2137v35.997h-8.695v-35.997zm19.172 27.3023h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.643 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.516-13.0143 7.642 0 11.962 5.095 11.962 12.5159v2.1598h-16.116c.277 2.9905 1.828 4.5965 4.32 4.5965 1.772 0 3.157-.7753 3.655-2.4921zm-3.821-10.0237c-2.049 0-3.434 1.2737-3.988 3.5997h7.532c-.111-2.0491-1.384-3.5997-3.544-3.5997z" fill="#d30001"/></svg>
      </header>
      <article>
        <p><strong>Your browser is not supported.</strong><br> Please upgrade your browser to continue.</p>
      </article>
    </main>

  </body>

</html>
</file>

<file path="public/422.html">
<!doctype html>

<html lang="en">

  <head>

    <title>The change you wanted was rejected (422 Unprocessable Entity)</title>

    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, width=device-width">
    <meta name="robots" content="noindex, nofollow">

    <style>

      *, *::before, *::after {
        box-sizing: border-box;
      }

      * {
        margin: 0;
      }

      html {
        font-size: 16px;
      }

      body {
        background: #FFF;
        color: #261B23;
        display: grid;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Aptos, Roboto, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: clamp(1rem, 2.5vw, 2rem);
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: 400;
        letter-spacing: -0.0025em;
        line-height: 1.4;
        min-height: 100vh;
        place-items: center;
        text-rendering: optimizeLegibility;
        -webkit-text-size-adjust: 100%;
      }

      a {
        color: inherit;
        font-weight: 700;
        text-decoration: underline;
        text-underline-offset: 0.0925em;
      }

      b, strong {
        font-weight: 700;
      }

      i, em {
        font-style: italic;
      }

      main {
        display: grid;
        gap: 1em;
        padding: 2em;
        place-items: center;
        text-align: center;
      }

      main header {
        width: min(100%, 12em);
      }

      main header svg {
        height: auto;
        max-width: 100%;
        width: 100%;
      }

      main article {
        width: min(100%, 30em);
      }

      main article p {
        font-size: 75%;
      }

      main article br {

        display: none;

        @media(min-width: 48em) {
          display: inline;
        }

      }

    </style>

  </head>

  <body>

    <!-- This file lives in public/422.html -->

    <main>
      <header>
        <svg height="172" viewBox="0 0 480 172" width="480" xmlns="http://www.w3.org/2000/svg"><path d="m124.48 3.00509-45.6889 100.02991h26.2239v-28.1168h38.119v28.1168h21.628v35.145h-21.628v30.82h-37.308v-30.82h-72.1833v-31.901l50.2851-103.27391zm130.453 51.63681c0-8.9215-6.218-15.4099-15.681-15.4099-10.273 0-15.95 7.5698-16.491 16.4913h-44.608c3.244-30.8199 25.683-55.421707 61.099-55.421707 36.498 0 59.477 20.816907 59.477 51.636807 0 21.3577-14.869 36.7676-31.901 52.7186l-27.305 27.035h59.747v37.308h-120.306v-27.846l57.044-56.7736c11.084-11.8954 18.925-20.0059 18.925-29.7385zm140.455 0c0-8.9215-6.218-15.4099-15.68-15.4099-10.274 0-15.951 7.5698-16.492 16.4913h-44.608c3.245-30.8199 25.684-55.421707 61.1-55.421707 36.497 0 59.477 20.816907 59.477 51.636807 0 21.3577-14.87 36.7676-31.902 52.7186l-27.305 27.035h59.747v37.308h-120.305v-27.846l57.043-56.7736c11.085-11.8954 18.925-20.0059 18.925-29.7385z" fill="#f0eff0"/><path d="m19.3936 103.554c-8.9715 0-14.84183-5.0952-14.84183-14.4544v-20.1029h8.86083v19.3276c0 4.8181 2.2706 7.3102 5.981 7.3102 3.6551 0 5.9257-2.4921 5.9257-7.3102v-19.3276h8.8608v20.1583c0 9.3038-5.8149 14.399-14.7865 14.399zm18.734-.554v-24.921h8.6947v2.1598c1.3845-1.5506 3.8212-2.7136 6.701-2.7136 5.538 0 8.8054 3.5997 8.8054 9.1377v16.3371h-8.6393v-14.2327c0-2.049-1.0522-3.5443-3.2674-3.5443-1.7168 0-3.1567.9969-3.5997 2.7136v15.0634zm36.8584-1.994v10.799h-8.6946v-33.726h8.6946v1.9937c1.163-1.3291 3.5997-2.5475 6.1472-2.5475 7.1994 0 11.1314 5.8703 11.1314 13.0143 0 7.0886-3.932 13.0145-11.1314 13.0145-2.5475 0-4.9842-1.219-6.1472-2.548zm0-13.7893v6.5902c.6646 1.3845 2.1599 2.326 3.8213 2.326 2.9905 0 4.7626-2.3814 4.7626-5.5934s-1.7721-5.6488-4.7626-5.6488c-1.7168 0-3.1567.9969-3.8213 2.326zm36.789-9.2485v8.3624c-1.052-.5538-2.215-.7753-3.6-.7753-2.381 0-3.987 1.0522-4.43 2.8244v14.6203h-8.6949v-24.921h8.6949v2.2152c1.218-1.6614 3.156-2.769 5.648-2.769 1.108 0 1.994.2215 2.382.443zm26.769 12.5713c0 7.6978-5.15 13.0145-12.737 13.0145-7.532 0-12.738-5.3167-12.738-13.0145s5.206-13.0143 12.738-13.0143c7.587 0 12.737 5.3165 12.737 13.0143zm-8.528 0c0-3.4336-1.496-5.8703-4.209-5.8703-2.659 0-4.154 2.4367-4.154 5.8703s1.495 5.8149 4.154 5.8149c2.713 0 4.209-2.3813 4.209-5.8149zm10.352 0c0-7.6978 5.095-13.0143 12.571-13.0143 6.701 0 10.855 3.9874 11.574 9.8023h-8.417c-.222-1.4953-1.385-2.6029-3.157-2.6029-2.437 0-3.987 2.2706-3.987 5.8149s1.55 5.7595 3.987 5.7595c1.772 0 2.935-1.0522 3.157-2.5475h8.417c-.719 5.7596-4.873 9.8025-11.574 9.8025-7.476 0-12.571-5.3167-12.571-13.0145zm42.013 3.7658h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.643 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.516-13.0143 7.642 0 11.962 5.095 11.962 12.5159v2.1598h-16.116c.277 2.9905 1.828 4.5965 4.32 4.5965 1.772 0 3.156-.7753 3.655-2.4921zm-3.821-10.0237c-2.049 0-3.434 1.2737-3.988 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.544-3.5997zm13.428 11.0206h8.473c.387 1.3845 1.606 2.1598 3.156 2.1598 1.44 0 2.548-.5538 2.548-1.7168 0-.9414-.72-1.2737-1.938-1.5506l-4.874-.9969c-4.153-.886-6.867-2.8797-6.867-7.2547 0-5.3165 4.763-8.4178 10.633-8.4178 6.812 0 10.522 3.1567 11.297 8.0855h-8.03c-.277-1.0522-1.052-1.9937-3.046-1.9937-1.273 0-2.326.5538-2.326 1.6614 0 .7753.554 1.163 1.717 1.3845l4.929 1.163c4.541 1.0522 6.978 3.4335 6.978 7.4763 0 5.3168-4.818 8.2518-10.91 8.2518-6.369 0-10.965-2.88-11.74-8.2518zm24.269 0h8.474c.387 1.3845 1.606 2.1598 3.156 2.1598 1.44 0 2.548-.5538 2.548-1.7168 0-.9414-.72-1.2737-1.939-1.5506l-4.873-.9969c-4.154-.886-6.867-2.8797-6.867-7.2547 0-5.3165 4.763-8.4178 10.633-8.4178 6.812 0 10.522 3.1567 11.297 8.0855h-8.03c-.277-1.0522-1.052-1.9937-3.046-1.9937-1.273 0-2.326.5538-2.326 1.6614 0 .7753.554 1.163 1.717 1.3845l4.929 1.163c4.541 1.0522 6.978 3.4335 6.978 7.4763 0 5.3168-4.818 8.2518-10.91 8.2518-6.369 0-10.965-2.88-11.741-8.2518zm47.918 7.6978h-8.363v-1.274c-.831.831-3.323 1.717-5.981 1.717-4.929 0-9.082-2.769-9.082-8.0301 0-4.818 4.153-7.9193 9.581-7.9193 2.049 0 4.485.6646 5.482 1.3845v-1.606c0-1.606-.941-2.9905-3.046-2.9905-1.606 0-2.547.7199-2.935 1.8275h-8.196c.72-4.8181 4.984-8.6393 11.408-8.6393 7.089 0 11.132 3.7659 11.132 10.2453zm-8.363-6.9779v-1.4399c-.554-1.0522-2.049-1.7167-3.655-1.7167-1.717 0-3.434.7199-3.434 2.3813 0 1.7168 1.717 2.4367 3.434 2.4367 1.606 0 3.101-.6645 3.655-1.6614zm20.742 4.9839v1.994h-8.695v-35.997h8.695v13.0697c1.163-1.3291 3.6-2.5475 6.147-2.5475 7.2 0 11.132 5.8149 11.132 13.0143s-3.932 13.0145-11.132 13.0145c-2.547 0-4.984-1.219-6.147-2.548zm0-13.7893v6.5902c.665 1.3845 2.105 2.326 3.821 2.326 2.991 0 4.763-2.3814 4.763-5.5934s-1.772-5.6488-4.763-5.6488c-1.661 0-3.156.9969-3.821 2.326zm28.759-20.2137v35.997h-8.695v-35.997zm19.172 27.3023h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.643 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.515-13.0143 7.643 0 11.962 5.095 11.962 12.5159v2.1598h-16.115c.277 2.9905 1.827 4.5965 4.32 4.5965 1.772 0 3.156-.7753 3.655-2.4921zm-3.822-10.0237c-2.049 0-3.433 1.2737-3.987 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.545-3.5997zm25.461-15.2849h24.311v7.6424h-15.561v5.3165h14.232v7.4763h-14.232v5.8703h15.561v7.6978h-24.311zm27.942 34.0033v-24.921h8.694v2.1598c1.385-1.5506 3.822-2.7136 6.701-2.7136 5.538 0 8.806 3.5997 8.806 9.1377v16.3371h-8.639v-14.2327c0-2.049-1.053-3.5443-3.268-3.5443-1.717 0-3.157.9969-3.6 2.7136v15.0634zm29.991-8.5839v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.206v6.7564h-5.206v8.307c0 1.9383.941 2.769 2.658 2.769.942 0 1.994-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.87 0-9.193-2.769-9.193-9.0819zm26.161-16.3371v24.921h-8.694v-24.921zm.61-6.7564c0 2.8244-2.271 4.652-4.929 4.652s-4.929-1.8276-4.929-4.652c0-2.8797 2.271-4.7073 4.929-4.7073s4.929 1.8276 4.929 4.7073zm5.382 23.0935v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.584v6.8671h5.206v6.7564h-5.206v8.307c0 1.9383.941 2.769 2.658 2.769.941 0 1.994-.2216 2.769-.5538v7.3654c-.997.443-2.88.775-4.818.775-5.87 0-9.193-2.769-9.193-9.0819zm29.22 17.3889h-8.584l3.655-9.414-9.303-24.312h9.026l4.763 14.1773 4.652-14.1773h8.639z" fill="#d30001"/></svg>
      </header>
      <article>
        <p><strong>The change you wanted was rejected.</strong> Maybe you tried to change something you didn’t have access to. If you’re the application owner check the logs for more information.</p>
      </article>
    </main>

  </body>

</html>
</file>

<file path="public/500.html">
<!doctype html>

<html lang="en">

  <head>

    <title>We’re sorry, but something went wrong (500 Internal Server Error)</title>

    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1, width=device-width">
    <meta name="robots" content="noindex, nofollow">

    <style>

      *, *::before, *::after {
        box-sizing: border-box;
      }

      * {
        margin: 0;
      }

      html {
        font-size: 16px;
      }

      body {
        background: #FFF;
        color: #261B23;
        display: grid;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Aptos, Roboto, "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-size: clamp(1rem, 2.5vw, 2rem);
        -webkit-font-smoothing: antialiased;
        font-style: normal;
        font-weight: 400;
        letter-spacing: -0.0025em;
        line-height: 1.4;
        min-height: 100vh;
        place-items: center;
        text-rendering: optimizeLegibility;
        -webkit-text-size-adjust: 100%;
      }

      a {
        color: inherit;
        font-weight: 700;
        text-decoration: underline;
        text-underline-offset: 0.0925em;
      }

      b, strong {
        font-weight: 700;
      }

      i, em {
        font-style: italic;
      }

      main {
        display: grid;
        gap: 1em;
        padding: 2em;
        place-items: center;
        text-align: center;
      }

      main header {
        width: min(100%, 12em);
      }

      main header svg {
        height: auto;
        max-width: 100%;
        width: 100%;
      }

      main article {
        width: min(100%, 30em);
      }

      main article p {
        font-size: 75%;
      }

      main article br {

        display: none;

        @media(min-width: 48em) {
          display: inline;
        }

      }

    </style>

  </head>

  <body>

    <!-- This file lives in public/500.html -->

    <main>
      <header>
        <svg height="172" viewBox="0 0 480 172" width="480" xmlns="http://www.w3.org/2000/svg"><path d="m101.23 93.8427c-8.1103 0-15.4098 3.7849-19.7354 8.3813h-36.2269v-99.21891h103.8143v37.03791h-68.3984v24.8722c5.1366-2.7035 15.1396-5.9477 24.6014-5.9477 35.146 0 56.233 22.7094 56.233 55.4215 0 34.605-23.791 57.315-60.558 57.315-37.8492 0-61.64-22.169-63.8028-55.963h42.9857c1.0814 10.814 9.1919 19.195 21.6281 19.195 11.355 0 19.465-8.381 19.465-20.547 0-11.625-7.299-20.5463-20.006-20.5463zm138.833 77.8613c-40.822 0-64.884-35.146-64.884-85.7015 0-50.5554 24.062-85.700907 64.884-85.700907 40.823 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.061 85.7015-64.884 85.7015zm0-133.2831c-17.572 0-22.709 21.8984-22.709 47.5816 0 25.6835 5.137 47.5815 22.709 47.5815 17.303 0 22.71-21.898 22.71-47.5815 0-25.6832-5.407-47.5816-22.71-47.5816zm140.456 133.2831c-40.823 0-64.884-35.146-64.884-85.7015 0-50.5554 24.061-85.700907 64.884-85.700907 40.822 0 64.884 35.145507 64.884 85.700907 0 50.5555-24.062 85.7015-64.884 85.7015zm0-133.2831c-17.573 0-22.71 21.8984-22.71 47.5816 0 25.6835 5.137 47.5815 22.71 47.5815 17.302 0 22.709-21.898 22.709-47.5815 0-25.6832-5.407-47.5816-22.709-47.5816z" fill="#f0eff0"/><path d="m23.1377 68.9967v34.0033h-8.9162v-34.0033zm4.3157 34.0033v-24.921h8.6947v2.1598c1.3845-1.5506 3.8212-2.7136 6.701-2.7136 5.538 0 8.8054 3.5997 8.8054 9.1377v16.3371h-8.6393v-14.2327c0-2.049-1.0522-3.5443-3.2674-3.5443-1.7168 0-3.1567.9969-3.5997 2.7136v15.0634zm29.9913-8.5839v-9.5807h-3.655v-6.7564h3.655v-6.8671h8.5839v6.8671h5.2058v6.7564h-5.2058v8.307c0 1.9383.9415 2.769 2.6583 2.769.9414 0 1.9937-.2216 2.769-.5538v7.3654c-.9969.443-2.8798.775-4.8181.775-5.8703 0-9.1931-2.769-9.1931-9.0819zm32.3666-.1108h8.0301c-.8861 5.7597-5.2057 9.2487-11.6852 9.2487-7.6424 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.3165-13.0143 12.5159-13.0143 7.6424 0 11.9621 5.095 11.9621 12.5159v2.1598h-16.1156c.2769 2.9905 1.8275 4.5965 4.3196 4.5965 1.7722 0 3.1567-.7753 3.6551-2.4921zm-3.8212-10.0237c-2.0491 0-3.4336 1.2737-3.9874 3.5997h7.5317c-.1107-2.0491-1.3845-3.5997-3.5443-3.5997zm31.4299-6.3134v8.3624c-1.052-.5538-2.215-.7753-3.599-.7753-2.382 0-3.988 1.0522-4.431 2.8244v14.6203h-8.694v-24.921h8.694v2.2152c1.219-1.6614 3.157-2.769 5.649-2.769 1.108 0 1.994.2215 2.381.443zm2.949 25.0318v-24.921h8.694v2.1598c1.385-1.5506 3.821-2.7136 6.701-2.7136 5.538 0 8.806 3.5997 8.806 9.1377v16.3371h-8.64v-14.2327c0-2.049-1.052-3.5443-3.267-3.5443-1.717 0-3.157.9969-3.6 2.7136v15.0634zm50.371 0h-8.363v-1.274c-.83.831-3.323 1.717-5.981 1.717-4.929 0-9.082-2.769-9.082-8.0301 0-4.818 4.153-7.9193 9.581-7.9193 2.049 0 4.485.6646 5.482 1.3845v-1.606c0-1.606-.941-2.9905-3.046-2.9905-1.606 0-2.547.7199-2.935 1.8275h-8.196c.72-4.8181 4.984-8.6393 11.408-8.6393 7.089 0 11.132 3.7659 11.132 10.2453zm-8.363-6.9779v-1.4399c-.554-1.0522-2.049-1.7167-3.655-1.7167-1.717 0-3.433.7199-3.433 2.3813 0 1.7168 1.716 2.4367 3.433 2.4367 1.606 0 3.101-.6645 3.655-1.6614zm20.742-29.0191v35.997h-8.694v-35.997zm13.036 25.9178h9.248c.72 2.326 2.714 3.489 5.483 3.489 2.713 0 4.596-1.163 4.596-3.2674 0-1.6061-1.052-2.326-3.212-2.8244l-6.534-1.3845c-4.985-1.1076-8.751-3.7105-8.751-9.47 0-6.6456 5.538-11.0206 13.07-11.0206 8.307 0 13.014 4.5411 13.956 10.4114h-8.695c-.72-1.8829-2.27-3.3228-5.205-3.3228-2.548 0-4.265 1.1076-4.265 2.9905 0 1.4953 1.052 2.326 2.825 2.7137l6.645 1.5506c5.815 1.3845 9.027 4.5412 9.027 9.8023 0 6.9778-5.87 10.9654-13.291 10.9654-8.141 0-13.679-3.9322-14.897-10.6332zm46.509 1.3845h8.031c-.887 5.7597-5.206 9.2487-11.686 9.2487-7.642 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.317-13.0143 12.516-13.0143 7.643 0 11.962 5.095 11.962 12.5159v2.1598h-16.115c.277 2.9905 1.827 4.5965 4.319 4.5965 1.773 0 3.157-.7753 3.655-2.4921zm-3.821-10.0237c-2.049 0-3.433 1.2737-3.987 3.5997h7.532c-.111-2.0491-1.385-3.5997-3.545-3.5997zm31.431-6.3134v8.3624c-1.053-.5538-2.216-.7753-3.6-.7753-2.381 0-3.988 1.0522-4.431 2.8244v14.6203h-8.694v-24.921h8.694v2.2152c1.219-1.6614 3.157-2.769 5.649-2.769 1.108 0 1.994.2215 2.382.443zm18.288 25.0318h-7.809l-9.47-24.921h8.861l4.763 14.288 4.652-14.288h8.528zm25.614-8.6947h8.03c-.886 5.7597-5.206 9.2487-11.685 9.2487-7.642 0-12.682-5.2613-12.682-13.0145 0-7.6978 5.316-13.0143 12.516-13.0143 7.642 0 11.962 5.095 11.962 12.5159v2.1598h-16.116c.277 2.9905 1.828 4.5965 4.32 4.5965 1.772 0 3.157-.7753 3.655-2.4921zm-3.821-10.0237c-2.049 0-3.434 1.2737-3.988 3.5997h7.532c-.111-2.0491-1.384-3.5997-3.544-3.5997zm31.43-6.3134v8.3624c-1.052-.5538-2.215-.7753-3.6-.7753-2.381 0-3.987 1.0522-4.43 2.8244v14.6203h-8.695v-24.921h8.695v2.2152c1.218-1.6614 3.157-2.769 5.649-2.769 1.107 0 1.993.2215 2.381.443zm13.703-8.9715h24.312v7.6424h-15.562v5.3165h14.232v7.4763h-14.232v5.8703h15.562v7.6978h-24.312zm44.667 8.9715v8.3624c-1.052-.5538-2.215-.7753-3.6-.7753-2.381 0-3.987 1.0522-4.43 2.8244v14.6203h-8.695v-24.921h8.695v2.2152c1.218-1.6614 3.156-2.769 5.648-2.769 1.108 0 1.994.2215 2.382.443zm19.673 0v8.3624c-1.053-.5538-2.216-.7753-3.6-.7753-2.381 0-3.987 1.0522-4.43 2.8244v14.6203h-8.695v-24.921h8.695v2.2152c1.218-1.6614 3.156-2.769 5.648-2.769 1.108 0 1.994.2215 2.382.443zm26.769 12.5713c0 7.6978-5.15 13.0145-12.737 13.0145-7.532 0-12.738-5.3167-12.738-13.0145s5.206-13.0143 12.738-13.0143c7.587 0 12.737 5.3165 12.737 13.0143zm-8.529 0c0-3.4336-1.495-5.8703-4.208-5.8703-2.659 0-4.154 2.4367-4.154 5.8703s1.495 5.8149 4.154 5.8149c2.713 0 4.208-2.3813 4.208-5.8149zm28.082-12.5713v8.3624c-1.052-.5538-2.215-.7753-3.6-.7753-2.381 0-3.987 1.0522-4.43 2.8244v14.6203h-8.695v-24.921h8.695v2.2152c1.218-1.6614 3.157-2.769 5.649-2.769 1.107 0 1.993.2215 2.381.443z" fill="#d30001"/></svg>
      </header>
      <article>
        <p><strong>We’re sorry, but something went wrong.</strong><br> If you’re the application owner check the logs for more information.</p>
      </article>
    </main>

  </body>

</html>
</file>

<file path="public/icon.svg">
<svg width="512" height="512" xmlns="http://www.w3.org/2000/svg">
  <circle cx="256" cy="256" r="256" fill="red"/>
</svg>
</file>

<file path="test/application_system_test_case.rb">
# frozen_string_literal: true

require 'test_helper'

class ApplicationSystemTestCase < ActionDispatch::SystemTestCase
  driven_by :selenium, using: :headless_chrome, screen_size: [1400, 1400]
end
</file>

<file path="test/test_helper.rb">
# frozen_string_literal: true

ENV['RAILS_ENV'] ||= 'test'
require_relative '../config/environment'
require 'rails/test_help'

module ActiveSupport
  class TestCase
    # Run tests in parallel with specified workers
    parallelize(workers: :number_of_processors)

    # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
    fixtures :all

    # Add more helper methods to be used by all tests here...
    def sign_in_as(user)
      post(sign_in_url, params: { email: user.email, password: 'Secret1*3*5*' }); user
    end
  end
end
</file>

<file path="Rakefile">
# frozen_string_literal: true

# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.

require_relative 'config/application'

Rails.application.load_tasks
</file>

<file path=".github/dependabot.yml">
version: 2
updates:
  - package-ecosystem: bundler
    directory: "/"
    schedule:
      interval: daily
    open-pull-requests-limit: 10
  - package-ecosystem: github-actions
    directory: "/"
    schedule:
      interval: daily
    open-pull-requests-limit: 10
</file>

<file path="app/controllers/application_controller.rb">
# frozen_string_literal: true

class ApplicationController < ActionController::Base
  # Only allow modern browsers supporting webp images, web push, badges, import maps, CSS nesting, and CSS :has.
  allow_browser versions: :modern

  before_action :set_current_request_details
  before_action :authenticate
  layout false

  private

  def authenticate
    if (session_record = Session.find_by_id(cookies.signed[:session_token]))
      Current.session = session_record
    else
      redirect_to sign_in_path
    end
  end

  def set_current_request_details
    Current.user_agent = request.user_agent
    Current.ip_address = request.ip
  end
end
</file>

<file path="app/controllers/home_controller.rb">
# frozen_string_literal: true

class HomeController < ApplicationController
  def index
    render Views::Home::Index.new
  end

  def show
  end
end
</file>

<file path="app/frontend/entrypoints/application.css">
@import "../stylesheets/application.tailwind.css";
</file>

<file path="app/models/user.rb">
# frozen_string_literal: true

# == Schema Information
#
# Table name: users
#
#  id              :bigint           not null, primary key
#  email           :string           not null
#  password_digest :string           not null
#  verified        :boolean          default(FALSE), not null
#  created_at      :datetime         not null
#  updated_at      :datetime         not null
#
# Indexes
#
#  index_users_on_email  (email) UNIQUE
#
class User < ApplicationRecord
  has_secure_password

  has_one :profile, class_name: 'UserProfile', dependent: :destroy
  has_many :memberships, dependent: :destroy
  has_many :messages, dependent: :nullify

  has_many :owned_realms, class_name: 'Realm', foreign_key: 'user_id', dependent: :destroy

  # Polymorphic memberships - realms, etc.
  has_many :realms, through: :memberships, source: :membershipable, source_type: 'Realm'

  # Direct messages
  has_many :direct_message_participants, dependent: :destroy
  has_many :direct_message_threads, through: :direct_message_participants

  # Events
  has_many :events, dependent: :destroy
  has_many :event_participants, dependent: :destroy
  has_many :attending_events, through: :event_participants, source: :event

  # Friends
  has_many :friendships, class_name: 'Friend', dependent: :destroy
  has_many :friends, through: :friendships, source: :friend

  # Notifications
  has_many :notifications, dependent: :destroy

  delegate :username, to: :profile

  generates_token_for :email_verification, expires_in: 2.days do
    email
  end

  generates_token_for :password_reset, expires_in: 20.minutes do
    password_salt.last(10)
  end

  has_many :sessions, dependent: :destroy

  validates :email, presence: true, uniqueness: true, format: { with: URI::MailTo::EMAIL_REGEXP }
  validates :password, allow_nil: true, length: { minimum: 12 }

  normalizes :email, with: -> { _1.strip.downcase }

  before_validation if: :email_changed?, on: :update do
    self.verified = false
  end

  after_update if: :password_digest_previously_changed? do
    sessions.where.not(id: Current.session).delete_all
  end

  def admin_of?(membershipable)
    memberships.exists?(membershipable:, member_role: 'admin')
  end

  def moderator_of?(membershipable)
    memberships.exists?(membershipable:, member_role: ['admin', 'moderator'])
  end

  def member_of?(membershipable)
    memberships.exists?(membershipable:)
  end
end
</file>

<file path="bin/docker-entrypoint">
#!/bin/bash -e

# Enable jemalloc for reduced memory usage and latency.
if [ -z "${LD_PRELOAD+x}" ]; then
    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so.2 -print -quit)
    export LD_PRELOAD
fi

# If running the rails server then create or migrate existing database
if [ "${@: -2:1}" == "./bin/rails" ] && [ "${@: -1:1}" == "server" ]; then
  ./bin/rails db:prepare
fi

exec "${@}"
</file>

<file path="bin/rename_project">
#!/usr/bin/env ruby

require "fileutils"
require "colorize"

def gsub_in_file(path, from, to)
  text = File.read(path)
  replace = text.gsub(from, to)
  File.open(path, "w") { |file| file.puts replace }
end

def underscore(string)
  string.gsub("::", "/")
    .gsub(/([A-Z]+)([A-Z][a-z])/, '\1_\2')
    .gsub(/([a-z\d])([A-Z])/, '\1_\2')
    .tr("-", "_")
    .downcase
end

if ARGV.length != 1
  puts "Usage: bin/rename_project NewName"
  exit 1
end

new_name = ARGV[0]
new_snake_name = underscore(new_name)
new_upcase_name = new_snake_name.upcase

puts "Renaming to #{new_name}..."

gsub_in_file("config/application.rb", /module Shore/, "module #{new_name}")
gsub_in_file("app/helpers/application_helper.rb", /Shore/, new_name)
gsub_in_file("config/environment.rb", /Shore/, new_name)
gsub_in_file("config/environments/production.rb", /shore/, new_snake_name)
gsub_in_file("config/cable.yml", /shore/, new_snake_name)
gsub_in_file("config/database.yml", /SHORE/, new_upcase_name)
gsub_in_file("config/database.yml", /shore/, new_snake_name)

puts "Renamed the project to #{new_name}."
puts "Check the changes using git diff"
</file>

<file path="config/environments/production.rb">
# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.enable_reloading = false

  # Eager load code on boot for better performance and memory savings (ignored by Rake tasks).
  config.eager_load = true

  # Full error reports are disabled.
  config.consider_all_requests_local = false

  # Turn on fragment caching in view templates.
  config.action_controller.perform_caching = true

  # Cache assets for far-future expiry since they are all digest stamped.
  config.public_file_server.headers = { 'cache-control' => "public, max-age=#{1.year.to_i}" }

  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
  # config.asset_host = "http://assets.example.com"

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Assume all access to the app is happening through a SSL-terminating reverse proxy.
  config.assume_ssl = true

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  config.force_ssl = true

  # Skip http-to-https redirect for the default health check endpoint.
  # config.ssl_options = { redirect: { exclude: ->(request) { request.path == "/up" } } }

  # Log to STDOUT with the current request id as a default log tag.
  config.log_tags = [:request_id]
  config.logger   = ActiveSupport::TaggedLogging.logger(STDOUT)

  # Change to "debug" to log everything (including potentially personally-identifiable information!)
  config.log_level = ENV.fetch('RAILS_LOG_LEVEL', 'info')

  # Prevent health checks from clogging up the logs.
  config.silence_healthcheck_path = '/up'

  # Don't log any deprecations.
  config.active_support.report_deprecations = false

  # Replace the default in-process memory cache store with a durable alternative.
  config.cache_store = :solid_cache_store

  # Replace the default in-process and non-durable queuing backend for Active Job.
  config.active_job.queue_adapter = :solid_queue
  config.solid_queue.connects_to = { database: { writing: :queue } }

  # Ignore bad email addresses and do not raise email delivery errors.
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
  # config.action_mailer.raise_delivery_errors = false

  # Set host to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: 'example.com' }

  # Specify outgoing SMTP server. Remember to add smtp/* credentials via rails credentials:edit.
  # config.action_mailer.smtp_settings = {
  #   user_name: Rails.application.credentials.dig(:smtp, :user_name),
  #   password: Rails.application.credentials.dig(:smtp, :password),
  #   address: "smtp.example.com",
  #   port: 587,
  #   authentication: :plain
  # }

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation cannot be found).
  config.i18n.fallbacks = true

  # Do not dump schema after migrations.
  config.active_record.dump_schema_after_migration = false

  # Only use :id for inspections in production.
  config.active_record.attributes_for_inspect = [:id]

  # Enable DNS rebinding protection and other `Host` header attacks.
  # config.hosts = [
  #   "example.com",     # Allow requests from example.com
  #   /.*\.example\.com/ # Allow requests from subdomains like `www.example.com`
  # ]
  #
  # Skip DNS rebinding protection for the default health check endpoint.
  # config.host_authorization = { exclude: ->(request) { request.path == "/up" } }
end
</file>

<file path="config/environments/test.rb">
# frozen_string_literal: true

# The test environment is used exclusively to run your application's
# test suite. You never need to work with it otherwise. Remember that
# your test database is "scratch space" for the test suite and is wiped
# and recreated between test runs. Don't rely on the data there!

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # While tests run files are not watched, reloading is not necessary.
  config.enable_reloading = false

  # Eager loading loads your entire application. When running a single test locally,
  # this is usually not necessary, and can slow down your test suite. However, it's
  # recommended that you enable it in continuous integration systems to ensure eager
  # loading is working properly before deploying your code.
  config.eager_load = ENV['CI'].present?

  # Configure public file server for tests with cache-control for performance.
  config.public_file_server.headers = { 'cache-control' => 'public, max-age=3600' }

  # Show full error reports.
  config.consider_all_requests_local = true
  config.cache_store = :null_store

  # Render exception templates for rescuable exceptions and raise for other exceptions.
  config.action_dispatch.show_exceptions = :rescuable

  # Disable request forgery protection in test environment.
  config.action_controller.allow_forgery_protection = false

  # Store uploaded files on the local file system in a temporary directory.
  config.active_storage.service = :test

  # Tell Action Mailer not to deliver emails to the real world.
  # The :test delivery method accumulates sent emails in the
  # ActionMailer::Base.deliveries array.
  config.action_mailer.delivery_method = :test

  # Set host to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: 'example.com' }

  # Print deprecation notices to the stderr.
  config.active_support.deprecation = :stderr

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  # config.action_view.annotate_rendered_view_with_filenames = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true
end
</file>

<file path="config/initializers/content_security_policy.rb">
# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Define an application-wide content security policy.
# See the Securing Rails Applications Guide for more information:
# https://guides.rubyonrails.org/security.html#content-security-policy-header

# Rails.application.configure do
#   config.content_security_policy do |policy|
#     policy.default_src :self, :https
#     policy.font_src    :self, :https, :data
#     policy.img_src     :self, :https, :data
#     policy.object_src  :none
#     policy.script_src  :self, :https
# Allow @vite/client to hot reload javascript changes in development
#    policy.script_src *policy.script_src, :unsafe_eval, "http://#{ ViteRuby.config.host_with_port }" if Rails.env.development?

# You may need to enable this in production as well depending on your setup.
#    policy.script_src *policy.script_src, :blob if Rails.env.test?

#     policy.style_src   :self, :https
# Allow @vite/client to hot reload style changes in development
#    policy.style_src *policy.style_src, :unsafe_inline if Rails.env.development?

#     # Specify URI for violation reports
#     # policy.report_uri "/csp-violation-report-endpoint"
#   end
#
#   # Generate session nonces for permitted importmap, inline scripts, and inline styles.
#   config.content_security_policy_nonce_generator = ->(request) { request.session.id.to_s }
#   config.content_security_policy_nonce_directives = %w(script-src style-src)
#
#   # Report violations without enforcing the policy.
#   # config.content_security_policy_report_only = true
# end
</file>

<file path="config/application.rb">
# frozen_string_literal: true

require_relative 'boot'

require 'rails/all'

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

module RiftLink
  class Application < Rails::Application
    # Initialize configuration defaults for originally generated Rails version.
    config.load_defaults 8.0

    # Please, add to the `ignore` list any other `lib` subdirectories that do
    # not contain `.rb` files, or that should not be reloaded or eager loaded.
    # Common ones are `templates`, `generators`, or `middleware`, for example.
    config.autoload_lib(ignore: %w[assets tasks])

    # Configuration for the application, engines, and railties goes here.
    #
    # These settings can be overridden in specific environments using the files
    # in config/environments, which are processed later.
    #
    # config.time_zone = "Central Time (US & Canada)"
    # config.eager_load_paths << Rails.root.join("extras")
  end
end
</file>

<file path="config/credentials.yml.enc">
hC3QZkCbN19sbdTqMbfWFklyAUIlrF+r9KqB98ICcaWCKxY11sJa96G2oZEylrLc4RVZxBJM3Uze9K3oBxtoA3OGmWpmOFvMHzTSBX36rN9m/F6q09r/96KxFecZLZ8TyD0BCwSyr5vgIGO9SWYhBp8YXhmLFhR23Yw+iqhFMNLYgz9TRK3BHyvNBV7LDjUzgtNTVfH/xv7Nspox1wtFYV0FlYXFGzQA+XL+I5SYWyFjfkFq+9rBrHAI7PVlgz5kkbyq5gu24wT4M9lIIuSUdmIksT7dpQlT9tGzUgLKLvk7LuLMhM8uPbZNlVsK8gu+/wzalzGL6TA5BswPqwSnQsxfr06SsEhj58RHZmJy57KFTZrWa7pWmIDeGpNu5O44OXiN+7B99l1BAvIsBWnOIc9DaB+6MQ1g2ckxA1seHKFP8ko+JaTilGF4jx973k6c+HWhqEaOLwFWG1o9BPIpE9r4lJ8+l0pIMx38F08tVF941nHSmfViP5iD--Oe4lEgP4+Ad/YdoF--lnt45suoVPinhpdIFqJjgQ==
</file>

<file path=".env.sample">
POSTGRES_USERNAME=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=localhost
DATABASE_URL=postgres://username:password@localhost/dbname
RAILS_MAX_THREADS=5
PORT=3000
</file>

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# Temporary files generated by your text editor or operating system
# belong in git's global ignore instead:
# `$XDG_CONFIG_HOME/git/ignore` or `~/.config/git/ignore`

# Ignore bundler config.
/.bundle

# Ignore all environment files (except templates).
/.env

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore pidfiles, but keep the directory.
/tmp/pids/*
!/tmp/pids/
!/tmp/pids.keep

# Ignore storage (uploaded files in development and any SQLite databases).
/storage/*
!/storage/.keep
/tmp/storage/*
!/tmp/storage/
!/tmp/storage/.keep

/public/assets
/public/vite-dev
/app/assets/builds/*
!/app/assets/builds/.keep
/node_modules

# Ignore master key for decrypting credentials and more.
/config/master.key
/config/credentials/*.key

# Ignore other files
.byebug_history
yarn-error.log
yarn-debug.log*
.yarn-integrity
.DS_Store
.idea
*~
</file>

<file path="vite.config.mts">
import { defineConfig } from "vite";
import ViteRails from "vite-plugin-rails";
import tailwindcss from "@tailwindcss/vite";

export default defineConfig({
  plugins: [
    tailwindcss(),
    ViteRails({
      envVars: { RAILS_ENV: "development" },
      envOptions: { defineOn: "import.meta.env" },
      fullReload: {
        additionalPaths: ["config/routes.rb", "app/views/**/*", "app/components/**/*", "app/frontend/**/*"],
        delay: 300,
      },
    }),
  ],
  build: { sourcemap: false },
});
</file>

<file path="bin/dev">
#!/usr/bin/env sh

# Default to port 3000 if not specified
export PORT="${PORT:-3000}"

if ! command -v overmind 2>&1 >/dev/null; then
  gem install overmind
fi

exec overmind start -T -f Procfile.dev "$@"
</file>

<file path="config/environments/development.rb">
# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default Action Controller caching is disabled.
  # Run rails dev:cache to toggle Action Controller caching.
  if Rails.root.join('tmp/caching-dev.txt').exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true
    config.public_file_server.headers = { 'cache-control' => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
  end

  # Change to :null_store to avoid any caching.
  config.cache_store = :memory_store

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Set localhost to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  config.active_job.queue_adapter = :solid_queue

  config.solid_queue.connects_to = { database: { writing: :queue } }

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!
end
</file>

<file path="config/database.yml">
default: &default
  adapter: postgresql
  username: <%= ENV['POSTGRES_USERNAME'] || 'postgres' %>
  password: <%= ENV['POSTGRES_PASSWORD'] || 'postgres' %>
  host: <%= ENV['POSTGRES_HOST'] || 'localhost' %>
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  primary:
    <<: *default
    database: rift_link_development

  cache:
    <<: *default
    database: rift_link_development_cache
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: rift_link_development_queue
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: rift_link_development_cable
    migrations_paths: db/cable_migrate

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: rift_link_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  primary: &primary_production
    <<: *default
    database: rift_link_production
    url: <%= ENV["DATABASE_URL"] %>
  cache:
    <<: *primary_production
    database: rift_link_production_cache
    migrations_paths: db/cache_migrate
    url: <%= ENV["DATABASE_URL"] %>
  queue:
    <<: *primary_production
    database: rift_link_production_queue
    migrations_paths: db/queue_migrate
    url: <%= ENV["DATABASE_URL"] %>
  cable:
    <<: *primary_production
    database: rift_link_production_cable
    migrations_paths: db/cable_migrate
    url: <%= ENV["DATABASE_URL"] %>
</file>

<file path="config/routes.rb">
# frozen_string_literal: true

Rails.application.routes.draw do
  get  'sign_in', to: 'sessions#new'
  post 'sign_in', to: 'sessions#create'
  get  'sign_up', to: 'registrations#new'
  post 'sign_up', to: 'registrations#create'
  resources :sessions, only: [:index, :show, :destroy]
  resource  :password, only: [:edit, :update]
  namespace :identity do
    resource :email,              only: [:edit, :update]
    resource :email_verification, only: [:show, :create]
    resource :password_reset,     only: [:new, :edit, :create, :update]
  end
  root 'home#index'
  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html

  # Reveal health status on /up that returns 200 if the app boots with no exceptions, otherwise 500.
  # Can be used by load balancers and uptime monitors to verify that the app is live.
  get 'up' => 'rails/health#show', :as => :rails_health_check

  # Render dynamic PWA files from app/views/pwa/* (remember to link manifest in application.html.erb)
  # get "manifest" => "rails/pwa#manifest", as: :pwa_manifest
  # get "service-worker" => "rails/pwa#service_worker", as: :pwa_service_worker
  resources :realms do
    resources :channels do
      resources :messages, only: [:index, :create, :update, :destroy]
    end
    resources :events
    resources :memberships, only: [:index, :create, :update, :destroy]
  end

  # Direct messages
  resources :direct_message_threads, path: 'messages' do
    resources :messages, only: [:index, :create, :update, :destroy]
  end

  # Explore
  get 'explore/realms', to: 'explore#realms'
  get 'explore/users', to: 'explore#users', as: 'users'
  get 'explore/games', to: 'explore#games', as: 'games'

  # User related
  get 'settings', to: 'users#edit'
  patch 'settings', to: 'users#update'
  get 'profile', to: 'users#show'

  # Friends
  resources :friends, only: [:index, :create, :destroy] do
    collection do
      get 'requests'
      post 'accept/:id', to: 'friends#accept', as: 'accept'
      post 'reject/:id', to: 'friends#reject', as: 'reject'
    end
  end

  # Notifications
  resources :notifications, only: [:index, :update, :destroy] do
    collection do
      post 'mark_all_read'
    end
  end
  # Defines the root path route ("/")
  # root 'home#show'
end
</file>

<file path="db/schema.rb">
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[8.0].define(version: 2025_04_03_022640) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "pg_catalog.plpgsql"

  create_table "activities", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "action"
    t.string "target_name"
    t.string "target_type", null: false
    t.bigint "target_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["target_type", "target_id"], name: "index_activities_on_target"
    t.index ["user_id"], name: "index_activities_on_user_id"
  end

  create_table "applications", force: :cascade do |t|
    t.string "name"
    t.string "repo_url"
    t.string "hostname"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
  end

  create_table "channels", force: :cascade do |t|
    t.bigint "realm_id", null: false
    t.string "name"
    t.text "description"
    t.string "channel_type"
    t.boolean "is_private"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["realm_id"], name: "index_channels_on_realm_id"
  end

  create_table "components", force: :cascade do |t|
    t.string "name"
    t.string "kind"
    t.bigint "application_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["application_id"], name: "index_components_on_application_id"
  end

  create_table "direct_message_participants", force: :cascade do |t|
    t.bigint "direct_message_thread_id", null: false
    t.bigint "user_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["direct_message_thread_id"], name: "index_direct_message_participants_on_direct_message_thread_id"
    t.index ["user_id"], name: "index_direct_message_participants_on_user_id"
  end

  create_table "direct_message_threads", force: :cascade do |t|
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
  end

  create_table "event_participants", force: :cascade do |t|
    t.bigint "event_id", null: false
    t.bigint "user_id", null: false
    t.string "status"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["event_id"], name: "index_event_participants_on_event_id"
    t.index ["user_id"], name: "index_event_participants_on_user_id"
  end

  create_table "events", force: :cascade do |t|
    t.bigint "realm_id", null: false
    t.bigint "user_id", null: false
    t.string "title"
    t.text "description"
    t.datetime "start_time"
    t.datetime "end_time"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["realm_id"], name: "index_events_on_realm_id"
    t.index ["user_id"], name: "index_events_on_user_id"
  end

  create_table "friends", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.bigint "friend_id", null: false
    t.string "status"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["friend_id"], name: "index_friends_on_friend_id"
    t.index ["user_id"], name: "index_friends_on_user_id"
  end

  create_table "memberships", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "member_role"
    t.string "nickname"
    t.string "membershipable_type", null: false
    t.bigint "membershipable_id", null: false
    t.datetime "joined_at"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["membershipable_type", "membershipable_id"], name: "index_memberships_on_membershipable"
    t.index ["user_id"], name: "index_memberships_on_user_id"
  end

  create_table "messages", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.text "content"
    t.string "attachment_url"
    t.boolean "is_pinned"
    t.string "messageable_type", null: false
    t.bigint "messageable_id", null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["messageable_type", "messageable_id"], name: "index_messages_on_messageable"
    t.index ["user_id"], name: "index_messages_on_user_id"
  end

  create_table "notifications", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "source_type"
    t.string "source_id"
    t.string "notification_type"
    t.boolean "read"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_notifications_on_user_id"
  end

  create_table "realms", force: :cascade do |t|
    t.string "name"
    t.text "description"
    t.string "icon"
    t.string "banner"
    t.bigint "user_id", null: false
    t.boolean "is_public"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_realms_on_user_id"
  end

  create_table "sessions", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "user_agent"
    t.string "ip_address"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_sessions_on_user_id"
  end

  create_table "user_profiles", force: :cascade do |t|
    t.bigint "user_id", null: false
    t.string "username"
    t.string "display_name"
    t.string "avatar"
    t.text "bio"
    t.string "gaming_status"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["user_id"], name: "index_user_profiles_on_user_id"
  end

  create_table "users", force: :cascade do |t|
    t.string "email", null: false
    t.string "password_digest", null: false
    t.boolean "verified", default: false, null: false
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.index ["email"], name: "index_users_on_email", unique: true
  end

  add_foreign_key "activities", "users"
  add_foreign_key "channels", "realms"
  add_foreign_key "components", "applications"
  add_foreign_key "direct_message_participants", "direct_message_threads"
  add_foreign_key "direct_message_participants", "users"
  add_foreign_key "event_participants", "events"
  add_foreign_key "event_participants", "users"
  add_foreign_key "events", "realms"
  add_foreign_key "events", "users"
  add_foreign_key "friends", "friends"
  add_foreign_key "friends", "users"
  add_foreign_key "memberships", "users"
  add_foreign_key "messages", "users"
  add_foreign_key "notifications", "users"
  add_foreign_key "realms", "users"
  add_foreign_key "sessions", "users"
  add_foreign_key "user_profiles", "users"
end
</file>

<file path=".ruby-version">
ruby-3.4.2
</file>

<file path="bin/render-build.sh">
#!/usr/bin/env bash
# exit on error
set -o errexit

bundle install
bundle exec rails assets:precompile


# If you're using a Free instance type, you need to
# perform database migrations in the build command.
# Uncomment the following line:

bundle exec rails db:migrate
</file>

<file path=".dockerignore">
# See https://docs.docker.com/engine/reference/builder/#dockerignore-file for more about ignoring files.

# Ignore git directory.
/.git/
/.gitignore

# Ignore bundler config.
/.bundle

# Ignore all environment files.
/.env*

# Ignore all default key files.
/config/master.key
/config/credentials/*.key

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore pidfiles, but keep the directory.
/tmp/pids/*
!/tmp/pids/.keep

# Ignore storage (uploaded files in development and any SQLite databases).
/storage/*
!/storage/.keep
/tmp/storage/*
!/tmp/storage/.keep

# Ignore assets.
/node_modules/
/app/assets/builds/*
!/app/assets/builds/.keep
/public/assets

# Ignore CI service files.
/.github

# Ignore Kamal files.
/config/deploy*.yml
/.kamal

# Ignore development files
/.devcontainer

# Ignore Docker-related files
/.dockerignore
/Dockerfile*
</file>

<file path="Procfile">
web: bundle exec rails server -p $PORT -e $RAILS_ENV
worker: bin/jobs start
release: bundle exec rails db:migrate
</file>

<file path=".rubocop.yml">
inherit_from:
  - "https://www.goodcop.style/base.yml"

plugins:
  - rubocop-rails
  - rubocop-capybara

AllCops:
  TargetRubyVersion: 3.4
  NewCops: enable

Style/StringLiterals:
  EnforcedStyle: single_quotes

Style/ClassAndModuleChildren:
  EnforcedStyle: nested
</file>

<file path="package.json">
{
  "name": "shore",
  "private": "true",
  "devDependencies": {
    "@tailwindcss/vite": "^4.0.0",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.3",
    "rollup": "^4.32.1",
    "tailwindcss": "^4.0.0",
    "vite": "^6.2.1",
    "vite-plugin-rails": "^0.5.0",
    "vite-plugin-ruby": "^5.1.0",
    "vite-plugin-stimulus-hmr": "^3.0.0"
  },
  "dependencies": {
    "@hotwired/stimulus": "^3.2.2",
    "@hotwired/turbo-rails": "^8.0.12",
    "tailwindcss-animate": "^1.0.7"
  }
}
</file>

<file path="Procfile.dev">
vite: bin/vite dev
web: bin/rails s -p 3000
worker: bin/jobs start
</file>

<file path="bin/setup">
#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

APP_ROOT = File.expand_path('..', __dir__)

def system!(*)
  system(*, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies
  system('pnpm install --check-files')

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! 'bin/rails db:prepare'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  unless ARGV.include?('--skip-server')
    puts "\n== Starting development server =="
    STDOUT.flush # flush the output before exec(2) so that it displays
    exec 'bin/dev'
  end
end
</file>

<file path="Dockerfile">
# syntax=docker/dockerfile:1
# check=error=true

# This Dockerfile is designed for production, not development. Use with Kamal or build'n'run by hand:
# docker build -t shore .
# docker run -d -p 80:80 -e RAILS_MASTER_KEY=<value from config/master.key> --name shore shore

# For a containerized dev environment, see Dev Containers: https://guides.rubyonrails.org/getting_started_with_devcontainer.html

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version
ARG RUBY_VERSION=3.4.2
FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base

# Rails app lives here
WORKDIR /rails

# Install base packages
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Set production environment
ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development"

# Throw-away build stage to reduce size of final image
FROM base AS build

# Install packages needed to build gems and node modules
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential git libpq-dev node-gyp pkg-config python-is-python3 libyaml-dev && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install JavaScript dependencies
ARG NODE_VERSION=22.1.0
ENV PATH=/usr/local/node/bin:$PATH
RUN curl -sL https://github.com/nodenv/node-build/archive/master.tar.gz | tar xz -C /tmp/ && \
    /tmp/node-build-master/bin/node-build "${NODE_VERSION}" /usr/local/node && \
    rm -rf /tmp/node-build-master

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

# Install node modules
COPY package.json package-lock.json ./
RUN npm ci && \
    rm -rf ~/.npm

# Copy application code
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Precompiling assets for production without requiring secret RAILS_MASTER_KEY
RUN SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile


RUN rm -rf node_modules


# Final stage for app image
FROM base

# Copy built artifacts: gems, application
COPY --from=build "${BUNDLE_PATH}" "${BUNDLE_PATH}"
COPY --from=build /rails /rails

# Run and own only the runtime files as a non-root user for security
RUN groupadd --system --gid 1000 rails && \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \
    chown -R rails:rails db log storage tmp
USER 1000:1000

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# Start server via Thruster by default, this can be overwritten at runtime
EXPOSE 80
CMD ["./bin/thrust", "./bin/rails", "server"]
</file>

<file path="docs/installing_prerequisites.md">
# Requirements

## Ruby

Use a Ruby version manager like [rbenv](https://github.com/rbenv/rbenv?tab=readme-ov-file#using-package-managers) to install ruby.

1. Install rbenv

```
brew install rbenv ruby-build
```

2. Install ruby with the version in [.ruby-version](./../.ruby-version)

```
rbenv install 3.4.2
```

3. Check the version

```
ruby -v
```

```
ruby 3.4.2 (2025-02-15 revision d2930f8e7a) +YJIT +PRISM [arm64-darwin24]
```

## PostgreSQL

You can install PostgreSQL using [postgresapp.com](https://postgresapp.com) or Homebrew

### Using Homebrew

1. Install

```bash
brew install postgresql@17
```

2. Add `psql` to `$PATH`

```bash
echo 'export PATH="/opt/homebrew/opt/postgresql@17/bin:$PATH"' >> ~/.bashrc
```

3. Start the server

```bash
brew services start postgresql@17

```

4. Create a `postgres` user

```sql
createuser -s postgres
```

5. Set the password for postgres

```
psql postgres
```

Within psql

```sql
ALTER ROLE postgres WITH PASSWORD 'password';
```

### Using postgresapp.com

1. Visit [postgresapp.com](https://postgresapp.com) and download the app with PostgreSQL app.
2. Install the app.
3. Start the server and initialize the cluster using the UI

## Docker

Install docker using homebrew

```bash
brew install docker
```

The latest version of docker comes with docker-compose.

To install the docker desktop, visit https://www.docker.com/products/docker-desktop/
</file>

<file path="Gemfile">
# frozen_string_literal: true

source 'https://rubygems.org'

# Bundle edge Rails instead: gem "rails", github: "rails/rails", branch: "main"
gem 'rails', '~> 8.0.2'
# Use postgresql as the database for Active Record
gem 'pg', '~> 1.1'
# Use the Puma web server [https://github.com/puma/puma]
gem 'puma', '>= 5.0'
# Hotwire's SPA-like page accelerator [https://turbo.hotwired.dev]
gem 'turbo-rails'
# Hotwire's modest JavaScript framework [https://stimulus.hotwired.dev]
gem 'stimulus-rails'
# Vite.js integration in Ruby web apps [https://vite-ruby.netlify.app/]
gem 'vite_rails'
# Build JSON APIs with ease [https://github.com/rails/jbuilder]
gem 'jbuilder'

# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]
gem 'bcrypt', '~> 3.1.7'

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem 'tzinfo-data', platforms: %i[windows jruby]

# Use the database-backed adapters for Rails.cache, Active Job, and Action Cable
gem 'solid_cache'
gem 'solid_queue'
gem 'solid_cable'

# Reduces boot times through caching; required in config/boot.rb
gem 'bootsnap', require: false

# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]
# gem "image_processing", "~> 1.2"

gem 'dotenv', '~> 3.1'

gem 'literal'
gem 'phlex-icons'

group :development, :test do
  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem
  gem 'debug', platforms: %i[mri windows], require: 'debug/prelude'
  gem 'better_errors'
  gem 'binding_of_caller'
  # Static analysis for security vulnerabilities [https://brakemanscanner.org/]
  gem 'brakeman', require: false
  gem 'rubocop'
  gem 'rubocop-rails'
  gem 'rubocop-capybara'
end

group :development do
  # Use console on exceptions pages [https://github.com/rails/web-console]
  gem 'web-console'
  gem 'colorize'
  gem 'ruby_ui', require: false, github: 'ruby-ui/ruby_ui', branch: 'main'
  gem 'annotaterb'
end

group :test do
  # Use system testing [https://guides.rubyonrails.org/testing.html#system-testing]
  gem 'capybara'
  gem 'selenium-webdriver'
end

gem 'authentication-zero', '~> 4.0'

gem 'phlex-rails', '~> 2.1', :github => 'phlex-ruby/phlex-rails'

gem 'tailwind_merge', '~> 1.1'

gem 'kube-dsl', '~> 0.8.3'
</file>

<file path=".github/workflows/ci.yml">
name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
</file>

<file path="README.md">
<h1 align="left">
  <a href="#">
    <img src="https://github.com/yatish27/shore/assets/1014383/fbad8ed2-9510-4693-a342-4bafa515b164" width="128px"/>
  </a>

Shore

  <p align="left">
    <a href="https://github.com/yatish27/shore/actions">
      <img alt="Build Status" src="https://github.com/yatish27/shore/actions/workflows/ci.yml/badge.svg"/>
    </a>
    <a href="https://github.com/yatish27/shore/blob/master/LICENSE.txt">
      <img alt="License" src="https://img.shields.io/badge/license-MIT-428F7E.svg"/>
    </a>
    <a href="https://codeclimate.com/github/yatish27/shore/maintainability"><img src="https://api.codeclimate.com/v1/badges/1cd4e3f1c0a4c5af29b1/maintainability" /></a>
  </p>
</h1>

## Introduction

Shore is a Ruby on Rails template with modern stack to start your new project.

## Features

- **Ruby**: Ruby 3.4.2
- **Rails**: [Rails 8](https://rubyonrails.org)
- **PostgreSQL**: [PostgresSQL 17](https://www.postgresql.org)
- **Tailwind CSS**: Uses [Tailwind CSS v4](https://tailwindcss.com) for styling.
- **Vite Ruby**: Uses [Vite Ruby](https://vite-ruby.netlify.app) for asset management. It is based on [Vite.js](https://vitejs.dev). It replaces webpacker, jsbundling-rails, cssbundling-rails, importmaps and sprockets/propshaft.
- **Node/pnpm**: Uses Node and npm.
- **Solid Queue**: Uses [Solid Queue](https://github.com/rails/solid_queue) for background processing.
- **Minitest/FactoryBot**: Uses Rails' default testing library, minitest along with [Factorybot](https://github.com/thoughtbot/factory_bot).
- **Rubocop**: Auto-formats Ruby code with [rubocop](https://rubocop.org).
- **Prettier**: Auto-formats JavaScript and CSS code with [prettier](https://prettier.io).
- **Github Actions**: Uses Github Actions for continuous integration and deployment.
- **Deployment**: Supports deployment on [Heroku](https://www.heroku.com/platform) and [Render](https://render.com)

## Getting Started

### System Requirements

You will need the following to run the application.

- [**Ruby 3.4.2**](./docs/installing_prerequisites.md#ruby)
- [**PostgreSQL 17**](./docs/installing_prerequisites.md#postgresql)

Refer [here](./docs/installing_prerequisites.md) to install these dependencies

### Initial setup

- Shore is a preconfigured base Ruby on Rails application. You can clone this repository and add it to your repo.

  ```bash
  git clone git@github.com:yatish27/shore.git your_new_project_name
  cd your_new_project_name
  ```

- The application's default name is Shore. You can rename it to your desired new name. The name should be in camelcase.

  ```bash
  ./bin/rename_project YourNewProjectName
  ```

- Copy the `env.sample` to `.env`

  - The default username and password for database is set to `postgres` and `postgres`. You can override them in `.env` file.

- Run `bin/setup` to set up the application. It prepares the database and installs the required ruby gems and javascript packages. The script is idempotent, so you can run it multiple times.

  ```bash
  ./bin/setup
  ```

### Running the application

Start your application

```bash
./bin/dev
```

This runs overmind or foreman using the Procfile.dev. It starts the rails server, solid queue background job process and vite server.

Visit [http://localhost:3000](http://localhost:3000) to see the home page 🚀.

## Deployment

- Heroku
- Render

## Testing

Running all tests

```
./bin/rails test:all
```

Running a single test

```
./bin/rails test test/jobs/hello_world_job_test.rb
```

## License

Shore is released under the [MIT License](./LICENSE.txt).

## Contributing

PRs are welcome
</file>

</files>
